

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Sep 01 13:04:42 2022

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 1.42
    59                           ; Generated 13/04/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F46K22 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	nvCOMRAM
    94  00004A                     __pnvCOMRAM:
    95                           	opt stack 0
    96  00004A                     _timer1ReloadVal:
    97                           	opt stack 0
    98  00004A                     	ds	2
    99                           
   100                           	psect	nvBANK0
   101  0000E9                     __pnvBANK0:
   102                           	opt stack 0
   103  0000E9                     _eusart1TxBufferRemaining:
   104                           	opt stack 0
   105  0000E9                     	ds	1
   106  0000EA                     _timer0ReloadVal8bit:
   107                           	opt stack 0
   108  0000EA                     	ds	1
   109  0000                     _ANSELE	set	3900
   110  0000                     _ANSELD	set	3899
   111  0000                     _ANSELC	set	3898
   112  0000                     _ANSELB	set	3897
   113  0000                     _ANSELA	set	3896
   114  0000                     _TMR1	set	4046
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTDbits	set	3971
   117  0000                     _PORTBbits	set	3969
   118  0000                     _LATEbits	set	3981
   119  0000                     _RCREG1	set	4014
   120  0000                     _RC1STAbits	set	4011
   121  0000                     _TXREG1	set	4013
   122  0000                     _SPBRGH1	set	4016
   123  0000                     _SPBRG1	set	4015
   124  0000                     _TX1STA	set	4012
   125  0000                     _RC1STA	set	4011
   126  0000                     _BAUD1CON	set	4024
   127  0000                     _RCREG2	set	3956
   128  0000                     _RC2STAbits	set	3953
   129  0000                     _TXREG2	set	3955
   130  0000                     _SPBRGH2	set	3958
   131  0000                     _SPBRG2	set	3957
   132  0000                     _TX2STA	set	3954
   133  0000                     _RC2STA	set	3953
   134  0000                     _BAUD2CON	set	3952
   135  0000                     _SSP1BUF	set	4041
   136  0000                     _SSP1CON2bits	set	4037
   137  0000                     _SSP1CON1bits	set	4038
   138  0000                     _SSP1ADD	set	4040
   139  0000                     _SSP1CON3	set	4043
   140  0000                     _SSP1CON1	set	4038
   141  0000                     _SSP1STAT	set	4039
   142  0000                     _PORTAbits	set	3968
   143  0000                     _T0CONbits	set	4053
   144  0000                     _TMR0L	set	4054
   145  0000                     _TMR0H	set	4055
   146  0000                     _T0CON	set	4053
   147  0000                     _T1GCONbits	set	4044
   148  0000                     _T1CONbits	set	4045
   149  0000                     _TMR1L	set	4046
   150  0000                     _TMR1H	set	4047
   151  0000                     _T1GCON	set	4044
   152  0000                     _T1CON	set	4045
   153  0000                     _OSCTUNE	set	3995
   154  0000                     _OSCCON2	set	4050
   155  0000                     _OSCCON	set	4051
   156  0000                     _INTCONbits	set	4082
   157  0000                     _PIR3bits	set	4004
   158  0000                     _PIE3bits	set	4003
   159  0000                     _PIR2bits	set	4001
   160  0000                     _PIE2bits	set	4000
   161  0000                     _PIR1bits	set	3998
   162  0000                     _PIE1bits	set	3997
   163  0000                     _IPR3bits	set	4005
   164  0000                     _IPR2bits	set	4002
   165  0000                     _IPR1bits	set	3999
   166  0000                     _RCONbits	set	4048
   167  0000                     _INTCON2bits	set	4081
   168  0000                     _TRISE	set	3990
   169  0000                     _LATE	set	3981
   170  0000                     _TRISD	set	3989
   171  0000                     _LATD	set	3980
   172  0000                     _TRISC	set	3988
   173  0000                     _LATC	set	3979
   174  0000                     _WPUB	set	3937
   175  0000                     _TRISB	set	3987
   176  0000                     _LATB	set	3978
   177  0000                     _TRISA	set	3986
   178  0000                     _LATA	set	3977
   179  0000                     _ADCON0bits	set	4034
   180  0000                     _ADRESH	set	4036
   181  0000                     _ADRESL	set	4035
   182  0000                     _ADCON2	set	4032
   183  0000                     _ADCON1	set	4033
   184  0000                     _ADCON0	set	4034
   185  0000                     _LATD6	set	31846
   186  0000                     _TRISD6	set	31918
   187                           
   188                           	psect	smallconst
   189  001000                     __psmallconst:
   190                           	opt stack 0
   191  001000  00                 	db	0
   192  001001                     STR_1:
   193  001001  4F                 	db	79	;'O'
   194  001002  4C                 	db	76	;'L'
   195  001003  45                 	db	69	;'E'
   196  001004  44                 	db	68	;'D'
   197  001005  20                 	db	32
   198  001006  54                 	db	84	;'T'
   199  001007  45                 	db	69	;'E'
   200  001008  53                 	db	83	;'S'
   201  001009  54                 	db	84	;'T'
   202  00100A  00                 	db	0
   203                           
   204                           ; #config settings
   205  00100B  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           	psect	cinit
   208  001B04                     __pcinit:
   209                           	opt stack 0
   210  001B04                     start_initialization:
   211                           	opt stack 0
   212  001B04                     __initialization:
   213                           	opt stack 0
   214                           
   215                           ; Clear objects allocated to BANK1 (128 bytes)
   216  001B04  EE01  F000         	lfsr	0,__pbssBANK1
   217  001B08  0E80               	movlw	128
   218  001B0A                     clear_0:
   219  001B0A  6AEE               	clrf	postinc0,c
   220  001B0C  06E8               	decf	wreg,f,c
   221  001B0E  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK0 (118 bytes)
   224  001B10  EE00  F060         	lfsr	0,__pbssBANK0
   225  001B14  0E76               	movlw	118
   226  001B16                     clear_1:
   227  001B16  6AEE               	clrf	postinc0,c
   228  001B18  06E8               	decf	wreg,f,c
   229  001B1A  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to COMRAM (35 bytes)
   232  001B1C  EE00  F027         	lfsr	0,__pbssCOMRAM
   233  001B20  0E23               	movlw	35
   234  001B22                     clear_2:
   235  001B22  6AEE               	clrf	postinc0,c
   236  001B24  06E8               	decf	wreg,f,c
   237  001B26  E1FD               	bnz	clear_2
   238  001B28                     end_of_initialization:
   239                           	opt stack 0
   240  001B28                     __end_of__initialization:
   241                           	opt stack 0
   242  001B28  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  001B2A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  001B2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  001B2E  6EF8               	movwf	tblptru,c
   246  001B30  0100               	movlb	0
   247  001B32  EF06  F008         	goto	_main	;jump to C main() function
   248                           tblptru	equ	0xFF8
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  000027                     __pbssCOMRAM:
   254                           	opt stack 0
   255  000027                     I2C1_ISR@pi2c_buf_ptr:
   256                           	opt stack 0
   257  000027                     	ds	2
   258  000029                     _p_i2c1_current:
   259                           	opt stack 0
   260  000029                     	ds	2
   261  00002B                     _p_i2c1_trb_current:
   262                           	opt stack 0
   263  00002B                     	ds	2
   264  00002D                     TMR1_ISR@CountCallBack:
   265                           	opt stack 0
   266  00002D                     	ds	2
   267  00002F                     main@escaped:
   268                           	opt stack 0
   269  00002F                     	ds	1
   270  000030                     main@line:
   271                           	opt stack 0
   272  000030                     	ds	1
   273  000031                     main@columun:
   274                           	opt stack 0
   275  000031                     	ds	1
   276  000032                     main@recievedbefore:
   277                           	opt stack 0
   278  000032                     	ds	1
   279  000033                     main@recieveddata:
   280                           	opt stack 0
   281  000033                     	ds	1
   282  000034                     _not_of_before_data:
   283                           	opt stack 0
   284  000034                     	ds	1
   285  000035                     _eusart1RxCount:
   286                           	opt stack 0
   287  000035                     	ds	1
   288  000036                     _eusart1RxTail:
   289                           	opt stack 0
   290  000036                     	ds	1
   291  000037                     _eusart1RxHead:
   292                           	opt stack 0
   293  000037                     	ds	1
   294  000038                     _eusart1TxTail:
   295                           	opt stack 0
   296  000038                     	ds	1
   297  000039                     _eusart1TxHead:
   298                           	opt stack 0
   299  000039                     	ds	1
   300  00003A                     _eusart2RxCount:
   301                           	opt stack 0
   302  00003A                     	ds	1
   303  00003B                     _eusart2RxTail:
   304                           	opt stack 0
   305  00003B                     	ds	1
   306  00003C                     _eusart2RxHead:
   307                           	opt stack 0
   308  00003C                     	ds	1
   309  00003D                     _eusart2TxBufferRemaining:
   310                           	opt stack 0
   311  00003D                     	ds	1
   312  00003E                     _eusart2TxTail:
   313                           	opt stack 0
   314  00003E                     	ds	1
   315  00003F                     _eusart2TxHead:
   316                           	opt stack 0
   317  00003F                     	ds	1
   318  000040                     I2C1_ISR@i2c_10bit_address_restart:
   319                           	opt stack 0
   320  000040                     	ds	1
   321  000041                     I2C1_ISR@i2c_bytes_left:
   322                           	opt stack 0
   323  000041                     	ds	1
   324  000042                     _i2c1_trb_count:
   325                           	opt stack 0
   326  000042                     	ds	1
   327  000043                     _i2c1_state:
   328                           	opt stack 0
   329  000043                     	ds	1
   330  000044                     _subdata:
   331                           	opt stack 0
   332  000044                     	ds	1
   333  000045                     _waitCTS:
   334                           	opt stack 0
   335  000045                     	ds	1
   336  000046                     _tmrFlag:
   337                           	opt stack 0
   338  000046                     	ds	1
   339  000047                     I2C1_ISR@i2c_address:
   340                           	opt stack 0
   341  000047                     	ds	2
   342  000049                     I2C_M_write@status:
   343                           	opt stack 0
   344  000049                     	ds	1
   345                           tblptru	equ	0xFF8
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           
   349                           	psect	bssBANK0
   350  000060                     __pbssBANK0:
   351                           	opt stack 0
   352  000060                     _eusart2RxBuffer:
   353                           	opt stack 0
   354  000060                     	ds	64
   355  0000A0                     _str:
   356                           	opt stack 0
   357  0000A0                     	ds	16
   358  0000B0                     _eusart2TxBuffer:
   359                           	opt stack 0
   360  0000B0                     	ds	8
   361  0000B8                     _i2c1_object:
   362                           	opt stack 0
   363  0000B8                     	ds	7
   364  0000BF                     I2C_M_write@slaveTimeOut:
   365                           	opt stack 0
   366  0000BF                     	ds	2
   367  0000C1                     I2C_M_write@timeOut:
   368                           	opt stack 0
   369  0000C1                     	ds	2
   370  0000C3                     I2C1_MasterRead@trBlock:
   371                           	opt stack 0
   372  0000C3                     	ds	5
   373  0000C8                     I2C1_MasterWrite@trBlock:
   374                           	opt stack 0
   375  0000C8                     	ds	5
   376  0000CD                     _i2c1_tr_queue:
   377                           	opt stack 0
   378  0000CD                     	ds	5
   379  0000D2                     oled_data@write:
   380                           	opt stack 0
   381  0000D2                     	ds	2
   382  0000D4                     oled_cmd@write:
   383                           	opt stack 0
   384  0000D4                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           
   389                           	psect	bssBANK1
   390  000100                     __pbssBANK1:
   391                           	opt stack 0
   392  000100                     _eusart1RxBuffer:
   393                           	opt stack 0
   394  000100                     	ds	64
   395  000140                     _eusart1TxBuffer:
   396                           	opt stack 0
   397  000140                     	ds	64
   398                           tblptru	equ	0xFF8
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           	psect	cstackBANK0
   403  0000D6                     __pcstackBANK0:
   404                           	opt stack 0
   405  0000D6                     I2C_M_write@addr:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x0
   409  0000D6                     	ds	1
   410  0000D7                     oled_cmd@work:
   411                           	opt stack 0
   412  0000D7                     oled_data@work:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416  0000D7                     	ds	1
   417  0000D8                     ??_oled_init:
   418  0000D8                     ??_oled_contrast:
   419  0000D8                     ??_oled_clear:
   420  0000D8                     oled_position@col:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x2
   424  0000D8                     	ds	1
   425  0000D9                     oled_position@li:
   426                           	opt stack 0
   427  0000D9                     oled_contrast@cont:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x3
   431  0000D9                     	ds	1
   432  0000DA                     oled_str_disp@col:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x4
   436  0000DA                     	ds	1
   437  0000DB                     oled_str_disp@string:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x5
   441  0000DB                     	ds	2
   442  0000DD                     ??_oled_str_disp:
   443                           
   444                           ; 1 bytes @ 0x7
   445  0000DD                     	ds	2
   446  0000DF                     oled_str_disp@li:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x9
   450  0000DF                     	ds	1
   451  0000E0                     oled_str_disp@i:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0xA
   455  0000E0                     	ds	1
   456  0000E1                     ??_main:
   457                           
   458                           ; 1 bytes @ 0xB
   459  0000E1                     	ds	8
   460                           tblptru	equ	0xFF8
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           
   464                           	psect	cstackCOMRAM
   465  000001                     __pcstackCOMRAM:
   466                           	opt stack 0
   467  000001                     ??_I2C1_Stop:
   468  000001                     
   469                           ; 1 bytes @ 0x0
   470  000001                     	ds	2
   471  000003                     I2C1_Stop@completion_code:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x2
   475  000003                     	ds	1
   476  000004                     ??_I2C1_ISR:
   477                           
   478                           ; 1 bytes @ 0x3
   479  000004                     	ds	2
   480  000006                     ??_INTERRUPT_InterruptManager:
   481                           
   482                           ; 1 bytes @ 0x5
   483  000006                     	ds	14
   484  000014                     ?_ADC_GetConversion:
   485                           	opt stack 0
   486  000014                     EUSART1_Read@readValue:
   487                           	opt stack 0
   488  000014                     EUSART1_Write@txData:
   489                           	opt stack 0
   490  000014                     I2C1_MasterTRBInsert@ptrb_list:
   491                           	opt stack 0
   492  000014                     I2C1_MasterWriteTRBBuild@ptrb:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x13
   496  000014                     	ds	1
   497  000015                     ??_EUSART_CompWrite:
   498                           
   499                           ; 1 bytes @ 0x14
   500  000015                     	ds	1
   501  000016                     ??_ADC_GetConversion:
   502  000016                     EUSART_CompWrite@data:
   503                           	opt stack 0
   504  000016                     I2C1_MasterTRBInsert@pflag:
   505                           	opt stack 0
   506  000016                     I2C1_MasterWriteTRBBuild@pdata:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x15
   510  000016                     	ds	2
   511  000018                     ADC_GetConversion@channel:
   512                           	opt stack 0
   513  000018                     I2C1_MasterWriteTRBBuild@length:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x17
   517  000018                     	ds	1
   518  000019                     I2C1_MasterTRBInsert@count:
   519                           	opt stack 0
   520  000019                     I2C1_MasterWriteTRBBuild@address:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x18
   524  000019                     	ds	2
   525  00001B                     ??_I2C1_MasterWriteTRBBuild:
   526                           
   527                           ; 1 bytes @ 0x1A
   528  00001B                     	ds	2
   529  00001D                     I2C1_MasterWrite@pdata:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x1C
   533  00001D                     	ds	2
   534  00001F                     I2C1_MasterWrite@length:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x1E
   538  00001F                     	ds	1
   539  000020                     I2C1_MasterWrite@address:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x1F
   543  000020                     	ds	2
   544  000022                     I2C1_MasterWrite@pflag:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x21
   548  000022                     	ds	2
   549  000024                     I2C_M_write@wr:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x23
   553  000024                     	ds	2
   554  000026                     I2C_M_write@length:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x25
   558  000026                     	ds	1
   559  000027                     tblptru	equ	0xFF8
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           
   563                           ; 1 bytes @ 0x26
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 263 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        8 bytes
   588 ;; Hardware stack levels required when called:    9
   589 ;; This function calls:
   590 ;;		_ADC_GetConversion
   591 ;;		_EUSART1_Read
   592 ;;		_EUSART1_Write
   593 ;;		_EUSART_CompWrite
   594 ;;		_SYSTEM_Initialize
   595 ;;		_oled_clear
   596 ;;		_oled_contrast
   597 ;;		_oled_data
   598 ;;		_oled_init
   599 ;;		_oled_position
   600 ;;		_oled_str_disp
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text0
   607  00100C                     __ptext0:
   608                           	opt stack 0
   609  00100C                     _main:
   610                           	opt stack 22
   611                           
   612                           ;main.c: 266: SYSTEM_Initialize();
   613                           
   614                           ;incstack = 0
   615  00100C  EC4A  F00E         	call	_SYSTEM_Initialize	;wreg free
   616                           
   617                           ;main.c: 271: (INTCONbits.GIE = 1);
   618  001010  8EF2               	bsf	intcon,7,c	;volatile
   619                           
   620                           ;main.c: 274: (INTCONbits.PEIE = 1);
   621  001012  8CF2               	bsf	intcon,6,c	;volatile
   622                           
   623                           ;main.c: 283: LATEbits.LATE2=0;
   624  001014  948D               	bcf	3981,2,c	;volatile
   625                           
   626                           ;main.c: 285: PORTAbits.RA4=0;
   627  001016  9880               	bcf	3968,4,c	;volatile
   628                           
   629                           ;main.c: 287: TRISD6 = 1;
   630  001018  8C95               	bsf	3989,6,c	;volatile
   631                           
   632                           ;main.c: 288: LATD6 = 0;
   633  00101A  9C8C               	bcf	3980,6,c	;volatile
   634                           
   635                           ;main.c: 291: _delay((unsigned long)((5)*(64000000/4000.0)));
   636  00101C  0E68               	movlw	104
   637  00101E  0100               	movlb	0	; () banked
   638  001020  6FE1               	movwf	??_main& (0+255),b
   639  001022  0EE4               	movlw	228
   640  001024                     u3227:
   641  001024  2EE8               	decfsz	wreg,f,c
   642  001026  D7FE               	bra	u3227
   643  001028  2FE1               	decfsz	??_main& (0+255),f,b
   644  00102A  D7FC               	bra	u3227
   645  00102C  F000               	nop	
   646                           
   647                           ;main.c: 292: oled_init();
   648  00102E  ECD2  F00C         	call	_oled_init	;wreg free
   649                           
   650                           ;main.c: 293: oled_contrast(0xFF);
   651  001032  0EFF               	movlw	255
   652  001034  ECF1  F00C         	call	_oled_contrast
   653                           
   654                           ;main.c: 294: oled_str_disp(0, 0, "OLED TEST");
   655  001038  0E00               	movlw	0
   656  00103A  0100               	movlb	0	; () banked
   657  00103C  6FDA               	movwf	oled_str_disp@col& (0+255),b
   658  00103E  0E01               	movlw	low STR_1
   659  001040  0100               	movlb	0	; () banked
   660  001042  6FDB               	movwf	oled_str_disp@string& (0+255),b
   661  001044  0E10               	movlw	high STR_1
   662  001046  0100               	movlb	0	; () banked
   663  001048  6FDC               	movwf	(oled_str_disp@string+1)& (0+255),b
   664  00104A  0E00               	movlw	0
   665  00104C  EC81  F00B         	call	_oled_str_disp
   666  001050                     l2845:
   667                           
   668                           ;main.c: 296: if (tmrFlag) {
   669  001050  5046               	movf	_tmrFlag,w,c
   670  001052  B4D8               	btfsc	status,2,c
   671  001054  D165               	goto	l2853
   672                           
   673                           ;main.c: 297: tmrFlag = 0;
   674  001056  0E00               	movlw	0
   675  001058  6E46               	movwf	_tmrFlag,c
   676                           
   677                           ;main.c: 298: EUSART1_Write('S');
   678  00105A  0E53               	movlw	83
   679  00105C  EC43  F00C         	call	_EUSART1_Write
   680                           
   681                           ;main.c: 299: not_of_before_data = 0x05;
   682  001060  0E05               	movlw	5
   683  001062  6E34               	movwf	_not_of_before_data,c
   684                           
   685                           ;main.c: 300: EUSART_CompWrite((PORTBbits.RB0 << 7) | (PORTDbits.RD3 << 6) | (PORTCbits.
      +                          RC0 << 5) | (PORTDbits.RD4 << 4)
   686                           ;main.c: 301: | (PORTCbits.RC1 << 3) | (PORTCbits.RC5 << 2) | (PORTDbits.RD5 << 1) | (PO
      +                          RTDbits.RD2 << 0));
   687  001064  A483               	btfss	3971,2,c	;volatile
   688  001066  D004               	goto	u2700
   689  001068  0100               	movlb	0	; () banked
   690  00106A  6BE1               	clrf	??_main& (0+255),b
   691  00106C  2BE1               	incf	??_main& (0+255),f,b
   692  00106E  D002               	goto	u2708
   693  001070                     u2700:
   694  001070  0100               	movlb	0	; () banked
   695  001072  6BE1               	clrf	??_main& (0+255),b
   696  001074                     u2708:
   697  001074  AA83               	btfss	3971,5,c	;volatile
   698  001076  D004               	goto	u2710
   699  001078  0E02               	movlw	2
   700  00107A  0100               	movlb	0	; () banked
   701  00107C  6FE2               	movwf	(??_main+1)& (0+255),b
   702  00107E  D002               	goto	u2725
   703  001080                     u2710:
   704  001080  0100               	movlb	0	; () banked
   705  001082  6BE2               	clrf	(??_main+1)& (0+255),b
   706  001084                     u2725:
   707  001084  AA82               	btfss	3970,5,c	;volatile
   708  001086  D004               	goto	u2730
   709  001088  0E04               	movlw	4
   710  00108A  0100               	movlb	0	; () banked
   711  00108C  6FE3               	movwf	(??_main+2)& (0+255),b
   712  00108E  D002               	goto	u2745
   713  001090                     u2730:
   714  001090  0100               	movlb	0	; () banked
   715  001092  6BE3               	clrf	(??_main+2)& (0+255),b
   716  001094                     u2745:
   717  001094  A282               	btfss	3970,1,c	;volatile
   718  001096  D004               	goto	u2750
   719  001098  0E08               	movlw	8
   720  00109A  0100               	movlb	0	; () banked
   721  00109C  6FE4               	movwf	(??_main+3)& (0+255),b
   722  00109E  D002               	goto	u2765
   723  0010A0                     u2750:
   724  0010A0  0100               	movlb	0	; () banked
   725  0010A2  6BE4               	clrf	(??_main+3)& (0+255),b
   726  0010A4                     u2765:
   727  0010A4  A883               	btfss	3971,4,c	;volatile
   728  0010A6  D004               	goto	u2770
   729  0010A8  0E10               	movlw	16
   730  0010AA  0100               	movlb	0	; () banked
   731  0010AC  6FE5               	movwf	(??_main+4)& (0+255),b
   732  0010AE  D002               	goto	u2785
   733  0010B0                     u2770:
   734  0010B0  0100               	movlb	0	; () banked
   735  0010B2  6BE5               	clrf	(??_main+4)& (0+255),b
   736  0010B4                     u2785:
   737  0010B4  A082               	btfss	3970,0,c	;volatile
   738  0010B6  D004               	goto	u2790
   739  0010B8  0E20               	movlw	32
   740  0010BA  0100               	movlb	0	; () banked
   741  0010BC  6FE6               	movwf	(??_main+5)& (0+255),b
   742  0010BE  D002               	goto	u2805
   743  0010C0                     u2790:
   744  0010C0  0100               	movlb	0	; () banked
   745  0010C2  6BE6               	clrf	(??_main+5)& (0+255),b
   746  0010C4                     u2805:
   747  0010C4  A683               	btfss	3971,3,c	;volatile
   748  0010C6  D004               	goto	u2810
   749  0010C8  0E40               	movlw	64
   750  0010CA  0100               	movlb	0	; () banked
   751  0010CC  6FE7               	movwf	(??_main+6)& (0+255),b
   752  0010CE  D002               	goto	u2825
   753  0010D0                     u2810:
   754  0010D0  0100               	movlb	0	; () banked
   755  0010D2  6BE7               	clrf	(??_main+6)& (0+255),b
   756  0010D4                     u2825:
   757  0010D4  A081               	btfss	3969,0,c	;volatile
   758  0010D6  D004               	goto	u2830
   759  0010D8  0E80               	movlw	128
   760  0010DA  0100               	movlb	0	; () banked
   761  0010DC  6FE8               	movwf	(??_main+7)& (0+255),b
   762  0010DE  D002               	goto	u2845
   763  0010E0                     u2830:
   764  0010E0  0100               	movlb	0	; () banked
   765  0010E2  6BE8               	clrf	(??_main+7)& (0+255),b
   766  0010E4                     u2845:
   767  0010E4  0100               	movlb	0	; () banked
   768  0010E6  51E8               	movf	(??_main+7)& (0+255),w,b
   769  0010E8  0100               	movlb	0	; () banked
   770  0010EA  11E7               	iorwf	(??_main+6)& (0+255),w,b
   771  0010EC  0100               	movlb	0	; () banked
   772  0010EE  11E6               	iorwf	(??_main+5)& (0+255),w,b
   773  0010F0  0100               	movlb	0	; () banked
   774  0010F2  11E5               	iorwf	(??_main+4)& (0+255),w,b
   775  0010F4  0100               	movlb	0	; () banked
   776  0010F6  11E4               	iorwf	(??_main+3)& (0+255),w,b
   777  0010F8  0100               	movlb	0	; () banked
   778  0010FA  11E3               	iorwf	(??_main+2)& (0+255),w,b
   779  0010FC  0100               	movlb	0	; () banked
   780  0010FE  11E2               	iorwf	(??_main+1)& (0+255),w,b
   781  001100  0100               	movlb	0	; () banked
   782  001102  11E1               	iorwf	??_main& (0+255),w,b
   783  001104  EC9B  F00D         	call	_EUSART_CompWrite
   784                           
   785                           ;main.c: 302: EUSART_CompWrite((PORTAbits.RA0 << 7) | (PORTAbits.RA1 << 6) | (PORTDbits.
      +                          RD0 << 5) | (PORTDbits.RD1 << 4)
   786                           ;main.c: 303: | (PORTBbits.RB4 << 3) | (PORTBbits.RB2 << 2) | (PORTDbits.RD6 << 1) | (PO
      +                          RTCbits.RC2 << 0));
   787  001108  A482               	btfss	3970,2,c	;volatile
   788  00110A  D004               	goto	u2850
   789  00110C  0100               	movlb	0	; () banked
   790  00110E  6BE1               	clrf	??_main& (0+255),b
   791  001110  2BE1               	incf	??_main& (0+255),f,b
   792  001112  D002               	goto	u2858
   793  001114                     u2850:
   794  001114  0100               	movlb	0	; () banked
   795  001116  6BE1               	clrf	??_main& (0+255),b
   796  001118                     u2858:
   797  001118  AC83               	btfss	3971,6,c	;volatile
   798  00111A  D004               	goto	u2860
   799  00111C  0E02               	movlw	2
   800  00111E  0100               	movlb	0	; () banked
   801  001120  6FE2               	movwf	(??_main+1)& (0+255),b
   802  001122  D002               	goto	u2875
   803  001124                     u2860:
   804  001124  0100               	movlb	0	; () banked
   805  001126  6BE2               	clrf	(??_main+1)& (0+255),b
   806  001128                     u2875:
   807  001128  A481               	btfss	3969,2,c	;volatile
   808  00112A  D004               	goto	u2880
   809  00112C  0E04               	movlw	4
   810  00112E  0100               	movlb	0	; () banked
   811  001130  6FE3               	movwf	(??_main+2)& (0+255),b
   812  001132  D002               	goto	u2895
   813  001134                     u2880:
   814  001134  0100               	movlb	0	; () banked
   815  001136  6BE3               	clrf	(??_main+2)& (0+255),b
   816  001138                     u2895:
   817  001138  A881               	btfss	3969,4,c	;volatile
   818  00113A  D004               	goto	u2900
   819  00113C  0E08               	movlw	8
   820  00113E  0100               	movlb	0	; () banked
   821  001140  6FE4               	movwf	(??_main+3)& (0+255),b
   822  001142  D002               	goto	u2915
   823  001144                     u2900:
   824  001144  0100               	movlb	0	; () banked
   825  001146  6BE4               	clrf	(??_main+3)& (0+255),b
   826  001148                     u2915:
   827  001148  A283               	btfss	3971,1,c	;volatile
   828  00114A  D004               	goto	u2920
   829  00114C  0E10               	movlw	16
   830  00114E  0100               	movlb	0	; () banked
   831  001150  6FE5               	movwf	(??_main+4)& (0+255),b
   832  001152  D002               	goto	u2935
   833  001154                     u2920:
   834  001154  0100               	movlb	0	; () banked
   835  001156  6BE5               	clrf	(??_main+4)& (0+255),b
   836  001158                     u2935:
   837  001158  A083               	btfss	3971,0,c	;volatile
   838  00115A  D004               	goto	u2940
   839  00115C  0E20               	movlw	32
   840  00115E  0100               	movlb	0	; () banked
   841  001160  6FE6               	movwf	(??_main+5)& (0+255),b
   842  001162  D002               	goto	u2955
   843  001164                     u2940:
   844  001164  0100               	movlb	0	; () banked
   845  001166  6BE6               	clrf	(??_main+5)& (0+255),b
   846  001168                     u2955:
   847  001168  A280               	btfss	3968,1,c	;volatile
   848  00116A  D004               	goto	u2960
   849  00116C  0E40               	movlw	64
   850  00116E  0100               	movlb	0	; () banked
   851  001170  6FE7               	movwf	(??_main+6)& (0+255),b
   852  001172  D002               	goto	u2975
   853  001174                     u2960:
   854  001174  0100               	movlb	0	; () banked
   855  001176  6BE7               	clrf	(??_main+6)& (0+255),b
   856  001178                     u2975:
   857  001178  A080               	btfss	3968,0,c	;volatile
   858  00117A  D004               	goto	u2980
   859  00117C  0E80               	movlw	128
   860  00117E  0100               	movlb	0	; () banked
   861  001180  6FE8               	movwf	(??_main+7)& (0+255),b
   862  001182  D002               	goto	u2995
   863  001184                     u2980:
   864  001184  0100               	movlb	0	; () banked
   865  001186  6BE8               	clrf	(??_main+7)& (0+255),b
   866  001188                     u2995:
   867  001188  0100               	movlb	0	; () banked
   868  00118A  51E8               	movf	(??_main+7)& (0+255),w,b
   869  00118C  0100               	movlb	0	; () banked
   870  00118E  11E7               	iorwf	(??_main+6)& (0+255),w,b
   871  001190  0100               	movlb	0	; () banked
   872  001192  11E6               	iorwf	(??_main+5)& (0+255),w,b
   873  001194  0100               	movlb	0	; () banked
   874  001196  11E5               	iorwf	(??_main+4)& (0+255),w,b
   875  001198  0100               	movlb	0	; () banked
   876  00119A  11E4               	iorwf	(??_main+3)& (0+255),w,b
   877  00119C  0100               	movlb	0	; () banked
   878  00119E  11E3               	iorwf	(??_main+2)& (0+255),w,b
   879  0011A0  0100               	movlb	0	; () banked
   880  0011A2  11E2               	iorwf	(??_main+1)& (0+255),w,b
   881  0011A4  0100               	movlb	0	; () banked
   882  0011A6  11E1               	iorwf	??_main& (0+255),w,b
   883  0011A8  EC9B  F00D         	call	_EUSART_CompWrite
   884                           
   885                           ;main.c: 305: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_LHorizon) >> 2));
   886  0011AC  0E02               	movlw	2
   887  0011AE  ECB3  F00D         	call	_ADC_GetConversion
   888  0011B2  90D8               	bcf	status,0,c
   889  0011B4  3215               	rrcf	?_ADC_GetConversion+1,f,c
   890  0011B6  3214               	rrcf	?_ADC_GetConversion,f,c
   891  0011B8  90D8               	bcf	status,0,c
   892  0011BA  3215               	rrcf	?_ADC_GetConversion+1,f,c
   893  0011BC  3214               	rrcf	?_ADC_GetConversion,f,c
   894  0011BE  5014               	movf	?_ADC_GetConversion,w,c
   895  0011C0  0800               	sublw	0
   896  0011C2  0100               	movlb	0	; () banked
   897  0011C4  6FE1               	movwf	??_main& (0+255),b
   898  0011C6  0100               	movlb	0	; () banked
   899  0011C8  05E1               	decf	??_main& (0+255),w,b
   900  0011CA  EC9B  F00D         	call	_EUSART_CompWrite
   901                           
   902                           ;main.c: 306: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_LVertical) >> 2));
   903  0011CE  0E03               	movlw	3
   904  0011D0  ECB3  F00D         	call	_ADC_GetConversion
   905  0011D4  90D8               	bcf	status,0,c
   906  0011D6  3215               	rrcf	?_ADC_GetConversion+1,f,c
   907  0011D8  3214               	rrcf	?_ADC_GetConversion,f,c
   908  0011DA  90D8               	bcf	status,0,c
   909  0011DC  3215               	rrcf	?_ADC_GetConversion+1,f,c
   910  0011DE  3214               	rrcf	?_ADC_GetConversion,f,c
   911  0011E0  5014               	movf	?_ADC_GetConversion,w,c
   912  0011E2  0800               	sublw	0
   913  0011E4  0100               	movlb	0	; () banked
   914  0011E6  6FE1               	movwf	??_main& (0+255),b
   915  0011E8  0100               	movlb	0	; () banked
   916  0011EA  05E1               	decf	??_main& (0+255),w,b
   917  0011EC  EC9B  F00D         	call	_EUSART_CompWrite
   918                           
   919                           ;main.c: 308: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_RHorizon) >> 2));
   920  0011F0  0E05               	movlw	5
   921  0011F2  ECB3  F00D         	call	_ADC_GetConversion
   922  0011F6  90D8               	bcf	status,0,c
   923  0011F8  3215               	rrcf	?_ADC_GetConversion+1,f,c
   924  0011FA  3214               	rrcf	?_ADC_GetConversion,f,c
   925  0011FC  90D8               	bcf	status,0,c
   926  0011FE  3215               	rrcf	?_ADC_GetConversion+1,f,c
   927  001200  3214               	rrcf	?_ADC_GetConversion,f,c
   928  001202  5014               	movf	?_ADC_GetConversion,w,c
   929  001204  0800               	sublw	0
   930  001206  0100               	movlb	0	; () banked
   931  001208  6FE1               	movwf	??_main& (0+255),b
   932  00120A  0100               	movlb	0	; () banked
   933  00120C  05E1               	decf	??_main& (0+255),w,b
   934  00120E  EC9B  F00D         	call	_EUSART_CompWrite
   935                           
   936                           ;main.c: 309: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_RVertical) >> 2));
   937  001212  0E06               	movlw	6
   938  001214  ECB3  F00D         	call	_ADC_GetConversion
   939  001218  90D8               	bcf	status,0,c
   940  00121A  3215               	rrcf	?_ADC_GetConversion+1,f,c
   941  00121C  3214               	rrcf	?_ADC_GetConversion,f,c
   942  00121E  90D8               	bcf	status,0,c
   943  001220  3215               	rrcf	?_ADC_GetConversion+1,f,c
   944  001222  3214               	rrcf	?_ADC_GetConversion,f,c
   945  001224  5014               	movf	?_ADC_GetConversion,w,c
   946  001226  0800               	sublw	0
   947  001228  0100               	movlb	0	; () banked
   948  00122A  6FE1               	movwf	??_main& (0+255),b
   949  00122C  0100               	movlb	0	; () banked
   950  00122E  05E1               	decf	??_main& (0+255),w,b
   951  001230  EC9B  F00D         	call	_EUSART_CompWrite
   952                           
   953                           ;main.c: 311: EUSART_CompWrite((PORTAbits.RA5 << 7) | (PORTBbits.RB1 << 6) | ((1 - PORTB
      +                          bits.RB5) << 1) | (PORTBbits.RB3 << 0));
   954  001234  A681               	btfss	3969,3,c	;volatile
   955  001236  D004               	goto	u3000
   956  001238  0100               	movlb	0	; () banked
   957  00123A  6BE1               	clrf	??_main& (0+255),b
   958  00123C  2BE1               	incf	??_main& (0+255),f,b
   959  00123E  D002               	goto	u3008
   960  001240                     u3000:
   961  001240  0100               	movlb	0	; () banked
   962  001242  6BE1               	clrf	??_main& (0+255),b
   963  001244                     u3008:
   964  001244  A281               	btfss	3969,1,c	;volatile
   965  001246  D004               	goto	u3010
   966  001248  0E40               	movlw	64
   967  00124A  0100               	movlb	0	; () banked
   968  00124C  6FE2               	movwf	(??_main+1)& (0+255),b
   969  00124E  D002               	goto	u3025
   970  001250                     u3010:
   971  001250  0100               	movlb	0	; () banked
   972  001252  6BE2               	clrf	(??_main+1)& (0+255),b
   973  001254                     u3025:
   974  001254  AA80               	btfss	3968,5,c	;volatile
   975  001256  D004               	goto	u3030
   976  001258  0E80               	movlw	128
   977  00125A  0100               	movlb	0	; () banked
   978  00125C  6FE3               	movwf	(??_main+2)& (0+255),b
   979  00125E  D002               	goto	u3045
   980  001260                     u3030:
   981  001260  0100               	movlb	0	; () banked
   982  001262  6BE3               	clrf	(??_main+2)& (0+255),b
   983  001264                     u3045:
   984  001264  0100               	movlb	0	; () banked
   985  001266  51E3               	movf	(??_main+2)& (0+255),w,b
   986  001268  0100               	movlb	0	; () banked
   987  00126A  11E2               	iorwf	(??_main+1)& (0+255),w,b
   988  00126C  0100               	movlb	0	; () banked
   989  00126E  6FE4               	movwf	(??_main+3)& (0+255),b
   990  001270  AA81               	btfss	3969,5,c	;volatile
   991  001272  D002               	goto	u3050
   992  001274  0E01               	movlw	1
   993  001276  D001               	goto	u3056
   994  001278                     u3050:
   995  001278  0E00               	movlw	0
   996  00127A                     u3056:
   997  00127A  0800               	sublw	0
   998  00127C  0100               	movlb	0	; () banked
   999  00127E  6FE5               	movwf	(??_main+4)& (0+255),b
  1000  001280  0100               	movlb	0	; () banked
  1001  001282  90D8               	bcf	status,0,c
  1002  001284  35E5               	rlcf	(??_main+4)& (0+255),w,b
  1003  001286  0F02               	addlw	2
  1004  001288  0100               	movlb	0	; () banked
  1005  00128A  11E4               	iorwf	(??_main+3)& (0+255),w,b
  1006  00128C  0100               	movlb	0	; () banked
  1007  00128E  11E1               	iorwf	??_main& (0+255),w,b
  1008  001290  EC9B  F00D         	call	_EUSART_CompWrite
  1009                           
  1010                           ;main.c: 312: EUSART_CompWrite((PORTAbits.RA0 << 5) | (PORTAbits.RA0 << 4) | (PORTAbits.
      +                          RA0 << 3) | (PORTAbits.RA0 << 2) | (PORTAbits.RA0 << 1) | (PORTAbits.RA0 << 0));
  1011  001294  A080               	btfss	3968,0,c	;volatile
  1012  001296  D004               	goto	u3060
  1013  001298  0100               	movlb	0	; () banked
  1014  00129A  6BE1               	clrf	??_main& (0+255),b
  1015  00129C  2BE1               	incf	??_main& (0+255),f,b
  1016  00129E  D002               	goto	u3068
  1017  0012A0                     u3060:
  1018  0012A0  0100               	movlb	0	; () banked
  1019  0012A2  6BE1               	clrf	??_main& (0+255),b
  1020  0012A4                     u3068:
  1021  0012A4  A080               	btfss	3968,0,c	;volatile
  1022  0012A6  D004               	goto	u3070
  1023  0012A8  0E02               	movlw	2
  1024  0012AA  0100               	movlb	0	; () banked
  1025  0012AC  6FE2               	movwf	(??_main+1)& (0+255),b
  1026  0012AE  D002               	goto	u3085
  1027  0012B0                     u3070:
  1028  0012B0  0100               	movlb	0	; () banked
  1029  0012B2  6BE2               	clrf	(??_main+1)& (0+255),b
  1030  0012B4                     u3085:
  1031  0012B4  A080               	btfss	3968,0,c	;volatile
  1032  0012B6  D004               	goto	u3090
  1033  0012B8  0E04               	movlw	4
  1034  0012BA  0100               	movlb	0	; () banked
  1035  0012BC  6FE3               	movwf	(??_main+2)& (0+255),b
  1036  0012BE  D002               	goto	u3105
  1037  0012C0                     u3090:
  1038  0012C0  0100               	movlb	0	; () banked
  1039  0012C2  6BE3               	clrf	(??_main+2)& (0+255),b
  1040  0012C4                     u3105:
  1041  0012C4  A080               	btfss	3968,0,c	;volatile
  1042  0012C6  D004               	goto	u3110
  1043  0012C8  0E08               	movlw	8
  1044  0012CA  0100               	movlb	0	; () banked
  1045  0012CC  6FE4               	movwf	(??_main+3)& (0+255),b
  1046  0012CE  D002               	goto	u3125
  1047  0012D0                     u3110:
  1048  0012D0  0100               	movlb	0	; () banked
  1049  0012D2  6BE4               	clrf	(??_main+3)& (0+255),b
  1050  0012D4                     u3125:
  1051  0012D4  A080               	btfss	3968,0,c	;volatile
  1052  0012D6  D004               	goto	u3130
  1053  0012D8  0E10               	movlw	16
  1054  0012DA  0100               	movlb	0	; () banked
  1055  0012DC  6FE5               	movwf	(??_main+4)& (0+255),b
  1056  0012DE  D002               	goto	u3145
  1057  0012E0                     u3130:
  1058  0012E0  0100               	movlb	0	; () banked
  1059  0012E2  6BE5               	clrf	(??_main+4)& (0+255),b
  1060  0012E4                     u3145:
  1061  0012E4  A080               	btfss	3968,0,c	;volatile
  1062  0012E6  D004               	goto	u3150
  1063  0012E8  0E20               	movlw	32
  1064  0012EA  0100               	movlb	0	; () banked
  1065  0012EC  6FE6               	movwf	(??_main+5)& (0+255),b
  1066  0012EE  D002               	goto	u3165
  1067  0012F0                     u3150:
  1068  0012F0  0100               	movlb	0	; () banked
  1069  0012F2  6BE6               	clrf	(??_main+5)& (0+255),b
  1070  0012F4                     u3165:
  1071  0012F4  0100               	movlb	0	; () banked
  1072  0012F6  51E6               	movf	(??_main+5)& (0+255),w,b
  1073  0012F8  0100               	movlb	0	; () banked
  1074  0012FA  11E5               	iorwf	(??_main+4)& (0+255),w,b
  1075  0012FC  0100               	movlb	0	; () banked
  1076  0012FE  11E4               	iorwf	(??_main+3)& (0+255),w,b
  1077  001300  0100               	movlb	0	; () banked
  1078  001302  11E3               	iorwf	(??_main+2)& (0+255),w,b
  1079  001304  0100               	movlb	0	; () banked
  1080  001306  11E2               	iorwf	(??_main+1)& (0+255),w,b
  1081  001308  0100               	movlb	0	; () banked
  1082  00130A  11E1               	iorwf	??_main& (0+255),w,b
  1083  00130C  EC9B  F00D         	call	_EUSART_CompWrite
  1084                           
  1085                           ;main.c: 313: EUSART1_Write(0x30 | (not_of_before_data &0x0f));
  1086  001310  5034               	movf	_not_of_before_data,w,c
  1087  001312  0B0F               	andlw	15
  1088  001314  0930               	iorlw	48
  1089  001316  EC43  F00C         	call	_EUSART1_Write
  1090                           
  1091                           ;main.c: 314: EUSART1_Write('C');
  1092  00131A  0E43               	movlw	67
  1093  00131C  EC43  F00C         	call	_EUSART1_Write
  1094  001320                     l2853:
  1095                           
  1096                           ;main.c: 318: }
  1097                           ;main.c: 323: if ((eusart1RxCount)) {
  1098  001320  5035               	movf	_eusart1RxCount,w,c	;volatile
  1099  001322  B4D8               	btfsc	status,2,c
  1100  001324  D695               	goto	l2845
  1101                           
  1102                           ;main.c: 324: static uint8_t recieveddata;
  1103                           ;main.c: 325: static uint8_t recievedbefore = '\0';
  1104                           ;main.c: 326: static uint8_t columun = 0;
  1105                           ;main.c: 327: static uint8_t line = 0;
  1106                           ;main.c: 328: static uint8_t escaped = 0;
  1107                           ;main.c: 329: recieveddata = EUSART1_Read();
  1108  001326  EC68  F00D         	call	_EUSART1_Read	;wreg free
  1109  00132A  6E33               	movwf	main@recieveddata,c
  1110                           
  1111                           ;main.c: 330: if (!escaped) {
  1112  00132C  502F               	movf	main@escaped,w,c
  1113  00132E  B4D8               	btfsc	status,2,c
  1114  001330  D020               	goto	l2875
  1115  001332  D029               	goto	l2877
  1116  001334                     l2861:
  1117                           
  1118                           ;main.c: 333: oled_clear();
  1119  001334  EC88  F00E         	call	_oled_clear	;wreg free
  1120                           
  1121                           ;main.c: 334: oled_position(line = 0, columun = 0);
  1122  001338  0E00               	movlw	0
  1123  00133A  6E31               	movwf	main@columun,c
  1124  00133C  C031  F0D8         	movff	main@columun,oled_position@col
  1125  001340  0E00               	movlw	0
  1126  001342  6E30               	movwf	main@line,c
  1127  001344  5030               	movf	main@line,w,c
  1128  001346  EC95  F00E         	call	_oled_position
  1129                           
  1130                           ;main.c: 335: break;
  1131  00134A  D01F               	goto	l676
  1132  00134C                     l2863:
  1133                           
  1134                           ;main.c: 337: oled_position(line = recieveddata, columun = 0);
  1135  00134C  0E00               	movlw	0
  1136  00134E  6E31               	movwf	main@columun,c
  1137  001350  C031  F0D8         	movff	main@columun,oled_position@col
  1138  001354  C033  F030         	movff	main@recieveddata,main@line
  1139  001358  5030               	movf	main@line,w,c
  1140  00135A  EC95  F00E         	call	_oled_position
  1141  00135E  D007               	goto	l2869
  1142  001360                     l2867:
  1143                           
  1144                           ;main.c: 341: oled_position(line, columun = recieveddata);
  1145  001360  C033  F031         	movff	main@recieveddata,main@columun
  1146  001364  C031  F0D8         	movff	main@columun,oled_position@col
  1147  001368  5030               	movf	main@line,w,c
  1148  00136A  EC95  F00E         	call	_oled_position
  1149  00136E                     l2869:
  1150                           
  1151                           ;main.c: 342: escaped = 1;
  1152  00136E  0E01               	movlw	1
  1153  001370  D00B               	goto	L1
  1154  001372                     l2875:
  1155  001372  5032               	movf	main@recievedbefore,w,c
  1156                           
  1157                           ; Switch size 1, requested type "space"
  1158                           ; Number of cases is 3, Range of values is 0 to 18
  1159                           ; switch strategies available:
  1160                           ; Name         Instructions Cycles
  1161                           ; simple_byte           10     6 (average)
  1162                           ;	Chosen strategy is simple_byte
  1163  001374  0A00               	xorlw	0	; case 0
  1164  001376  B4D8               	btfsc	status,2,c
  1165  001378  D7DD               	goto	l2861
  1166  00137A  0A11               	xorlw	17	; case 17
  1167  00137C  B4D8               	btfsc	status,2,c
  1168  00137E  D7E6               	goto	l2863
  1169  001380  0A03               	xorlw	3	; case 18
  1170  001382  B4D8               	btfsc	status,2,c
  1171  001384  D7ED               	goto	l2867
  1172  001386                     l2877:
  1173                           
  1174                           ;main.c: 349: escaped = 0;
  1175  001386  0E00               	movlw	0
  1176  001388                     L1:
  1177  001388  6E2F               	movwf	main@escaped,c
  1178  00138A                     l676:
  1179                           
  1180                           ;main.c: 350: }
  1181                           ;main.c: 351: if (!escaped) {
  1182  00138A  502F               	movf	main@escaped,w,c
  1183  00138C  B4D8               	btfsc	status,2,c
  1184  00138E  D017               	goto	l2893
  1185  001390  D026               	goto	l677
  1186  001392                     l2881:
  1187                           
  1188                           ;main.c: 359: if (recievedbefore == '\r' && line == 0) {
  1189  001392  0E0D               	movlw	13
  1190  001394  1832               	xorwf	main@recievedbefore,w,c
  1191  001396  A4D8               	btfss	status,2,c
  1192  001398  D022               	goto	l677
  1193  00139A  5030               	movf	main@line,w,c
  1194  00139C  A4D8               	btfss	status,2,c
  1195  00139E  D01F               	goto	l677
  1196                           
  1197                           ;main.c: 360: oled_position(line = 1, columun = 0);
  1198  0013A0  0E00               	movlw	0
  1199  0013A2  6E31               	movwf	main@columun,c
  1200  0013A4  C031  F0D8         	movff	main@columun,oled_position@col
  1201  0013A8  0E01               	movlw	1
  1202  0013AA  6E30               	movwf	main@line,c
  1203  0013AC  5030               	movf	main@line,w,c
  1204  0013AE  EC95  F00E         	call	_oled_position
  1205                           
  1206                           ;main.c: 361: }
  1207                           ;main.c: 362: break;
  1208  0013B2  D015               	goto	l677
  1209  0013B4                     l2887:
  1210                           
  1211                           ;main.c: 364: oled_data(recieveddata);
  1212  0013B4  5033               	movf	main@recieveddata,w,c
  1213  0013B6  EC0E  F00E         	call	_oled_data
  1214                           
  1215                           ;main.c: 365: columun++;
  1216  0013BA  2A31               	incf	main@columun,f,c
  1217                           
  1218                           ;main.c: 367: }
  1219                           
  1220                           ;main.c: 366: break;
  1221  0013BC  D010               	goto	l677
  1222  0013BE                     l2893:
  1223  0013BE  5033               	movf	main@recieveddata,w,c
  1224                           
  1225                           ; Switch size 1, requested type "space"
  1226                           ; Number of cases is 5, Range of values is 0 to 18
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte           16     9 (average)
  1230                           ;	Chosen strategy is simple_byte
  1231  0013C0  0A00               	xorlw	0	; case 0
  1232  0013C2  B4D8               	btfsc	status,2,c
  1233  0013C4  D00C               	goto	l677
  1234  0013C6  0A0A               	xorlw	10	; case 10
  1235  0013C8  B4D8               	btfsc	status,2,c
  1236  0013CA  D7E3               	goto	l2881
  1237  0013CC  0A07               	xorlw	7	; case 13
  1238  0013CE  B4D8               	btfsc	status,2,c
  1239  0013D0  D006               	goto	l677
  1240  0013D2  0A1C               	xorlw	28	; case 17
  1241  0013D4  B4D8               	btfsc	status,2,c
  1242  0013D6  D003               	goto	l677
  1243  0013D8  0A03               	xorlw	3	; case 18
  1244  0013DA  A4D8               	btfss	status,2,c
  1245  0013DC  D7EB               	goto	l2887
  1246  0013DE                     l677:
  1247                           
  1248                           ;main.c: 368: }
  1249                           ;main.c: 369: recievedbefore = recieveddata;
  1250  0013DE  C033  F032         	movff	main@recieveddata,main@recievedbefore
  1251  0013E2  D636               	goto	l2845
  1252  0013E4                     __end_of_main:
  1253                           	opt stack 0
  1254                           tblptru	equ	0xFF8
  1255                           intcon	equ	0xFF2
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _oled_str_disp *****************
  1261 ;; Defined at:
  1262 ;;		line 226 in file "main.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  li              1    wreg     unsigned char 
  1265 ;;  col             1    4[BANK0 ] unsigned char 
  1266 ;;  string          2    5[BANK0 ] PTR const unsigned char 
  1267 ;;		 -> STR_1(10), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  li              1    9[BANK0 ] unsigned char 
  1270 ;;  i               1   10[BANK0 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1280 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;Total ram usage:        7 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    8
  1287 ;; This function calls:
  1288 ;;		_oled_data
  1289 ;;		_oled_position
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text1
  1296  001702                     __ptext1:
  1297                           	opt stack 0
  1298  001702                     _oled_str_disp:
  1299                           	opt stack 22
  1300                           
  1301                           ;incstack = 0
  1302                           ;oled_str_disp@li stored from wreg
  1303  001702  0100               	movlb	0	; () banked
  1304  001704  6FDF               	movwf	oled_str_disp@li& (0+255),b
  1305                           
  1306                           ;main.c: 227: uint8_t i = 0;
  1307  001706  0E00               	movlw	0
  1308  001708  0100               	movlb	0	; () banked
  1309  00170A  6FE0               	movwf	oled_str_disp@i& (0+255),b
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;main.c: 228: oled_position(li, col);
  1313  00170C  C0DA  F0D8         	movff	oled_str_disp@col,oled_position@col
  1314  001710  0100               	movlb	0	; () banked
  1315  001712  51DF               	movf	oled_str_disp@li& (0+255),w,b
  1316  001714  EC95  F00E         	call	_oled_position
  1317                           
  1318                           ;main.c: 229: while (((col + i) < 16) && string[i]) {
  1319  001718  D017               	goto	l2805
  1320  00171A                     l2801:
  1321                           
  1322                           ;main.c: 232: oled_data(string[i]);
  1323  00171A  0100               	movlb	0	; () banked
  1324  00171C  51E0               	movf	oled_str_disp@i& (0+255),w,b
  1325  00171E  0D01               	mullw	1
  1326  001720  C0DB  F0DD         	movff	oled_str_disp@string,??_oled_str_disp
  1327  001724  C0DC  F0DE         	movff	oled_str_disp@string+1,??_oled_str_disp+1
  1328  001728  50F3               	movf	prodl,w,c
  1329  00172A  0100               	movlb	0	; () banked
  1330  00172C  27DD               	addwf	??_oled_str_disp& (0+255),f,b
  1331  00172E  50F4               	movf	prodh,w,c
  1332  001730  0100               	movlb	0	; () banked
  1333  001732  23DE               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1334  001734  C0DD  FFF6         	movff	??_oled_str_disp,tblptrl
  1335  001738  C0DE  FFF7         	movff	??_oled_str_disp+1,tblptrh
  1336  00173C                     	if	0	;tblptru may be non-zero
  1337  00173C                     	endif
  1338  00173C                     	if	0	;tblptru may be non-zero
  1339  00173C                     	endif
  1340  00173C  0008               	tblrd		*
  1341  00173E  50F5               	movf	tablat,w,c
  1342  001740  EC0E  F00E         	call	_oled_data
  1343                           
  1344                           ;main.c: 234: i++;
  1345  001744  0100               	movlb	0	; () banked
  1346  001746  2BE0               	incf	oled_str_disp@i& (0+255),f,b
  1347  001748                     l2805:
  1348  001748  0100               	movlb	0	; () banked
  1349  00174A  51E0               	movf	oled_str_disp@i& (0+255),w,b
  1350  00174C  C0DA  F0DD         	movff	oled_str_disp@col,??_oled_str_disp
  1351  001750  0100               	movlb	0	; () banked
  1352  001752  6BDE               	clrf	(??_oled_str_disp+1)& (0+255),b
  1353  001754  0100               	movlb	0	; () banked
  1354  001756  27DD               	addwf	??_oled_str_disp& (0+255),f,b
  1355  001758  0E00               	movlw	0
  1356  00175A  23DE               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1357  00175C  0100               	movlb	0	; () banked
  1358  00175E  BFDE               	btfsc	(??_oled_str_disp+1)& (0+255),7,b
  1359  001760  D008               	goto	l2807
  1360  001762  0100               	movlb	0	; () banked
  1361  001764  51DE               	movf	(??_oled_str_disp+1)& (0+255),w,b
  1362  001766  E11C               	bnz	l640
  1363  001768  0E10               	movlw	16
  1364  00176A  0100               	movlb	0	; () banked
  1365  00176C  5DDD               	subwf	??_oled_str_disp& (0+255),w,b
  1366  00176E  B0D8               	btfsc	status,0,c
  1367  001770  0012               	return	
  1368  001772                     l2807:
  1369                           
  1370                           ; BSR set to: 0
  1371  001772  0100               	movlb	0	; () banked
  1372  001774  51E0               	movf	oled_str_disp@i& (0+255),w,b
  1373  001776  0D01               	mullw	1
  1374  001778  C0DB  F0DD         	movff	oled_str_disp@string,??_oled_str_disp
  1375  00177C  C0DC  F0DE         	movff	oled_str_disp@string+1,??_oled_str_disp+1
  1376  001780  50F3               	movf	prodl,w,c
  1377  001782  0100               	movlb	0	; () banked
  1378  001784  27DD               	addwf	??_oled_str_disp& (0+255),f,b
  1379  001786  50F4               	movf	prodh,w,c
  1380  001788  0100               	movlb	0	; () banked
  1381  00178A  23DE               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1382  00178C  C0DD  FFF6         	movff	??_oled_str_disp,tblptrl
  1383  001790  C0DE  FFF7         	movff	??_oled_str_disp+1,tblptrh
  1384  001794                     	if	0	;tblptru may be non-zero
  1385  001794                     	endif
  1386  001794                     	if	0	;tblptru may be non-zero
  1387  001794                     	endif
  1388  001794  0008               	tblrd		*
  1389  001796  50F5               	movf	tablat,w,c
  1390  001798  0900               	iorlw	0
  1391  00179A  B4D8               	btfsc	status,2,c
  1392  00179C  0012               	return	
  1393  00179E  D7BD               	goto	l2801
  1394  0017A0                     l640:
  1395                           
  1396                           ; BSR set to: 0
  1397  0017A0  0012               	return		;funcret
  1398  0017A2                     __end_of_oled_str_disp:
  1399                           	opt stack 0
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           prodh	equ	0xFF4
  1405                           prodl	equ	0xFF3
  1406                           intcon	equ	0xFF2
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _oled_position *****************
  1412 ;; Defined at:
  1413 ;;		line 217 in file "main.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  li              1    wreg     unsigned char 
  1416 ;;  col             1    2[BANK0 ] unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  li              1    3[BANK0 ] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1428 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;Total ram usage:        2 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    7
  1435 ;; This function calls:
  1436 ;;		_oled_cmd
  1437 ;; This function is called by:
  1438 ;;		_oled_str_disp
  1439 ;;		_main
  1440 ;;		_oled_char_disp
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text2
  1445  001D2A                     __ptext2:
  1446                           	opt stack 0
  1447  001D2A                     _oled_position:
  1448                           	opt stack 22
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;incstack = 0
  1452                           ;oled_position@li stored from wreg
  1453  001D2A  0100               	movlb	0	; () banked
  1454  001D2C  6FD9               	movwf	oled_position@li& (0+255),b
  1455                           
  1456                           ;main.c: 218: oled_cmd(0x80 | (li << 5) | col);
  1457  001D2E  0100               	movlb	0	; () banked
  1458  001D30  39D9               	swapf	oled_position@li& (0+255),w,b
  1459  001D32  46E8               	rlncf	wreg,f,c
  1460  001D34  0BE0               	andlw	224
  1461  001D36  0100               	movlb	0	; () banked
  1462  001D38  11D8               	iorwf	oled_position@col& (0+255),w,b
  1463  001D3A  0980               	iorlw	128
  1464  001D3C  EC23  F00E         	call	_oled_cmd
  1465  001D40  0012               	return		;funcret
  1466  001D42                     __end_of_oled_position:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _oled_data *****************
  1480 ;; Defined at:
  1481 ;;		line 200 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  work            1    wreg     unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  work            1    1[BANK0 ] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    6
  1502 ;; This function calls:
  1503 ;;		_I2C_M_write
  1504 ;; This function is called by:
  1505 ;;		_oled_str_disp
  1506 ;;		_main
  1507 ;;		_oled_char_disp
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text3
  1512  001C1C                     __ptext3:
  1513                           	opt stack 0
  1514  001C1C                     _oled_data:
  1515                           	opt stack 23
  1516                           
  1517                           ;incstack = 0
  1518                           ;oled_data@work stored from wreg
  1519  001C1C  0100               	movlb	0	; () banked
  1520  001C1E  6FD7               	movwf	oled_data@work& (0+255),b
  1521                           
  1522                           ;main.c: 201: static char write[2];
  1523                           ;main.c: 202: write[0] = 0x40;
  1524  001C20  0E40               	movlw	64
  1525  001C22  0100               	movlb	0	; () banked
  1526  001C24  6FD2               	movwf	oled_data@write& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 203: write[1] = work;
  1530  001C26  C0D7  F0D3         	movff	oled_data@work,oled_data@write+1
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 204: I2C_M_write((0x3c), (uint8_t*) write, 2);
  1534  001C2A  0ED2               	movlw	low oled_data@write
  1535  001C2C  6E24               	movwf	I2C_M_write@wr,c
  1536  001C2E  0E00               	movlw	high oled_data@write
  1537  001C30  6E25               	movwf	I2C_M_write@wr+1,c
  1538  001C32  0E02               	movlw	2
  1539  001C34  6E26               	movwf	I2C_M_write@length,c
  1540  001C36  0E3C               	movlw	60
  1541  001C38  ECD1  F00B         	call	_I2C_M_write
  1542                           
  1543                           ;main.c: 205: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1544  001C3C  0ED5               	movlw	213
  1545  001C3E                     u3237:
  1546  001C3E  2EE8               	decfsz	wreg,f,c
  1547  001C40  D7FE               	bra	u3237
  1548  001C42  F000               	nop	
  1549  001C44  0012               	return		;funcret
  1550  001C46                     __end_of_oled_data:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           prodh	equ	0xFF4
  1557                           prodl	equ	0xFF3
  1558                           intcon	equ	0xFF2
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _oled_init *****************
  1564 ;; Defined at:
  1565 ;;		line 208 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;Total ram usage:        1 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    7
  1586 ;; This function calls:
  1587 ;;		_oled_cmd
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text4
  1594  0019A4                     __ptext4:
  1595                           	opt stack 0
  1596  0019A4                     _oled_init:
  1597                           	opt stack 23
  1598                           
  1599                           ;main.c: 209: oled_cmd(0x01);
  1600                           
  1601                           ;incstack = 0
  1602  0019A4  0E01               	movlw	1
  1603  0019A6  EC23  F00E         	call	_oled_cmd
  1604                           
  1605                           ;main.c: 210: _delay((unsigned long)((2)*(64000000/4000.0)));
  1606  0019AA  0E2A               	movlw	42
  1607  0019AC  0100               	movlb	0	; () banked
  1608  0019AE  6FD8               	movwf	??_oled_init& (0+255),b
  1609  0019B0  0E8D               	movlw	141
  1610  0019B2                     u3247:
  1611  0019B2  2EE8               	decfsz	wreg,f,c
  1612  0019B4  D7FE               	bra	u3247
  1613  0019B6  2FD8               	decfsz	??_oled_init& (0+255),f,b
  1614  0019B8  D7FC               	bra	u3247
  1615  0019BA  D000               	nop2	
  1616                           
  1617                           ;main.c: 211: oled_cmd(0x03);
  1618  0019BC  0E03               	movlw	3
  1619  0019BE  EC23  F00E         	call	_oled_cmd
  1620                           
  1621                           ;main.c: 212: oled_cmd(0x0f & 0x0f & 0x0d & 0x0e);
  1622  0019C2  0E0C               	movlw	12
  1623  0019C4  EC23  F00E         	call	_oled_cmd
  1624                           
  1625                           ;main.c: 213: oled_cmd(0x01);
  1626  0019C8  0E01               	movlw	1
  1627  0019CA  EC23  F00E         	call	_oled_cmd
  1628                           
  1629                           ;main.c: 214: _delay((unsigned long)((2)*(64000000/4000.0)));
  1630  0019CE  0E2A               	movlw	42
  1631  0019D0  0100               	movlb	0	; () banked
  1632  0019D2  6FD8               	movwf	??_oled_init& (0+255),b
  1633  0019D4  0E8D               	movlw	141
  1634  0019D6                     u3257:
  1635  0019D6  2EE8               	decfsz	wreg,f,c
  1636  0019D8  D7FE               	bra	u3257
  1637  0019DA  2FD8               	decfsz	??_oled_init& (0+255),f,b
  1638  0019DC  D7FC               	bra	u3257
  1639  0019DE  D000               	nop2	
  1640  0019E0  0012               	return		;funcret
  1641  0019E2                     __end_of_oled_init:
  1642                           	opt stack 0
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           prodh	equ	0xFF4
  1648                           prodl	equ	0xFF3
  1649                           intcon	equ	0xFF2
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _oled_contrast *****************
  1655 ;; Defined at:
  1656 ;;		line 238 in file "main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  cont            1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  cont            1    3[BANK0 ] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;Total ram usage:        2 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    7
  1677 ;; This function calls:
  1678 ;;		_oled_cmd
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text5
  1685  0019E2                     __ptext5:
  1686                           	opt stack 0
  1687  0019E2                     _oled_contrast:
  1688                           	opt stack 23
  1689                           
  1690                           ;incstack = 0
  1691                           ;oled_contrast@cont stored from wreg
  1692  0019E2  0100               	movlb	0	; () banked
  1693  0019E4  6FD9               	movwf	oled_contrast@cont& (0+255),b
  1694                           
  1695                           ;main.c: 239: oled_cmd(0x2A);
  1696  0019E6  0E2A               	movlw	42
  1697  0019E8  EC23  F00E         	call	_oled_cmd
  1698                           
  1699                           ;main.c: 240: oled_cmd(0x79);
  1700  0019EC  0E79               	movlw	121
  1701  0019EE  EC23  F00E         	call	_oled_cmd
  1702                           
  1703                           ;main.c: 241: oled_cmd(0x81);
  1704  0019F2  0E81               	movlw	129
  1705  0019F4  EC23  F00E         	call	_oled_cmd
  1706                           
  1707                           ;main.c: 242: oled_cmd(cont);
  1708  0019F8  0100               	movlb	0	; () banked
  1709  0019FA  51D9               	movf	oled_contrast@cont& (0+255),w,b
  1710  0019FC  EC23  F00E         	call	_oled_cmd
  1711                           
  1712                           ;main.c: 243: oled_cmd(0x78);
  1713  001A00  0E78               	movlw	120
  1714  001A02  EC23  F00E         	call	_oled_cmd
  1715                           
  1716                           ;main.c: 244: oled_cmd(0x28);
  1717  001A06  0E28               	movlw	40
  1718  001A08  EC23  F00E         	call	_oled_cmd
  1719                           
  1720                           ;main.c: 245: _delay((unsigned long)((2)*(64000000/4000.0)));
  1721  001A0C  0E2A               	movlw	42
  1722  001A0E  0100               	movlb	0	; () banked
  1723  001A10  6FD8               	movwf	??_oled_contrast& (0+255),b
  1724  001A12  0E8D               	movlw	141
  1725  001A14                     u3267:
  1726  001A14  2EE8               	decfsz	wreg,f,c
  1727  001A16  D7FE               	bra	u3267
  1728  001A18  2FD8               	decfsz	??_oled_contrast& (0+255),f,b
  1729  001A1A  D7FC               	bra	u3267
  1730  001A1C  D000               	nop2	
  1731  001A1E  0012               	return		;funcret
  1732  001A20                     __end_of_oled_contrast:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           prodh	equ	0xFF4
  1739                           prodl	equ	0xFF3
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _oled_clear *****************
  1746 ;; Defined at:
  1747 ;;		line 248 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;Total ram usage:        1 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    7
  1768 ;; This function calls:
  1769 ;;		_oled_cmd
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text6
  1776  001D10                     __ptext6:
  1777                           	opt stack 0
  1778  001D10                     _oled_clear:
  1779                           	opt stack 23
  1780                           
  1781                           ;main.c: 249: oled_cmd(0x01);
  1782                           
  1783                           ;incstack = 0
  1784  001D10  0E01               	movlw	1
  1785  001D12  EC23  F00E         	call	_oled_cmd
  1786                           
  1787                           ;main.c: 250: _delay((unsigned long)((2)*(64000000/4000.0)));
  1788  001D16  0E2A               	movlw	42
  1789  001D18  0100               	movlb	0	; () banked
  1790  001D1A  6FD8               	movwf	??_oled_clear& (0+255),b
  1791  001D1C  0E8D               	movlw	141
  1792  001D1E                     u3277:
  1793  001D1E  2EE8               	decfsz	wreg,f,c
  1794  001D20  D7FE               	bra	u3277
  1795  001D22  2FD8               	decfsz	??_oled_clear& (0+255),f,b
  1796  001D24  D7FC               	bra	u3277
  1797  001D26  D000               	nop2	
  1798  001D28  0012               	return		;funcret
  1799  001D2A                     __end_of_oled_clear:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           intcon	equ	0xFF2
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _oled_cmd *****************
  1813 ;; Defined at:
  1814 ;;		line 192 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  work            1    wreg     unsigned char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  work            1    1[BANK0 ] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        1 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    6
  1835 ;; This function calls:
  1836 ;;		_I2C_M_write
  1837 ;; This function is called by:
  1838 ;;		_oled_init
  1839 ;;		_oled_position
  1840 ;;		_oled_contrast
  1841 ;;		_oled_clear
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text7
  1846  001C46                     __ptext7:
  1847                           	opt stack 0
  1848  001C46                     _oled_cmd:
  1849                           	opt stack 22
  1850                           
  1851                           ;incstack = 0
  1852                           ;oled_cmd@work stored from wreg
  1853  001C46  0100               	movlb	0	; () banked
  1854  001C48  6FD7               	movwf	oled_cmd@work& (0+255),b
  1855                           
  1856                           ;main.c: 193: static char write[2];
  1857                           ;main.c: 194: write[0] = 0x00;
  1858  001C4A  0E00               	movlw	0
  1859  001C4C  0100               	movlb	0	; () banked
  1860  001C4E  6FD4               	movwf	oled_cmd@write& (0+255),b
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 195: write[1] = work;
  1864  001C50  C0D7  F0D5         	movff	oled_cmd@work,oled_cmd@write+1
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 196: I2C_M_write((0x3c), (uint8_t*) write, 2);
  1868  001C54  0ED4               	movlw	low oled_cmd@write
  1869  001C56  6E24               	movwf	I2C_M_write@wr,c
  1870  001C58  0E00               	movlw	high oled_cmd@write
  1871  001C5A  6E25               	movwf	I2C_M_write@wr+1,c
  1872  001C5C  0E02               	movlw	2
  1873  001C5E  6E26               	movwf	I2C_M_write@length,c
  1874  001C60  0E3C               	movlw	60
  1875  001C62  ECD1  F00B         	call	_I2C_M_write
  1876                           
  1877                           ;main.c: 197: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1878  001C66  0ED5               	movlw	213
  1879  001C68                     u3287:
  1880  001C68  2EE8               	decfsz	wreg,f,c
  1881  001C6A  D7FE               	bra	u3287
  1882  001C6C  F000               	nop	
  1883  001C6E  0012               	return		;funcret
  1884  001C70                     __end_of_oled_cmd:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           intcon	equ	0xFF2
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _I2C_M_write *****************
  1898 ;; Defined at:
  1899 ;;		line 128 in file "main.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  addr            1    wreg     unsigned char 
  1902 ;;  wr              2   35[COMRAM] PTR unsigned char 
  1903 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  1904 ;;  length          1   37[COMRAM] unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  addr            1    0[BANK0 ] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;Total ram usage:        4 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    5
  1923 ;; This function calls:
  1924 ;;		_I2C1_MasterWrite
  1925 ;; This function is called by:
  1926 ;;		_oled_cmd
  1927 ;;		_oled_data
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text8
  1932  0017A2                     __ptext8:
  1933                           	opt stack 0
  1934  0017A2                     _I2C_M_write:
  1935                           	opt stack 22
  1936                           
  1937                           ;incstack = 0
  1938                           ;I2C_M_write@addr stored from wreg
  1939  0017A2  0100               	movlb	0	; () banked
  1940  0017A4  6FD6               	movwf	I2C_M_write@addr& (0+255),b
  1941                           
  1942                           ;main.c: 134: static uint16_t timeOut, slaveTimeOut;
  1943                           ;main.c: 136: static I2C1_MESSAGE_STATUS status;
  1944                           ;main.c: 137: status = I2C1_MESSAGE_PENDING;
  1945  0017A6  0E02               	movlw	2
  1946  0017A8  6E49               	movwf	I2C_M_write@status,c
  1947                           
  1948                           ;main.c: 145: timeOut = 0;
  1949  0017AA  0E00               	movlw	0
  1950  0017AC  0100               	movlb	0	; () banked
  1951  0017AE  6FC2               	movwf	(I2C_M_write@timeOut+1)& (0+255),b
  1952  0017B0  0E00               	movlw	0
  1953  0017B2  6FC1               	movwf	I2C_M_write@timeOut& (0+255),b
  1954                           
  1955                           ;main.c: 146: slaveTimeOut = 0;
  1956  0017B4  0E00               	movlw	0
  1957  0017B6  0100               	movlb	0	; () banked
  1958  0017B8  6FC0               	movwf	(I2C_M_write@slaveTimeOut+1)& (0+255),b
  1959  0017BA  0E00               	movlw	0
  1960  0017BC  6FBF               	movwf	I2C_M_write@slaveTimeOut& (0+255),b
  1961                           
  1962                           ;main.c: 148: while (status != I2C1_MESSAGE_FAIL) {
  1963  0017BE  D039               	goto	l2763
  1964  0017C0                     l2737:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 150: I2C1_MasterWrite(wr,
  1968                           ;main.c: 151: length,
  1969                           ;main.c: 152: addr,
  1970                           ;main.c: 153: &status);
  1971  0017C0  C024  F01D         	movff	I2C_M_write@wr,I2C1_MasterWrite@pdata
  1972  0017C4  C025  F01E         	movff	I2C_M_write@wr+1,I2C1_MasterWrite@pdata+1
  1973  0017C8  C026  F01F         	movff	I2C_M_write@length,I2C1_MasterWrite@length
  1974  0017CC  C0D6  F020         	movff	I2C_M_write@addr,I2C1_MasterWrite@address
  1975  0017D0  6A21               	clrf	I2C1_MasterWrite@address+1,c
  1976  0017D2  0E49               	movlw	low I2C_M_write@status
  1977  0017D4  6E22               	movwf	I2C1_MasterWrite@pflag,c
  1978  0017D6  0E00               	movlw	high I2C_M_write@status
  1979  0017D8  6E23               	movwf	I2C1_MasterWrite@pflag+1,c
  1980  0017DA  EC1D  F00C         	call	_I2C1_MasterWrite	;wreg free
  1981                           
  1982                           ;main.c: 156: while (status == I2C1_MESSAGE_PENDING) {
  1983  0017DE  D011               	goto	l2749
  1984  0017E0                     l2739:
  1985                           
  1986                           ;main.c: 158: _delay((unsigned long)((100)*(64000000/4000000.0)));
  1987  0017E0  0EE4               	movlw	228
  1988  0017E2                     u3297:
  1989  0017E2  D000               	nop2	
  1990  0017E4  D000               	nop2	
  1991  0017E6  2EE8               	decfsz	wreg,f,c
  1992  0017E8  D7FC               	bra	u3297
  1993  0017EA  D000               	nop2	
  1994  0017EC  D000               	nop2	
  1995                           
  1996                           ;main.c: 161: if (slaveTimeOut == 20)
  1997  0017EE  0E14               	movlw	20
  1998  0017F0  0100               	movlb	0	; () banked
  1999  0017F2  19BF               	xorwf	I2C_M_write@slaveTimeOut& (0+255),w,b
  2000  0017F4  0100               	movlb	0	; () banked
  2001  0017F6  11C0               	iorwf	(I2C_M_write@slaveTimeOut+1)& (0+255),w,b
  2002  0017F8  B4D8               	btfsc	status,2,c
  2003  0017FA  D007               	goto	l2751
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;main.c: 163: else
  2007                           ;main.c: 164: slaveTimeOut++;
  2008                           
  2009                           ; BSR set to: 0
  2010                           
  2011                           ; BSR set to: 0
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;main.c: 162: break;
  2015  0017FC  0100               	movlb	0	; () banked
  2016  0017FE  4BBF               	infsnz	I2C_M_write@slaveTimeOut& (0+255),f,b
  2017  001800  2BC0               	incf	(I2C_M_write@slaveTimeOut+1)& (0+255),f,b
  2018  001802                     l2749:
  2019  001802  0E02               	movlw	2
  2020  001804  1849               	xorwf	I2C_M_write@status,w,c
  2021  001806  B4D8               	btfsc	status,2,c
  2022  001808  D7EB               	goto	l2739
  2023  00180A                     l2751:
  2024                           
  2025                           ;main.c: 165: }
  2026                           ;main.c: 166: if ((slaveTimeOut == 20) ||
  2027                           ;main.c: 167: (status == I2C1_MESSAGE_COMPLETE))
  2028  00180A  0E14               	movlw	20
  2029  00180C  0100               	movlb	0	; () banked
  2030  00180E  19BF               	xorwf	I2C_M_write@slaveTimeOut& (0+255),w,b
  2031  001810  0100               	movlb	0	; () banked
  2032  001812  11C0               	iorwf	(I2C_M_write@slaveTimeOut+1)& (0+255),w,b
  2033  001814  B4D8               	btfsc	status,2,c
  2034  001816  0012               	return	
  2035                           
  2036                           ; BSR set to: 0
  2037  001818  5049               	movf	I2C_M_write@status,w,c
  2038  00181A  B4D8               	btfsc	status,2,c
  2039  00181C  0012               	return	
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 177: if (timeOut == 2)
  2043                           
  2044                           ; BSR set to: 0
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;main.c: 168: break;
  2048  00181E  0E02               	movlw	2
  2049  001820  0100               	movlb	0	; () banked
  2050  001822  19C1               	xorwf	I2C_M_write@timeOut& (0+255),w,b
  2051  001824  0100               	movlb	0	; () banked
  2052  001826  11C2               	iorwf	(I2C_M_write@timeOut+1)& (0+255),w,b
  2053  001828  B4D8               	btfsc	status,2,c
  2054  00182A  0012               	return	
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;main.c: 179: else
  2058                           ;main.c: 180: timeOut++;
  2059                           
  2060                           ; BSR set to: 0
  2061                           
  2062                           ; BSR set to: 0
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;main.c: 178: break;
  2066  00182C  0100               	movlb	0	; () banked
  2067  00182E  4BC1               	infsnz	I2C_M_write@timeOut& (0+255),f,b
  2068  001830  2BC2               	incf	(I2C_M_write@timeOut+1)& (0+255),f,b
  2069  001832                     l2763:
  2070                           
  2071                           ; BSR set to: 0
  2072  001832  0449               	decf	I2C_M_write@status,w,c
  2073  001834  B4D8               	btfsc	status,2,c
  2074  001836  0012               	return	
  2075  001838  D7C3               	goto	l2737
  2076  00183A                     __end_of_I2C_M_write:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           intcon	equ	0xFF2
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _I2C1_MasterWrite *****************
  2090 ;; Defined at:
  2091 ;;		line 545 in file "mcc_generated_files/i2c1.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  2094 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  2095 ;;  length          1   30[COMRAM] unsigned char 
  2096 ;;  address         2   31[COMRAM] unsigned int 
  2097 ;;  pflag           2   33[COMRAM] PTR enum E6981
  2098 ;;		 -> I2C_M_write@status(1), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:        7 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    4
  2117 ;; This function calls:
  2118 ;;		_I2C1_MasterTRBInsert
  2119 ;;		_I2C1_MasterWriteTRBBuild
  2120 ;; This function is called by:
  2121 ;;		_I2C_M_write
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text9
  2126  00183A                     __ptext9:
  2127                           	opt stack 0
  2128  00183A                     _I2C1_MasterWrite:
  2129                           	opt stack 22
  2130                           
  2131                           ;i2c1.c: 550: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  2132                           ;i2c1.c: 553: if (i2c1_object.trStatus.s.full != 1) {
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;incstack = 0
  2136  00183A  0100               	movlb	0	; () banked
  2137  00183C  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
  2138  00183E  D01C               	goto	l2733
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;i2c1.c: 554: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  2142  001840  0EC8               	movlw	low I2C1_MasterWrite@trBlock
  2143  001842  6E14               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  2144  001844  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2145  001846  6E15               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  2146  001848  C01D  F016         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  2147  00184C  C01E  F017         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  2148  001850  C01F  F018         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  2149  001854  C020  F019         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  2150  001858  C021  F01A         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  2151  00185C  ECB0  F00C         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  2152                           
  2153                           ;i2c1.c: 555: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  2154  001860  0EC8               	movlw	low I2C1_MasterWrite@trBlock
  2155  001862  6E14               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  2156  001864  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2157  001866  6E15               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  2158  001868  C022  F016         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  2159  00186C  C023  F017         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  2160  001870  0E01               	movlw	1
  2161  001872  EC24  F00B         	call	_I2C1_MasterTRBInsert
  2162                           
  2163                           ;i2c1.c: 556: } else {
  2164  001876  0012               	return	
  2165  001878                     l2733:
  2166                           
  2167                           ;i2c1.c: 557: *pflag = I2C1_MESSAGE_FAIL;
  2168  001878  C022  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  2169  00187C  C023  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  2170  001880  0E01               	movlw	1
  2171  001882  6EDF               	movwf	indf2,c
  2172  001884  0012               	return	
  2173  001886                     __end_of_I2C1_MasterWrite:
  2174                           	opt stack 0
  2175                           tblptru	equ	0xFF8
  2176                           tblptrh	equ	0xFF7
  2177                           tblptrl	equ	0xFF6
  2178                           tablat	equ	0xFF5
  2179                           prodh	equ	0xFF4
  2180                           prodl	equ	0xFF3
  2181                           intcon	equ	0xFF2
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           indf2	equ	0xFDF
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8
  2188                           
  2189 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  2190 ;; Defined at:
  2191 ;;		line 638 in file "mcc_generated_files/i2c1.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  ptrb            2   19[COMRAM] PTR struct .
  2194 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  2195 ;;  pdata           2   21[COMRAM] PTR unsigned char 
  2196 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  2197 ;;  length          1   23[COMRAM] unsigned char 
  2198 ;;  address         2   24[COMRAM] unsigned int 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2210 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;Total ram usage:        9 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_I2C1_MasterWrite
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text10
  2225  001960                     __ptext10:
  2226                           	opt stack 0
  2227  001960                     _I2C1_MasterWriteTRBBuild:
  2228                           	opt stack 22
  2229                           
  2230                           ;i2c1.c: 643: ptrb->address = address << 1;
  2231                           
  2232                           ;incstack = 0
  2233  001960  C019  F01B         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  2234  001964  C01A  F01C         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  2235  001968  90D8               	bcf	status,0,c
  2236  00196A  361B               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  2237  00196C  361C               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  2238  00196E  C014  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  2239  001972  C015  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  2240  001976  C01B  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  2241  00197A  C01C  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  2242                           
  2243                           ;i2c1.c: 644: ptrb->length = length;
  2244  00197E  EE20 F002          	lfsr	2,2
  2245  001982  5014               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2246  001984  26D9               	addwf	fsr2l,f,c
  2247  001986  5015               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2248  001988  22DA               	addwfc	fsr2h,f,c
  2249  00198A  C018  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  2250                           
  2251                           ;i2c1.c: 645: ptrb->pbuffer = pdata;
  2252  00198E  EE20 F003          	lfsr	2,3
  2253  001992  5014               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2254  001994  26D9               	addwf	fsr2l,f,c
  2255  001996  5015               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2256  001998  22DA               	addwfc	fsr2h,f,c
  2257  00199A  C016  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  2258  00199E  C017  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  2259  0019A2  0012               	return		;funcret
  2260  0019A4                     __end_of_I2C1_MasterWriteTRBBuild:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           intcon	equ	0xFF2
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           indf2	equ	0xFDF
  2272                           postinc2	equ	0xFDE
  2273                           postdec2	equ	0xFDD
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _I2C1_MasterTRBInsert *****************
  2279 ;; Defined at:
  2280 ;;		line 580 in file "mcc_generated_files/i2c1.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  count           1    wreg     unsigned char 
  2283 ;;  ptrb_list       2   19[COMRAM] PTR struct .
  2284 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  2285 ;;  pflag           2   21[COMRAM] PTR enum E6981
  2286 ;;		 -> I2C_M_write@status(1), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  count           1   24[COMRAM] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;Total ram usage:        6 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_I2C1_MasterWrite
  2309 ;;		_I2C1_MasterRead
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text11
  2314  001648                     __ptext11:
  2315                           	opt stack 0
  2316  001648                     _I2C1_MasterTRBInsert:
  2317                           	opt stack 22
  2318                           
  2319                           ;incstack = 0
  2320                           ;I2C1_MasterTRBInsert@count stored from wreg
  2321  001648  6E19               	movwf	I2C1_MasterTRBInsert@count,c
  2322                           
  2323                           ;i2c1.c: 586: if (i2c1_object.trStatus.s.full != 1) {
  2324  00164A  0100               	movlb	0	; () banked
  2325  00164C  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
  2326  00164E  D046               	goto	l2721
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;i2c1.c: 587: *pflag = I2C1_MESSAGE_PENDING;
  2330  001650  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2331  001654  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2332  001658  0E02               	movlw	2
  2333  00165A  6EDF               	movwf	indf2,c
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;i2c1.c: 589: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  2337  00165C  0100               	movlb	0	; () banked
  2338  00165E  EE20 F001          	lfsr	2,1
  2339  001662  51B8               	movf	_i2c1_object& (0+255),w,b
  2340  001664  26D9               	addwf	fsr2l,f,c
  2341  001666  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  2342  001668  22DA               	addwfc	fsr2h,f,c
  2343  00166A  C014  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  2344  00166E  C015  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;i2c1.c: 590: i2c1_object.pTrTail->count = count;
  2348  001672  C0B8  FFD9         	movff	_i2c1_object,fsr2l
  2349  001676  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
  2350  00167A  C019  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;i2c1.c: 591: i2c1_object.pTrTail->pTrFlag = pflag;
  2354  00167E  0100               	movlb	0	; () banked
  2355  001680  EE20 F003          	lfsr	2,3
  2356  001684  51B8               	movf	_i2c1_object& (0+255),w,b
  2357  001686  26D9               	addwf	fsr2l,f,c
  2358  001688  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  2359  00168A  22DA               	addwfc	fsr2h,f,c
  2360  00168C  C016  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  2361  001690  C017  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;i2c1.c: 592: i2c1_object.pTrTail++;
  2365  001694  0E05               	movlw	5
  2366  001696  0100               	movlb	0	; () banked
  2367  001698  27B8               	addwf	_i2c1_object& (0+255),f,b
  2368  00169A  0E00               	movlw	0
  2369  00169C  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;i2c1.c: 595: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)) {
  2373  00169E  0ED2               	movlw	low (_i2c1_tr_queue+5)
  2374  0016A0  0100               	movlb	0	; () banked
  2375  0016A2  19B8               	xorwf	_i2c1_object& (0+255),w,b
  2376  0016A4  E10B               	bnz	l2717
  2377  0016A6  0E00               	movlw	high (_i2c1_tr_queue+5)
  2378  0016A8  0100               	movlb	0	; () banked
  2379  0016AA  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
  2380  0016AC  A4D8               	btfss	status,2,c
  2381  0016AE  D006               	goto	l2717
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;i2c1.c: 597: i2c1_object.pTrTail = i2c1_tr_queue;
  2385  0016B0  0ECD               	movlw	low _i2c1_tr_queue
  2386  0016B2  0100               	movlb	0	; () banked
  2387  0016B4  6FB8               	movwf	_i2c1_object& (0+255),b
  2388  0016B6  0E00               	movlw	high _i2c1_tr_queue
  2389  0016B8  0100               	movlb	0	; () banked
  2390  0016BA  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  2391  0016BC                     l2717:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;i2c1.c: 598: }
  2395                           ;i2c1.c: 602: i2c1_object.trStatus.s.empty = 0;
  2396  0016BC  0100               	movlb	0	; () banked
  2397  0016BE  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
  2398                           
  2399                           ;i2c1.c: 605: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  2400  0016C0  0100               	movlb	0	; () banked
  2401  0016C2  51B8               	movf	_i2c1_object& (0+255),w,b
  2402  0016C4  0100               	movlb	0	; () banked
  2403  0016C6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
  2404  0016C8  E10F               	bnz	l2723
  2405  0016CA  0100               	movlb	0	; () banked
  2406  0016CC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  2407  0016CE  0100               	movlb	0	; () banked
  2408  0016D0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
  2409  0016D2  A4D8               	btfss	status,2,c
  2410  0016D4  D009               	goto	l2723
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;i2c1.c: 607: i2c1_object.trStatus.s.full = 1;
  2414  0016D6  0100               	movlb	0	; () banked
  2415  0016D8  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;i2c1.c: 608: }
  2419                           ;i2c1.c: 610: } else {
  2420  0016DA  D006               	goto	l2723
  2421  0016DC                     l2721:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;i2c1.c: 611: *pflag = I2C1_MESSAGE_FAIL;
  2425  0016DC  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2426  0016E0  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2427  0016E4  0E01               	movlw	1
  2428  0016E6  6EDF               	movwf	indf2,c
  2429  0016E8                     l2723:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;i2c1.c: 612: }
  2433                           ;i2c1.c: 615: if (*pflag == I2C1_MESSAGE_PENDING) {
  2434  0016E8  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2435  0016EC  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2436  0016F0  0E02               	movlw	2
  2437  0016F2  18DE               	xorwf	postinc2,w,c
  2438  0016F4  A4D8               	btfss	status,2,c
  2439  0016F6  0012               	return	
  2440  0016F8                     l2727:
  2441  0016F8  5043               	movf	_i2c1_state,w,c
  2442  0016FA  A4D8               	btfss	status,2,c
  2443  0016FC  D7FD               	goto	l2727
  2444                           
  2445                           ;i2c1.c: 617: {
  2446                           ;i2c1.c: 620: PIR1bits.SSP1IF = 1;
  2447  0016FE  869E               	bsf	3998,3,c	;volatile
  2448  001700  0012               	return	
  2449  001702                     __end_of_I2C1_MasterTRBInsert:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           intcon	equ	0xFF2
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           indf2	equ	0xFDF
  2461                           postinc2	equ	0xFDE
  2462                           postdec2	equ	0xFDD
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _SYSTEM_Initialize *****************
  2468 ;; Defined at:
  2469 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    5
  2490 ;; This function calls:
  2491 ;;		_ADC_Initialize
  2492 ;;		_EUSART1_Initialize
  2493 ;;		_I2C1_Initialize
  2494 ;;		_INTERRUPT_Initialize
  2495 ;;		_OSCILLATOR_Initialize
  2496 ;;		_PIN_MANAGER_Initialize
  2497 ;;		_TMR0_Initialize
  2498 ;;		_TMR1_Initialize
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text12
  2505  001C94                     __ptext12:
  2506                           	opt stack 0
  2507  001C94                     _SYSTEM_Initialize:
  2508                           	opt stack 25
  2509                           
  2510                           ;mcc.c: 113: OSCILLATOR_Initialize();
  2511                           
  2512                           ;incstack = 0
  2513  001C94  ECC2  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  2514                           
  2515                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  2516  001C98  EC68  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2517                           
  2518                           ;mcc.c: 115: INTERRUPT_Initialize();
  2519  001C9C  ECB8  F00E         	call	_INTERRUPT_Initialize	;wreg free
  2520                           
  2521                           ;mcc.c: 116: ADC_Initialize();
  2522  001CA0  ECAD  F00E         	call	_ADC_Initialize	;wreg free
  2523                           
  2524                           ;mcc.c: 117: EUSART1_Initialize();
  2525  001CA4  EC4D  F00D         	call	_EUSART1_Initialize	;wreg free
  2526                           
  2527                           ;mcc.c: 119: I2C1_Initialize();
  2528  001CA8  EC2F  F00D         	call	_I2C1_Initialize	;wreg free
  2529                           
  2530                           ;mcc.c: 120: TMR0_Initialize();
  2531  001CAC  EC6C  F00E         	call	_TMR0_Initialize	;wreg free
  2532                           
  2533                           ;mcc.c: 121: TMR1_Initialize();
  2534  001CB0  EC5B  F00E         	call	_TMR1_Initialize	;wreg free
  2535  001CB4  0012               	return		;funcret
  2536  001CB6                     __end_of_SYSTEM_Initialize:
  2537                           	opt stack 0
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           prodh	equ	0xFF4
  2543                           prodl	equ	0xFF3
  2544                           intcon	equ	0xFF2
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           indf2	equ	0xFDF
  2548                           postinc2	equ	0xFDE
  2549                           postdec2	equ	0xFDD
  2550                           fsr2h	equ	0xFDA
  2551                           fsr2l	equ	0xFD9
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _TMR1_Initialize *****************
  2555 ;; Defined at:
  2556 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    4
  2577 ;; This function calls:
  2578 ;;		_TMR1_StartTimer
  2579 ;; This function is called by:
  2580 ;;		_SYSTEM_Initialize
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text13
  2585  001CB6                     __ptext13:
  2586                           	opt stack 0
  2587  001CB6                     _TMR1_Initialize:
  2588                           	opt stack 25
  2589                           
  2590                           ;tmr1.c: 68: T1CON = 0x30;
  2591                           
  2592                           ;incstack = 0
  2593  001CB6  0E30               	movlw	48
  2594  001CB8  6ECD               	movwf	4045,c	;volatile
  2595                           
  2596                           ;tmr1.c: 71: T1GCON = 0x00;
  2597  001CBA  0E00               	movlw	0
  2598  001CBC  6ECC               	movwf	4044,c	;volatile
  2599                           
  2600                           ;tmr1.c: 74: TMR1H = 0x3C;
  2601  001CBE  0E3C               	movlw	60
  2602  001CC0  6ECF               	movwf	4047,c	;volatile
  2603                           
  2604                           ;tmr1.c: 77: TMR1L = 0xAF;
  2605  001CC2  0EAF               	movlw	175
  2606  001CC4  6ECE               	movwf	4046,c	;volatile
  2607                           
  2608                           ;tmr1.c: 80: timer1ReloadVal = TMR1;
  2609  001CC6  CFCE F04A          	movff	4046,_timer1ReloadVal	;volatile
  2610  001CCA  CFCF F04B          	movff	4047,_timer1ReloadVal+1	;volatile
  2611                           
  2612                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2613  001CCE  909E               	bcf	3998,0,c	;volatile
  2614                           
  2615                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2616  001CD0  809D               	bsf	3997,0,c	;volatile
  2617                           
  2618                           ;tmr1.c: 89: TMR1_StartTimer();
  2619  001CD2  ECD2  F00E         	call	_TMR1_StartTimer	;wreg free
  2620  001CD6  0012               	return		;funcret
  2621  001CD8                     __end_of_TMR1_Initialize:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           intcon	equ	0xFF2
  2630                           postinc0	equ	0xFEE
  2631                           wreg	equ	0xFE8
  2632                           indf2	equ	0xFDF
  2633                           postinc2	equ	0xFDE
  2634                           postdec2	equ	0xFDD
  2635                           fsr2h	equ	0xFDA
  2636                           fsr2l	equ	0xFD9
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _TMR1_StartTimer *****************
  2640 ;; Defined at:
  2641 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		None
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    3
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_TMR1_Initialize
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text14
  2670  001DA4                     __ptext14:
  2671                           	opt stack 0
  2672  001DA4                     _TMR1_StartTimer:
  2673                           	opt stack 25
  2674                           
  2675                           ;tmr1.c: 94: T1CONbits.TMR1ON = 1;
  2676                           
  2677                           ;incstack = 0
  2678  001DA4  80CD               	bsf	4045,0,c	;volatile
  2679  001DA6  0012               	return		;funcret
  2680  001DA8                     __end_of_TMR1_StartTimer:
  2681                           	opt stack 0
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           prodh	equ	0xFF4
  2687                           prodl	equ	0xFF3
  2688                           intcon	equ	0xFF2
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _TMR0_Initialize *****************
  2699 ;; Defined at:
  2700 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		_TMR0_StartTimer
  2723 ;; This function is called by:
  2724 ;;		_SYSTEM_Initialize
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text15
  2729  001CD8                     __ptext15:
  2730                           	opt stack 0
  2731  001CD8                     _TMR0_Initialize:
  2732                           	opt stack 25
  2733                           
  2734                           ;tmr0.c: 93: T0CON = 0xD5;
  2735                           
  2736                           ;incstack = 0
  2737  001CD8  0ED5               	movlw	213
  2738  001CDA  6ED5               	movwf	4053,c	;volatile
  2739                           
  2740                           ;tmr0.c: 96: TMR0H = 0x80;
  2741  001CDC  0E80               	movlw	128
  2742  001CDE  6ED7               	movwf	4055,c	;volatile
  2743                           
  2744                           ;tmr0.c: 99: TMR0L = 0x00;
  2745  001CE0  0E00               	movlw	0
  2746  001CE2  6ED6               	movwf	4054,c	;volatile
  2747                           
  2748                           ;tmr0.c: 102: timer0ReloadVal8bit = 0x80;
  2749  001CE4  0E80               	movlw	128
  2750  001CE6  0100               	movlb	0	; () banked
  2751  001CE8  6FEA               	movwf	_timer0ReloadVal8bit& (0+255),b	;volatile
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;tmr0.c: 105: INTCONbits.TMR0IF = 0;
  2755  001CEA  94F2               	bcf	intcon,2,c	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;tmr0.c: 108: INTCONbits.TMR0IE = 1;
  2759  001CEC  8AF2               	bsf	intcon,5,c	;volatile
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;tmr0.c: 111: TMR0_StartTimer();
  2763  001CEE  ECD4  F00E         	call	_TMR0_StartTimer	;wreg free
  2764  001CF2  0012               	return		;funcret
  2765  001CF4                     __end_of_TMR0_Initialize:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           tblptrh	equ	0xFF7
  2769                           tblptrl	equ	0xFF6
  2770                           tablat	equ	0xFF5
  2771                           prodh	equ	0xFF4
  2772                           prodl	equ	0xFF3
  2773                           intcon	equ	0xFF2
  2774                           postinc0	equ	0xFEE
  2775                           wreg	equ	0xFE8
  2776                           indf2	equ	0xFDF
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _TMR0_StartTimer *****************
  2784 ;; Defined at:
  2785 ;;		line 114 in file "mcc_generated_files/tmr0.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		None
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    3
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_TMR0_Initialize
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text16
  2814  001DA8                     __ptext16:
  2815                           	opt stack 0
  2816  001DA8                     _TMR0_StartTimer:
  2817                           	opt stack 25
  2818                           
  2819                           ;tmr0.c: 116: T0CONbits.TMR0ON = 1;
  2820                           
  2821                           ;incstack = 0
  2822  001DA8  8ED5               	bsf	4053,7,c	;volatile
  2823  001DAA  0012               	return		;funcret
  2824  001DAC                     __end_of_TMR0_StartTimer:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           postinc0	equ	0xFEE
  2834                           wreg	equ	0xFE8
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function _PIN_MANAGER_Initialize *****************
  2843 ;; Defined at:
  2844 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    3
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_SYSTEM_Initialize
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text17
  2873  0018D0                     __ptext17:
  2874                           	opt stack 0
  2875  0018D0                     _PIN_MANAGER_Initialize:
  2876                           	opt stack 26
  2877                           
  2878                           ;pin_manager.c: 51: LATA = 0x00;
  2879                           
  2880                           ;incstack = 0
  2881  0018D0  0E00               	movlw	0
  2882  0018D2  6E89               	movwf	3977,c	;volatile
  2883                           
  2884                           ;pin_manager.c: 52: TRISA = 0xEF;
  2885  0018D4  0EEF               	movlw	239
  2886  0018D6  6E92               	movwf	3986,c	;volatile
  2887                           
  2888                           ;pin_manager.c: 53: ANSELA = 0x0C;
  2889  0018D8  0E0C               	movlw	12
  2890  0018DA  010F               	movlb	15	; () banked
  2891  0018DC  6F38               	movwf	56,b	;volatile
  2892                           
  2893                           ;pin_manager.c: 55: LATB = 0x00;
  2894  0018DE  0E00               	movlw	0
  2895  0018E0  6E8A               	movwf	3978,c	;volatile
  2896                           
  2897                           ; BSR set to: 15
  2898                           ;pin_manager.c: 56: TRISB = 0xFF;
  2899  0018E2  6893               	setf	3987,c	;volatile
  2900                           
  2901                           ;pin_manager.c: 57: ANSELB = 0x00;
  2902  0018E4  0E00               	movlw	0
  2903  0018E6  010F               	movlb	15	; () banked
  2904  0018E8  6F39               	movwf	57,b	;volatile
  2905                           
  2906                           ;pin_manager.c: 58: WPUB = 0x00;
  2907  0018EA  0E00               	movlw	0
  2908  0018EC  6E61               	movwf	3937,c	;volatile
  2909                           
  2910                           ;pin_manager.c: 60: LATC = 0x18;
  2911  0018EE  0E18               	movlw	24
  2912  0018F0  6E8B               	movwf	3979,c	;volatile
  2913                           
  2914                           ; BSR set to: 15
  2915                           ;pin_manager.c: 61: TRISC = 0xFF;
  2916  0018F2  6894               	setf	3988,c	;volatile
  2917                           
  2918                           ;pin_manager.c: 62: ANSELC = 0x00;
  2919  0018F4  0E00               	movlw	0
  2920  0018F6  010F               	movlb	15	; () banked
  2921  0018F8  6F3A               	movwf	58,b	;volatile
  2922                           
  2923                           ;pin_manager.c: 64: LATD = 0x00;
  2924  0018FA  0E00               	movlw	0
  2925  0018FC  6E8C               	movwf	3980,c	;volatile
  2926                           
  2927                           ; BSR set to: 15
  2928                           ;pin_manager.c: 65: TRISD = 0xFF;
  2929  0018FE  6895               	setf	3989,c	;volatile
  2930                           
  2931                           ;pin_manager.c: 66: ANSELD = 0x00;
  2932  001900  0E00               	movlw	0
  2933  001902  010F               	movlb	15	; () banked
  2934  001904  6F3B               	movwf	59,b	;volatile
  2935                           
  2936                           ;pin_manager.c: 68: LATE = 0x00;
  2937  001906  0E00               	movlw	0
  2938  001908  6E8D               	movwf	3981,c	;volatile
  2939                           
  2940                           ;pin_manager.c: 69: TRISE = 0x03;
  2941  00190A  0E03               	movlw	3
  2942  00190C  6E96               	movwf	3990,c	;volatile
  2943                           
  2944                           ;pin_manager.c: 70: ANSELE = 0x03;
  2945  00190E  0E03               	movlw	3
  2946  001910  010F               	movlb	15	; () banked
  2947  001912  6F3C               	movwf	60,b	;volatile
  2948                           
  2949                           ; BSR set to: 15
  2950                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 0x01;
  2951  001914  8EF1               	bsf	intcon2,7,c	;volatile
  2952                           
  2953                           ; BSR set to: 15
  2954  001916  0012               	return		;funcret
  2955  001918                     __end_of_PIN_MANAGER_Initialize:
  2956                           	opt stack 0
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           intcon	equ	0xFF2
  2964                           intcon2	equ	0xFF1
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974 ;; *************** function _OSCILLATOR_Initialize *****************
  2975 ;; Defined at:
  2976 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    3
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_SYSTEM_Initialize
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text18
  3005  001D84                     __ptext18:
  3006                           	opt stack 0
  3007  001D84                     _OSCILLATOR_Initialize:
  3008                           	opt stack 26
  3009                           
  3010                           ;mcc.c: 126: OSCCON = 0x60;
  3011                           
  3012                           ; BSR set to: 15
  3013                           ;incstack = 0
  3014  001D84  0E60               	movlw	96
  3015  001D86  6ED3               	movwf	4051,c	;volatile
  3016                           
  3017                           ;mcc.c: 128: OSCCON2 = 0x04;
  3018  001D88  0E04               	movlw	4
  3019  001D8A  6ED2               	movwf	4050,c	;volatile
  3020                           
  3021                           ;mcc.c: 130: OSCTUNE = 0x40;
  3022  001D8C  0E40               	movlw	64
  3023  001D8E  6E9B               	movwf	3995,c	;volatile
  3024  001D90  0012               	return		;funcret
  3025  001D92                     __end_of_OSCILLATOR_Initialize:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           intcon	equ	0xFF2
  3034                           intcon2	equ	0xFF1
  3035                           postinc0	equ	0xFEE
  3036                           wreg	equ	0xFE8
  3037                           indf2	equ	0xFDF
  3038                           postinc2	equ	0xFDE
  3039                           postdec2	equ	0xFDD
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           
  3044 ;; *************** function _INTERRUPT_Initialize *****************
  3045 ;; Defined at:
  3046 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		None
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_SYSTEM_Initialize
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text19
  3075  001D70                     __ptext19:
  3076                           	opt stack 0
  3077  001D70                     _INTERRUPT_Initialize:
  3078                           	opt stack 26
  3079                           
  3080                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3081                           
  3082                           ;incstack = 0
  3083  001D70  9ED0               	bcf	4048,7,c	;volatile
  3084                           
  3085                           ;interrupt_manager.c: 59: IPR1bits.SSP1IP = 0;
  3086  001D72  969F               	bcf	3999,3,c	;volatile
  3087                           
  3088                           ;interrupt_manager.c: 61: IPR2bits.BCL1IP = 0;
  3089  001D74  96A2               	bcf	4002,3,c	;volatile
  3090                           
  3091                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  3092  001D76  9A9F               	bcf	3999,5,c	;volatile
  3093                           
  3094                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  3095  001D78  989F               	bcf	3999,4,c	;volatile
  3096                           
  3097                           ;interrupt_manager.c: 67: IPR3bits.RC2IP = 0;
  3098  001D7A  9AA5               	bcf	4005,5,c	;volatile
  3099                           
  3100                           ;interrupt_manager.c: 69: IPR3bits.TX2IP = 0;
  3101  001D7C  98A5               	bcf	4005,4,c	;volatile
  3102                           
  3103                           ;interrupt_manager.c: 71: INTCON2bits.TMR0IP = 0;
  3104  001D7E  94F1               	bcf	intcon2,2,c	;volatile
  3105                           
  3106                           ;interrupt_manager.c: 73: IPR1bits.TMR1IP = 0;
  3107  001D80  909F               	bcf	3999,0,c	;volatile
  3108  001D82  0012               	return		;funcret
  3109  001D84                     __end_of_INTERRUPT_Initialize:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           intcon	equ	0xFF2
  3118                           intcon2	equ	0xFF1
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           postdec2	equ	0xFDD
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _I2C1_Initialize *****************
  3129 ;; Defined at:
  3130 ;;		line 194 in file "mcc_generated_files/i2c1.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    3
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_SYSTEM_Initialize
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text20
  3159  001A5E                     __ptext20:
  3160                           	opt stack 0
  3161  001A5E                     _I2C1_Initialize:
  3162                           	opt stack 26
  3163                           
  3164                           ;i2c1.c: 195: i2c1_object.pTrHead = i2c1_tr_queue;
  3165                           
  3166                           ;incstack = 0
  3167  001A5E  0ECD               	movlw	low _i2c1_tr_queue
  3168  001A60  0100               	movlb	0	; () banked
  3169  001A62  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  3170  001A64  0E00               	movlw	high _i2c1_tr_queue
  3171  001A66  0100               	movlb	0	; () banked
  3172  001A68  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  3173                           
  3174                           ;i2c1.c: 196: i2c1_object.pTrTail = i2c1_tr_queue;
  3175  001A6A  0ECD               	movlw	low _i2c1_tr_queue
  3176  001A6C  0100               	movlb	0	; () banked
  3177  001A6E  6FB8               	movwf	_i2c1_object& (0+255),b
  3178  001A70  0E00               	movlw	high _i2c1_tr_queue
  3179  001A72  0100               	movlb	0	; () banked
  3180  001A74  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;i2c1.c: 197: i2c1_object.trStatus.s.empty = 1;
  3184  001A76  0100               	movlb	0	; () banked
  3185  001A78  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;i2c1.c: 198: i2c1_object.trStatus.s.full = 0;
  3189  001A7A  0100               	movlb	0	; () banked
  3190  001A7C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;i2c1.c: 200: i2c1_object.i2cErrors = 0;
  3194  001A7E  0E00               	movlw	0
  3195  001A80  0100               	movlb	0	; () banked
  3196  001A82  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;i2c1.c: 203: SSP1STAT = 0x00;
  3200  001A84  0E00               	movlw	0
  3201  001A86  6EC7               	movwf	4039,c	;volatile
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;i2c1.c: 205: SSP1CON1 = 0x28;
  3205  001A88  0E28               	movlw	40
  3206  001A8A  6EC6               	movwf	4038,c	;volatile
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;i2c1.c: 207: SSP1CON3 = 0x00;
  3210  001A8C  0E00               	movlw	0
  3211  001A8E  6ECB               	movwf	4043,c	;volatile
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;i2c1.c: 209: SSP1ADD = 0x4F;
  3215  001A90  0E4F               	movlw	79
  3216  001A92  6EC8               	movwf	4040,c	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;i2c1.c: 213: PIR1bits.SSP1IF = 0;
  3220  001A94  969E               	bcf	3998,3,c	;volatile
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;i2c1.c: 215: PIE1bits.SSP1IE = 1;
  3224  001A96  869D               	bsf	3997,3,c	;volatile
  3225                           
  3226                           ; BSR set to: 0
  3227  001A98  0012               	return		;funcret
  3228  001A9A                     __end_of_I2C1_Initialize:
  3229                           	opt stack 0
  3230                           tblptru	equ	0xFF8
  3231                           tblptrh	equ	0xFF7
  3232                           tblptrl	equ	0xFF6
  3233                           tablat	equ	0xFF5
  3234                           prodh	equ	0xFF4
  3235                           prodl	equ	0xFF3
  3236                           intcon	equ	0xFF2
  3237                           intcon2	equ	0xFF1
  3238                           postinc0	equ	0xFEE
  3239                           wreg	equ	0xFE8
  3240                           indf2	equ	0xFDF
  3241                           postinc2	equ	0xFDE
  3242                           postdec2	equ	0xFDD
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _EUSART1_Initialize *****************
  3248 ;; Defined at:
  3249 ;;		line 101 in file "mcc_generated_files/eusart1.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    3
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_SYSTEM_Initialize
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text21
  3278  001A9A                     __ptext21:
  3279                           	opt stack 0
  3280  001A9A                     _EUSART1_Initialize:
  3281                           	opt stack 26
  3282                           
  3283                           ;eusart1.c: 103: PIE1bits.RC1IE = 0;
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;incstack = 0
  3287  001A9A  9A9D               	bcf	3997,5,c	;volatile
  3288                           
  3289                           ;eusart1.c: 104: PIE1bits.TX1IE = 0;
  3290  001A9C  989D               	bcf	3997,4,c	;volatile
  3291                           
  3292                           ;eusart1.c: 109: BAUD1CON = 0x48;
  3293  001A9E  0E48               	movlw	72
  3294  001AA0  6EB8               	movwf	4024,c	;volatile
  3295                           
  3296                           ;eusart1.c: 112: RC1STA = 0x90;
  3297  001AA2  0E90               	movlw	144
  3298  001AA4  6EAB               	movwf	4011,c	;volatile
  3299                           
  3300                           ;eusart1.c: 115: TX1STA = 0x26;
  3301  001AA6  0E26               	movlw	38
  3302  001AA8  6EAC               	movwf	4012,c	;volatile
  3303                           
  3304                           ;eusart1.c: 118: SPBRG1 = 0x8A;
  3305  001AAA  0E8A               	movlw	138
  3306  001AAC  6EAF               	movwf	4015,c	;volatile
  3307                           
  3308                           ;eusart1.c: 121: SPBRGH1 = 0x00;
  3309  001AAE  0E00               	movlw	0
  3310  001AB0  6EB0               	movwf	4016,c	;volatile
  3311                           
  3312                           ;eusart1.c: 125: eusart1TxHead = 0;
  3313  001AB2  0E00               	movlw	0
  3314  001AB4  6E39               	movwf	_eusart1TxHead,c
  3315                           
  3316                           ;eusart1.c: 126: eusart1TxTail = 0;
  3317  001AB6  0E00               	movlw	0
  3318  001AB8  6E38               	movwf	_eusart1TxTail,c
  3319                           
  3320                           ;eusart1.c: 127: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3321  001ABA  0E40               	movlw	64
  3322  001ABC  0100               	movlb	0	; () banked
  3323  001ABE  6FE9               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3324                           
  3325                           ;eusart1.c: 129: eusart1RxHead = 0;
  3326  001AC0  0E00               	movlw	0
  3327  001AC2  6E37               	movwf	_eusart1RxHead,c
  3328                           
  3329                           ;eusart1.c: 130: eusart1RxTail = 0;
  3330  001AC4  0E00               	movlw	0
  3331  001AC6  6E36               	movwf	_eusart1RxTail,c
  3332                           
  3333                           ;eusart1.c: 131: eusart1RxCount = 0;
  3334  001AC8  0E00               	movlw	0
  3335  001ACA  6E35               	movwf	_eusart1RxCount,c	;volatile
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;eusart1.c: 134: PIE1bits.RC1IE = 1;
  3339  001ACC  8A9D               	bsf	3997,5,c	;volatile
  3340                           
  3341                           ; BSR set to: 0
  3342  001ACE  0012               	return		;funcret
  3343  001AD0                     __end_of_EUSART1_Initialize:
  3344                           	opt stack 0
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           indf2	equ	0xFDF
  3356                           postinc2	equ	0xFDE
  3357                           postdec2	equ	0xFDD
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8
  3361                           
  3362 ;; *************** function _ADC_Initialize *****************
  3363 ;; Defined at:
  3364 ;;		line 58 in file "mcc_generated_files/adc.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    3
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_SYSTEM_Initialize
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text22
  3393  001D5A                     __ptext22:
  3394                           	opt stack 0
  3395  001D5A                     _ADC_Initialize:
  3396                           	opt stack 26
  3397                           
  3398                           ;adc.c: 62: ADCON0 = 0x01;
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;incstack = 0
  3402  001D5A  0E01               	movlw	1
  3403  001D5C  6EC2               	movwf	4034,c	;volatile
  3404                           
  3405                           ;adc.c: 65: ADCON1 = 0x80;
  3406  001D5E  0E80               	movlw	128
  3407  001D60  6EC1               	movwf	4033,c	;volatile
  3408                           
  3409                           ;adc.c: 68: ADCON2 = 0x8e;
  3410  001D62  0E8E               	movlw	142
  3411  001D64  6EC0               	movwf	4032,c	;volatile
  3412                           
  3413                           ;adc.c: 71: ADRESL = 0x00;
  3414  001D66  0E00               	movlw	0
  3415  001D68  6EC3               	movwf	4035,c	;volatile
  3416                           
  3417                           ;adc.c: 74: ADRESH = 0x00;
  3418  001D6A  0E00               	movlw	0
  3419  001D6C  6EC4               	movwf	4036,c	;volatile
  3420  001D6E  0012               	return		;funcret
  3421  001D70                     __end_of_ADC_Initialize:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           intcon	equ	0xFF2
  3430                           intcon2	equ	0xFF1
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf2	equ	0xFDF
  3434                           postinc2	equ	0xFDE
  3435                           postdec2	equ	0xFDD
  3436                           fsr2h	equ	0xFDA
  3437                           fsr2l	equ	0xFD9
  3438                           status	equ	0xFD8
  3439                           
  3440 ;; *************** function _EUSART_CompWrite *****************
  3441 ;; Defined at:
  3442 ;;		line 253 in file "main.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  data            1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  data            1   21[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    4
  3463 ;; This function calls:
  3464 ;;		_EUSART1_Write
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text23
  3471  001B36                     __ptext23:
  3472                           	opt stack 0
  3473  001B36                     _EUSART_CompWrite:
  3474                           	opt stack 26
  3475                           
  3476                           ;incstack = 0
  3477                           ;EUSART_CompWrite@data stored from wreg
  3478  001B36  6E16               	movwf	EUSART_CompWrite@data,c
  3479                           
  3480                           ;main.c: 254: EUSART1_Write((data & 0xf0) | (not_of_before_data & 0x0f));
  3481  001B38  C034  F015         	movff	_not_of_before_data,??_EUSART_CompWrite
  3482  001B3C  0E0F               	movlw	15
  3483  001B3E  1615               	andwf	??_EUSART_CompWrite,f,c
  3484  001B40  5016               	movf	EUSART_CompWrite@data,w,c
  3485  001B42  0BF0               	andlw	240
  3486  001B44  1015               	iorwf	??_EUSART_CompWrite,w,c
  3487  001B46  EC43  F00C         	call	_EUSART1_Write
  3488                           
  3489                           ;main.c: 255: not_of_before_data = ~data;
  3490  001B4A  5016               	movf	EUSART_CompWrite@data,w,c
  3491  001B4C  0AFF               	xorlw	255
  3492  001B4E  6E34               	movwf	_not_of_before_data,c
  3493                           
  3494                           ;main.c: 256: EUSART1_Write((data << 4) | (not_of_before_data >> 4));
  3495  001B50  C034  F015         	movff	_not_of_before_data,??_EUSART_CompWrite
  3496  001B54  3A15               	swapf	??_EUSART_CompWrite,f,c
  3497  001B56  0E0F               	movlw	15
  3498  001B58  1615               	andwf	??_EUSART_CompWrite,f,c
  3499  001B5A  3816               	swapf	EUSART_CompWrite@data,w,c
  3500  001B5C  0BF0               	andlw	240
  3501  001B5E  1015               	iorwf	??_EUSART_CompWrite,w,c
  3502  001B60  EC43  F00C         	call	_EUSART1_Write
  3503  001B64  0012               	return		;funcret
  3504  001B66                     __end_of_EUSART_CompWrite:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           intcon2	equ	0xFF1
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf2	equ	0xFDF
  3517                           postinc2	equ	0xFDE
  3518                           postdec2	equ	0xFDD
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _EUSART1_Write *****************
  3524 ;; Defined at:
  3525 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  txData          1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  txData          1   19[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    3
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_EUSART_CompWrite
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text24
  3555  001886                     __ptext24:
  3556                           	opt stack 0
  3557  001886                     _EUSART1_Write:
  3558                           	opt stack 26
  3559                           
  3560                           ;incstack = 0
  3561                           ;EUSART1_Write@txData stored from wreg
  3562  001886  6E14               	movwf	EUSART1_Write@txData,c
  3563  001888                     l2219:
  3564  001888  0100               	movlb	0	; () banked
  3565  00188A  51E9               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  3566  00188C  B4D8               	btfsc	status,2,c
  3567  00188E  D7FC               	goto	l2219
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;eusart1.c: 157: }
  3571                           ;eusart1.c: 159: if (0 == PIE1bits.TX1IE && waitCTS == 0) {
  3572  001890  B89D               	btfsc	3997,4,c	;volatile
  3573  001892  D006               	goto	l537
  3574                           
  3575                           ; BSR set to: 0
  3576  001894  5045               	movf	_waitCTS,w,c	;volatile
  3577  001896  A4D8               	btfss	status,2,c
  3578  001898  D003               	goto	l537
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;eusart1.c: 160: TXREG1 = txData;
  3582  00189A  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3583                           
  3584                           ;eusart1.c: 161: } else {
  3585  00189E  D013               	goto	l2235
  3586  0018A0                     l537:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;eusart1.c: 162: PIE1bits.TX1IE = 0;
  3590  0018A0  989D               	bcf	3997,4,c	;volatile
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;eusart1.c: 163: eusart1TxBuffer[eusart1TxHead++] = txData;
  3594  0018A2  5039               	movf	_eusart1TxHead,w,c
  3595  0018A4  0D01               	mullw	1
  3596  0018A6  0E40               	movlw	low _eusart1TxBuffer
  3597  0018A8  24F3               	addwf	prodl,w,c
  3598  0018AA  6ED9               	movwf	fsr2l,c
  3599  0018AC  0E01               	movlw	high _eusart1TxBuffer
  3600  0018AE  20F4               	addwfc	prodh,w,c
  3601  0018B0  6EDA               	movwf	fsr2h,c
  3602  0018B2  C014  FFDF         	movff	EUSART1_Write@txData,indf2
  3603                           
  3604                           ; BSR set to: 0
  3605  0018B6  2A39               	incf	_eusart1TxHead,f,c
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;eusart1.c: 164: if (sizeof (eusart1TxBuffer) <= eusart1TxHead) {
  3609  0018B8  0E3F               	movlw	63
  3610  0018BA  6439               	cpfsgt	_eusart1TxHead,c
  3611  0018BC  D002               	goto	l2233
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;eusart1.c: 165: eusart1TxHead = 0;
  3615  0018BE  0E00               	movlw	0
  3616  0018C0  6E39               	movwf	_eusart1TxHead,c
  3617  0018C2                     l2233:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;eusart1.c: 166: }
  3621                           ;eusart1.c: 167: eusart1TxBufferRemaining--;
  3622  0018C2  0100               	movlb	0	; () banked
  3623  0018C4  07E9               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3624  0018C6                     l2235:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;eusart1.c: 168: }
  3628                           ;eusart1.c: 169: if (waitCTS == 0)
  3629  0018C6  5045               	movf	_waitCTS,w,c	;volatile
  3630  0018C8  A4D8               	btfss	status,2,c
  3631  0018CA  0012               	return	
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;eusart1.c: 170: PIE1bits.TX1IE = 1;
  3635  0018CC  889D               	bsf	3997,4,c	;volatile
  3636  0018CE  0012               	return	
  3637  0018D0                     __end_of_EUSART1_Write:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           intcon2	equ	0xFF1
  3647                           postinc0	equ	0xFEE
  3648                           wreg	equ	0xFE8
  3649                           indf2	equ	0xFDF
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _EUSART1_Read *****************
  3657 ;; Defined at:
  3658 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  readValue       1   19[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      unsigned char 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        1 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    3
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text25
  3687  001AD0                     __ptext25:
  3688                           	opt stack 0
  3689  001AD0                     _EUSART1_Read:
  3690                           	opt stack 27
  3691                           
  3692                           ;eusart1.c: 138: uint8_t readValue = 0;
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;incstack = 0
  3696  001AD0  0E00               	movlw	0
  3697  001AD2  6E14               	movwf	EUSART1_Read@readValue,c
  3698  001AD4                     l2481:
  3699  001AD4  5035               	movf	_eusart1RxCount,w,c	;volatile
  3700  001AD6  B4D8               	btfsc	status,2,c
  3701  001AD8  D7FD               	goto	l2481
  3702                           
  3703                           ;eusart1.c: 141: }
  3704                           ;eusart1.c: 143: PIE1bits.RC1IE = 0;
  3705  001ADA  9A9D               	bcf	3997,5,c	;volatile
  3706                           
  3707                           ;eusart1.c: 145: readValue = eusart1RxBuffer[eusart1RxTail++];
  3708  001ADC  5036               	movf	_eusart1RxTail,w,c
  3709  001ADE  0D01               	mullw	1
  3710  001AE0  0E00               	movlw	low _eusart1RxBuffer
  3711  001AE2  24F3               	addwf	prodl,w,c
  3712  001AE4  6ED9               	movwf	fsr2l,c
  3713  001AE6  0E01               	movlw	high _eusart1RxBuffer
  3714  001AE8  20F4               	addwfc	prodh,w,c
  3715  001AEA  6EDA               	movwf	fsr2h,c
  3716  001AEC  50DF               	movf	indf2,w,c
  3717  001AEE  6E14               	movwf	EUSART1_Read@readValue,c
  3718  001AF0  2A36               	incf	_eusart1RxTail,f,c
  3719                           
  3720                           ;eusart1.c: 146: if (sizeof (eusart1RxBuffer) <= eusart1RxTail) {
  3721  001AF2  0E3F               	movlw	63
  3722  001AF4  6436               	cpfsgt	_eusart1RxTail,c
  3723  001AF6  D002               	goto	l2491
  3724                           
  3725                           ;eusart1.c: 147: eusart1RxTail = 0;
  3726  001AF8  0E00               	movlw	0
  3727  001AFA  6E36               	movwf	_eusart1RxTail,c
  3728  001AFC                     l2491:
  3729                           
  3730                           ;eusart1.c: 148: }
  3731                           ;eusart1.c: 149: eusart1RxCount--;
  3732  001AFC  0635               	decf	_eusart1RxCount,f,c	;volatile
  3733                           
  3734                           ;eusart1.c: 150: PIE1bits.RC1IE = 1;
  3735  001AFE  8A9D               	bsf	3997,5,c	;volatile
  3736                           
  3737                           ;eusart1.c: 152: return readValue;
  3738  001B00  5014               	movf	EUSART1_Read@readValue,w,c
  3739  001B02  0012               	return	
  3740  001B04                     __end_of_EUSART1_Read:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           intcon2	equ	0xFF1
  3750                           postinc0	equ	0xFEE
  3751                           wreg	equ	0xFE8
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           postdec2	equ	0xFDD
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function _ADC_GetConversion *****************
  3760 ;; Defined at:
  3761 ;;		line 99 in file "mcc_generated_files/adc.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  channel         1    wreg     enum E6980
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  channel         1   23[COMRAM] enum E6980
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2   19[COMRAM] unsigned int 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;Total ram usage:        5 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    3
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text26
  3790  001B66                     __ptext26:
  3791                           	opt stack 0
  3792  001B66                     _ADC_GetConversion:
  3793                           	opt stack 27
  3794                           
  3795                           ;incstack = 0
  3796                           ;ADC_GetConversion@channel stored from wreg
  3797  001B66  6E18               	movwf	ADC_GetConversion@channel,c
  3798                           
  3799                           ;adc.c: 101: ADCON0bits.CHS = channel;
  3800  001B68  C018  F016         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3801  001B6C  4616               	rlncf	??_ADC_GetConversion,f,c
  3802  001B6E  4616               	rlncf	??_ADC_GetConversion,f,c
  3803  001B70  50C2               	movf	4034,w,c	;volatile
  3804  001B72  1816               	xorwf	??_ADC_GetConversion,w,c
  3805  001B74  0B83               	andlw	-125
  3806  001B76  1816               	xorwf	??_ADC_GetConversion,w,c
  3807  001B78  6EC2               	movwf	4034,c	;volatile
  3808                           
  3809                           ;adc.c: 104: ADCON0bits.ADON = 1;
  3810  001B7A  80C2               	bsf	4034,0,c	;volatile
  3811                           
  3812                           ;adc.c: 107: ADCON0bits.GO_nDONE = 1;
  3813  001B7C  82C2               	bsf	4034,1,c	;volatile
  3814  001B7E                     l27:
  3815  001B7E  B2C2               	btfsc	4034,1,c	;volatile
  3816  001B80  D7FE               	goto	l27
  3817                           
  3818                           ;adc.c: 111: }
  3819                           ;adc.c: 114: return ((ADRESH << 8) + ADRESL);
  3820  001B82  50C4               	movf	4036,w,c	;volatile
  3821  001B84  6E17               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  3822  001B86  6A16               	clrf	??_ADC_GetConversion& (0+255),c
  3823  001B88  50C3               	movf	4035,w,c	;volatile
  3824  001B8A  2416               	addwf	??_ADC_GetConversion,w,c
  3825  001B8C  6E14               	movwf	?_ADC_GetConversion,c
  3826  001B8E  0E00               	movlw	0
  3827  001B90  2017               	addwfc	??_ADC_GetConversion+1,w,c
  3828  001B92  6E15               	movwf	?_ADC_GetConversion+1,c
  3829  001B94  0012               	return	
  3830  001B96                     __end_of_ADC_GetConversion:
  3831                           	opt stack 0
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           intcon2	equ	0xFF1
  3840                           postinc0	equ	0xFEE
  3841                           wreg	equ	0xFE8
  3842                           indf2	equ	0xFDF
  3843                           postinc2	equ	0xFDE
  3844                           postdec2	equ	0xFDD
  3845                           fsr2h	equ	0xFDA
  3846                           fsr2l	equ	0xFD9
  3847                           status	equ	0xFD8
  3848                           
  3849 ;; *************** function _INTERRUPT_InterruptManager *****************
  3850 ;; Defined at:
  3851 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;Total ram usage:       14 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    2
  3872 ;; This function calls:
  3873 ;;		_EUSART1_Receive_ISR
  3874 ;;		_EUSART1_Transmit_ISR
  3875 ;;		_EUSART2_Receive_ISR
  3876 ;;		_EUSART2_Transmit_ISR
  3877 ;;		_I2C1_BusCollisionISR
  3878 ;;		_I2C1_ISR
  3879 ;;		_TMR0_ISR
  3880 ;;		_TMR1_ISR
  3881 ;; This function is called by:
  3882 ;;		Interrupt level 2
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	intcode
  3887  000008                     __pintcode:
  3888                           	opt stack 0
  3889  000008                     _INTERRUPT_InterruptManager:
  3890                           	opt stack 22
  3891                           
  3892                           ;incstack = 0
  3893  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3894  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  3895  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3896  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3897  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3898  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3899  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3900  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3901  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3902  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3903  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3904  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3905  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3906  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3907  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3908                           
  3909                           ;interrupt_manager.c: 78: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  3910  000042  B69D               	btfsc	3997,3,c	;volatile
  3911  000044  A69E               	btfss	3998,3,c	;volatile
  3912  000046  D003               	goto	i2l115
  3913                           
  3914                           ;interrupt_manager.c: 79: I2C1_ISR();
  3915  000048  ECF2  F009         	call	_I2C1_ISR	;wreg free
  3916                           
  3917                           ;interrupt_manager.c: 80: } else if (PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1) {
  3918  00004C  D029               	goto	i2l131
  3919  00004E                     i2l115:
  3920  00004E  B6A0               	btfsc	4000,3,c	;volatile
  3921  000050  A6A1               	btfss	4001,3,c	;volatile
  3922  000052  D003               	goto	i2l117
  3923                           
  3924                           ;interrupt_manager.c: 81: I2C1_BusCollisionISR();
  3925  000054  ECD6  F00E         	call	_I2C1_BusCollisionISR	;wreg free
  3926                           
  3927                           ;interrupt_manager.c: 82: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  3928  000058  D023               	goto	i2l131
  3929  00005A                     i2l117:
  3930  00005A  BA9D               	btfsc	3997,5,c	;volatile
  3931  00005C  AA9E               	btfss	3998,5,c	;volatile
  3932  00005E  D003               	goto	i2l119
  3933                           
  3934                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  3935  000060  ECF8  F00D         	call	_EUSART1_Receive_ISR	;wreg free
  3936                           
  3937                           ;interrupt_manager.c: 84: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  3938  000064  D01D               	goto	i2l131
  3939  000066                     i2l119:
  3940  000066  B89D               	btfsc	3997,4,c	;volatile
  3941  000068  A89E               	btfss	3998,4,c	;volatile
  3942  00006A  D003               	goto	i2l121
  3943                           
  3944                           ;interrupt_manager.c: 85: EUSART1_Transmit_ISR();
  3945  00006C  EC8C  F00C         	call	_EUSART1_Transmit_ISR	;wreg free
  3946                           
  3947                           ;interrupt_manager.c: 86: } else if (PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1) {
  3948  000070  D017               	goto	i2l131
  3949  000072                     i2l121:
  3950  000072  BAA3               	btfsc	4003,5,c	;volatile
  3951  000074  AAA4               	btfss	4004,5,c	;volatile
  3952  000076  D003               	goto	i2l123
  3953                           
  3954                           ;interrupt_manager.c: 87: EUSART2_Receive_ISR();
  3955  000078  ECE2  F00D         	call	_EUSART2_Receive_ISR	;wreg free
  3956                           
  3957                           ;interrupt_manager.c: 88: } else if (PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1) {
  3958  00007C  D011               	goto	i2l131
  3959  00007E                     i2l123:
  3960  00007E  B8A3               	btfsc	4003,4,c	;volatile
  3961  000080  A8A4               	btfss	4004,4,c	;volatile
  3962  000082  D003               	goto	i2l125
  3963                           
  3964                           ;interrupt_manager.c: 89: EUSART2_Transmit_ISR();
  3965  000084  ECCB  F00D         	call	_EUSART2_Transmit_ISR	;wreg free
  3966                           
  3967                           ;interrupt_manager.c: 90: } else if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  3968  000088  D00B               	goto	i2l131
  3969  00008A                     i2l125:
  3970  00008A  BAF2               	btfsc	intcon,5,c	;volatile
  3971  00008C  A4F2               	btfss	intcon,2,c	;volatile
  3972  00008E  D003               	goto	i2l127
  3973                           
  3974                           ;interrupt_manager.c: 91: TMR0_ISR();
  3975  000090  ECC9  F00E         	call	_TMR0_ISR	;wreg free
  3976                           
  3977                           ;interrupt_manager.c: 92: } else if (PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  3978  000094  D005               	goto	i2l131
  3979  000096                     i2l127:
  3980  000096  B09D               	btfsc	3997,0,c	;volatile
  3981  000098  A09E               	btfss	3998,0,c	;volatile
  3982  00009A  D002               	goto	i2l131
  3983                           
  3984                           ;interrupt_manager.c: 93: TMR1_ISR();
  3985  00009C  EC38  F00E         	call	_TMR1_ISR	;wreg free
  3986  0000A0                     i2l131:
  3987  0000A0  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3988  0000A4  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3989  0000A8  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3990  0000AC  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3991  0000B0  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3992  0000B4  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3993  0000B8  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3994  0000BC  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3995  0000C0  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3996  0000C4  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3997  0000C8  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3998  0000CC  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3999  0000D0  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4000  0000D4  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4001  0000D8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4002  0000DA  0011               	retfie		f
  4003  0000DC                     __end_of_INTERRUPT_InterruptManager:
  4004                           	opt stack 0
  4005                           pclatu	equ	0xFFB
  4006                           pclath	equ	0xFFA
  4007                           tblptru	equ	0xFF8
  4008                           tblptrh	equ	0xFF7
  4009                           tblptrl	equ	0xFF6
  4010                           tablat	equ	0xFF5
  4011                           prodh	equ	0xFF4
  4012                           prodl	equ	0xFF3
  4013                           intcon	equ	0xFF2
  4014                           intcon2	equ	0xFF1
  4015                           postinc0	equ	0xFEE
  4016                           fsr0h	equ	0xFEA
  4017                           fsr0l	equ	0xFE9
  4018                           wreg	equ	0xFE8
  4019                           fsr1h	equ	0xFE2
  4020                           fsr1l	equ	0xFE1
  4021                           indf2	equ	0xFDF
  4022                           postinc2	equ	0xFDE
  4023                           postdec2	equ	0xFDD
  4024                           fsr2h	equ	0xFDA
  4025                           fsr2l	equ	0xFD9
  4026                           status	equ	0xFD8
  4027                           
  4028 ;; *************** function _TMR1_ISR *****************
  4029 ;; Defined at:
  4030 ;;		line 147 in file "mcc_generated_files/tmr1.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    1
  4051 ;; This function calls:
  4052 ;;		_TMR1_CallBack
  4053 ;; This function is called by:
  4054 ;;		_INTERRUPT_InterruptManager
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text28
  4059  001C70                     __ptext28:
  4060                           	opt stack 0
  4061  001C70                     _TMR1_ISR:
  4062                           	opt stack 22
  4063                           
  4064                           ;tmr1.c: 148: static volatile unsigned int CountCallBack = 0;
  4065                           ;tmr1.c: 151: PIR1bits.TMR1IF = 0;
  4066                           
  4067                           ;incstack = 0
  4068  001C70  909E               	bcf	3998,0,c	;volatile
  4069                           
  4070                           ;tmr1.c: 154: TMR1H = (timer1ReloadVal >> 8);
  4071  001C72  504B               	movf	_timer1ReloadVal+1,w,c	;volatile
  4072  001C74  6ECF               	movwf	4047,c	;volatile
  4073                           
  4074                           ;tmr1.c: 155: TMR1L = (uint8_t) timer1ReloadVal;
  4075  001C76  C04A  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4076                           
  4077                           ;tmr1.c: 158: if (++CountCallBack >= 1) {
  4078  001C7A  4A2D               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  4079  001C7C  2A2E               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  4080  001C7E  502D               	movf	TMR1_ISR@CountCallBack,w,c	;volatile
  4081  001C80  102E               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4082  001C82  B4D8               	btfsc	status,2,c
  4083  001C84  0012               	return	
  4084                           
  4085                           ;tmr1.c: 160: TMR1_CallBack();
  4086  001C86  ECCF  F00E         	call	_TMR1_CallBack	;wreg free
  4087                           
  4088                           ;tmr1.c: 163: CountCallBack = 0;
  4089  001C8A  0E00               	movlw	0
  4090  001C8C  6E2E               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  4091  001C8E  0E00               	movlw	0
  4092  001C90  6E2D               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  4093  001C92  0012               	return	
  4094  001C94                     __end_of_TMR1_ISR:
  4095                           	opt stack 0
  4096                           pclatu	equ	0xFFB
  4097                           pclath	equ	0xFFA
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           prodh	equ	0xFF4
  4103                           prodl	equ	0xFF3
  4104                           intcon	equ	0xFF2
  4105                           intcon2	equ	0xFF1
  4106                           postinc0	equ	0xFEE
  4107                           fsr0h	equ	0xFEA
  4108                           fsr0l	equ	0xFE9
  4109                           wreg	equ	0xFE8
  4110                           fsr1h	equ	0xFE2
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _TMR1_CallBack *****************
  4120 ;; Defined at:
  4121 ;;		line 168 in file "mcc_generated_files/tmr1.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_TMR1_ISR
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text29
  4149  001D9E                     __ptext29:
  4150                           	opt stack 0
  4151  001D9E                     _TMR1_CallBack:
  4152                           	opt stack 22
  4153                           
  4154                           ;tmr1.c: 170: tmrFlag = 1;
  4155                           
  4156                           ;incstack = 0
  4157  001D9E  0E01               	movlw	1
  4158  001DA0  6E46               	movwf	_tmrFlag,c
  4159  001DA2  0012               	return		;funcret
  4160  001DA4                     __end_of_TMR1_CallBack:
  4161                           	opt stack 0
  4162                           pclatu	equ	0xFFB
  4163                           pclath	equ	0xFFA
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           prodh	equ	0xFF4
  4169                           prodl	equ	0xFF3
  4170                           intcon	equ	0xFF2
  4171                           intcon2	equ	0xFF1
  4172                           postinc0	equ	0xFEE
  4173                           fsr0h	equ	0xFEA
  4174                           fsr0l	equ	0xFE9
  4175                           wreg	equ	0xFE8
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           indf2	equ	0xFDF
  4179                           postinc2	equ	0xFDE
  4180                           postdec2	equ	0xFDD
  4181                           fsr2h	equ	0xFDA
  4182                           fsr2l	equ	0xFD9
  4183                           status	equ	0xFD8
  4184                           
  4185 ;; *************** function _TMR0_ISR *****************
  4186 ;; Defined at:
  4187 ;;		line 143 in file "mcc_generated_files/tmr0.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;Total ram usage:        0 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    1
  4208 ;; This function calls:
  4209 ;;		_TMR0_CallBack
  4210 ;; This function is called by:
  4211 ;;		_INTERRUPT_InterruptManager
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text30
  4216  001D92                     __ptext30:
  4217                           	opt stack 0
  4218  001D92                     _TMR0_ISR:
  4219                           	opt stack 22
  4220                           
  4221                           ;tmr0.c: 146: INTCONbits.TMR0IF = 0;
  4222                           
  4223                           ;incstack = 0
  4224  001D92  94F2               	bcf	intcon,2,c	;volatile
  4225                           
  4226                           ;tmr0.c: 149: TMR0L = timer0ReloadVal8bit;
  4227  001D94  C0EA  FFD6         	movff	_timer0ReloadVal8bit,4054	;volatile
  4228                           
  4229                           ;tmr0.c: 153: TMR0_CallBack();
  4230  001D98  EC7A  F00E         	call	_TMR0_CallBack	;wreg free
  4231  001D9C  0012               	return		;funcret
  4232  001D9E                     __end_of_TMR0_ISR:
  4233                           	opt stack 0
  4234                           pclatu	equ	0xFFB
  4235                           pclath	equ	0xFFA
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           intcon	equ	0xFF2
  4243                           intcon2	equ	0xFF1
  4244                           postinc0	equ	0xFEE
  4245                           fsr0h	equ	0xFEA
  4246                           fsr0l	equ	0xFE9
  4247                           wreg	equ	0xFE8
  4248                           fsr1h	equ	0xFE2
  4249                           fsr1l	equ	0xFE1
  4250                           indf2	equ	0xFDF
  4251                           postinc2	equ	0xFDE
  4252                           postdec2	equ	0xFDD
  4253                           fsr2h	equ	0xFDA
  4254                           fsr2l	equ	0xFD9
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function _TMR0_CallBack *****************
  4258 ;; Defined at:
  4259 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_TMR0_ISR
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text31
  4287  001CF4                     __ptext31:
  4288                           	opt stack 0
  4289  001CF4                     _TMR0_CallBack:
  4290                           	opt stack 22
  4291                           
  4292                           ;tmr0.c: 161: if (waitCTS == 1) {
  4293                           
  4294                           ;incstack = 0
  4295  001CF4  0445               	decf	_waitCTS,w,c
  4296  001CF6  A4D8               	btfss	status,2,c
  4297  001CF8  0012               	return	
  4298                           
  4299                           ;tmr0.c: 162: if (PORTAbits.RA7 == 0) {
  4300  001CFA  BE80               	btfsc	3968,7,c	;volatile
  4301  001CFC  0012               	return	
  4302                           
  4303                           ;tmr0.c: 163: subdata.IO_LED = waitCTS = 0;
  4304  001CFE  0E00               	movlw	0
  4305  001D00  6E45               	movwf	_waitCTS,c
  4306  001D02  B045               	btfsc	_waitCTS,0,c
  4307  001D04  D002               	bra	i2u141_45
  4308  001D06  9E44               	bcf	_subdata,7,c
  4309  001D08  D001               	bra	i2u141_46
  4310  001D0A                     i2u141_45:
  4311  001D0A  8E44               	bsf	_subdata,7,c
  4312  001D0C                     i2u141_46:
  4313                           
  4314                           ;tmr0.c: 164: PIE1bits.TXIE = 1;
  4315  001D0C  889D               	bsf	3997,4,c	;volatile
  4316  001D0E  0012               	return	
  4317  001D10                     __end_of_TMR0_CallBack:
  4318                           	opt stack 0
  4319                           pclatu	equ	0xFFB
  4320                           pclath	equ	0xFFA
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           intcon2	equ	0xFF1
  4329                           postinc0	equ	0xFEE
  4330                           fsr0h	equ	0xFEA
  4331                           fsr0l	equ	0xFE9
  4332                           wreg	equ	0xFE8
  4333                           fsr1h	equ	0xFE2
  4334                           fsr1l	equ	0xFE1
  4335                           indf2	equ	0xFDF
  4336                           postinc2	equ	0xFDE
  4337                           postdec2	equ	0xFDD
  4338                           fsr2h	equ	0xFDA
  4339                           fsr2l	equ	0xFD9
  4340                           status	equ	0xFD8
  4341                           
  4342 ;; *************** function _I2C1_ISR *****************
  4343 ;; Defined at:
  4344 ;;		line 226 in file "mcc_generated_files/i2c1.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;Total ram usage:        2 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		_I2C1_FunctionComplete
  4367 ;;		_I2C1_Stop
  4368 ;; This function is called by:
  4369 ;;		_INTERRUPT_InterruptManager
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text32
  4374  0013E4                     __ptext32:
  4375                           	opt stack 0
  4376  0013E4                     _I2C1_ISR:
  4377                           	opt stack 22
  4378                           
  4379                           ;i2c1.c: 228: static uint8_t *pi2c_buf_ptr;
  4380                           ;i2c1.c: 229: static uint16_t i2c_address = 0;
  4381                           ;i2c1.c: 230: static uint8_t i2c_bytes_left = 0;
  4382                           ;i2c1.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  4383                           ;i2c1.c: 233: PIR1bits.SSP1IF = 0;
  4384                           
  4385                           ;incstack = 0
  4386  0013E4  969E               	bcf	3998,3,c	;volatile
  4387                           
  4388                           ;i2c1.c: 237: if (SSP1CON1bits.WCOL) {
  4389  0013E6  AEC6               	btfss	4038,7,c	;volatile
  4390  0013E8  D10C               	goto	i2l2391
  4391                           
  4392                           ;i2c1.c: 239: SSP1CON1bits.WCOL = 0;
  4393  0013EA  9EC6               	bcf	4038,7,c	;volatile
  4394                           
  4395                           ;i2c1.c: 240: i2c1_state = S_MASTER_IDLE;
  4396  0013EC  0E00               	movlw	0
  4397  0013EE  6E43               	movwf	_i2c1_state,c
  4398                           
  4399                           ;i2c1.c: 241: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  4400  0013F0  EE20 F003          	lfsr	2,3
  4401  0013F4  5029               	movf	_p_i2c1_current,w,c
  4402  0013F6  26D9               	addwf	fsr2l,f,c
  4403  0013F8  502A               	movf	_p_i2c1_current+1,w,c
  4404  0013FA  22DA               	addwfc	fsr2h,f,c
  4405  0013FC  CFDE F004          	movff	postinc2,??_I2C1_ISR
  4406  001400  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
  4407  001404  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
  4408  001408  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  4409  00140C  0E01               	movlw	1
  4410  00140E  6EDF               	movwf	indf2,c
  4411                           
  4412                           ;i2c1.c: 244: p_i2c1_current = (0);
  4413  001410  0E00               	movlw	0
  4414  001412  6E29               	movwf	_p_i2c1_current,c
  4415  001414  0E00               	movlw	0
  4416  001416  6E2A               	movwf	_p_i2c1_current+1,c
  4417                           
  4418                           ;i2c1.c: 246: return;
  4419  001418  0012               	return	
  4420  00141A                     i2l330:
  4421                           
  4422                           ;i2c1.c: 253: if (i2c1_object.trStatus.s.empty != 1) {
  4423  00141A  0100               	movlb	0	; () banked
  4424  00141C  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
  4425  00141E  0012               	return	
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;i2c1.c: 255: p_i2c1_current = i2c1_object.pTrHead;
  4429  001420  C0BA  F029         	movff	_i2c1_object+2,_p_i2c1_current
  4430  001424  C0BB  F02A         	movff	_i2c1_object+3,_p_i2c1_current+1
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;i2c1.c: 256: i2c1_trb_count = i2c1_object.pTrHead->count;
  4434  001428  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
  4435  00142C  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
  4436  001430  50DF               	movf	indf2,w,c
  4437  001432  6E42               	movwf	_i2c1_trb_count,c
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;i2c1.c: 257: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  4441  001434  0100               	movlb	0	; () banked
  4442  001436  EE20 F001          	lfsr	2,1
  4443  00143A  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
  4444  00143C  26D9               	addwf	fsr2l,f,c
  4445  00143E  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
  4446  001440  22DA               	addwfc	fsr2h,f,c
  4447  001442  CFDE F02B          	movff	postinc2,_p_i2c1_trb_current
  4448  001446  CFDD F02C          	movff	postdec2,_p_i2c1_trb_current+1
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;i2c1.c: 259: i2c1_object.pTrHead++;
  4452  00144A  0E05               	movlw	5
  4453  00144C  0100               	movlb	0	; () banked
  4454  00144E  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
  4455  001450  0E00               	movlw	0
  4456  001452  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;i2c1.c: 262: if (i2c1_object.pTrHead == (i2c1_tr_queue + 1)) {
  4460  001454  0ED2               	movlw	low (_i2c1_tr_queue+5)
  4461  001456  0100               	movlb	0	; () banked
  4462  001458  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
  4463  00145A  E10B               	bnz	i2l2283
  4464  00145C  0E00               	movlw	high (_i2c1_tr_queue+5)
  4465  00145E  0100               	movlb	0	; () banked
  4466  001460  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
  4467  001462  A4D8               	btfss	status,2,c
  4468  001464  D006               	goto	i2l2283
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;i2c1.c: 264: i2c1_object.pTrHead = i2c1_tr_queue;
  4472  001466  0ECD               	movlw	low _i2c1_tr_queue
  4473  001468  0100               	movlb	0	; () banked
  4474  00146A  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  4475  00146C  0E00               	movlw	high _i2c1_tr_queue
  4476  00146E  0100               	movlb	0	; () banked
  4477  001470  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  4478  001472                     i2l2283:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;i2c1.c: 265: }
  4482                           ;i2c1.c: 269: i2c1_object.trStatus.s.full = 0;
  4483  001472  0100               	movlb	0	; () banked
  4484  001474  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  4485                           
  4486                           ;i2c1.c: 272: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  4487  001476  0100               	movlb	0	; () banked
  4488  001478  51B8               	movf	_i2c1_object& (0+255),w,b
  4489  00147A  0100               	movlb	0	; () banked
  4490  00147C  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
  4491  00147E  E108               	bnz	i2l333
  4492  001480  0100               	movlb	0	; () banked
  4493  001482  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  4494  001484  0100               	movlb	0	; () banked
  4495  001486  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
  4496  001488  A4D8               	btfss	status,2,c
  4497  00148A  D002               	goto	i2l333
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;i2c1.c: 274: i2c1_object.trStatus.s.empty = 1;
  4501  00148C  0100               	movlb	0	; () banked
  4502  00148E  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  4503  001490                     i2l333:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;i2c1.c: 275: }
  4507                           ;i2c1.c: 278: SSP1CON2bits.SEN = 1;
  4508  001490  80C5               	bsf	4037,0,c	;volatile
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;i2c1.c: 281: i2c1_state = S_MASTER_SEND_ADDR;
  4512  001492  0E02               	movlw	2
  4513  001494  6E43               	movwf	_i2c1_state,c
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;i2c1.c: 282: }
  4517                           ;i2c1.c: 284: break;
  4518  001496  0012               	return	
  4519  001498                     i2l335:
  4520                           
  4521                           ;i2c1.c: 291: SSP1CON2bits.RSEN = 1;
  4522  001498  82C5               	bsf	4037,1,c	;volatile
  4523                           
  4524                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  4525  00149A  0E02               	movlw	2
  4526  00149C  6E43               	movwf	_i2c1_state,c
  4527                           
  4528                           ;i2c1.c: 296: break;
  4529  00149E  0012               	return	
  4530  0014A0                     i2l336:
  4531                           
  4532                           ;i2c1.c: 300: if (SSP1CON2bits.ACKSTAT) {
  4533  0014A0  ACC5               	btfss	4037,6,c	;volatile
  4534  0014A2  D006               	goto	i2l2295
  4535                           
  4536                           ;i2c1.c: 301: i2c1_object.i2cErrors++;
  4537  0014A4  0100               	movlb	0	; () banked
  4538  0014A6  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;i2c1.c: 302: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4542  0014A8  0E04               	movlw	4
  4543  0014AA  EC10  F00D         	call	_I2C1_Stop
  4544                           
  4545                           ;i2c1.c: 303: } else {
  4546  0014AE  0012               	return	
  4547  0014B0                     i2l2295:
  4548                           
  4549                           ;i2c1.c: 305: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  4550  0014B0  90D8               	bcf	status,0,c
  4551  0014B2  3048               	rrcf	I2C1_ISR@i2c_address+1,w,c
  4552  0014B4  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  4553  0014B6  3047               	rrcf	I2C1_ISR@i2c_address,w,c
  4554  0014B8  6E04               	movwf	??_I2C1_ISR& (0+255),c
  4555  0014BA  5004               	movf	??_I2C1_ISR,w,c
  4556  0014BC  6EC9               	movwf	4041,c	;volatile
  4557                           
  4558                           ;i2c1.c: 308: if (i2c_address & 0x01) {
  4559  0014BE  A047               	btfss	I2C1_ISR@i2c_address,0,c
  4560  0014C0  D003               	goto	i2l2301
  4561                           
  4562                           ;i2c1.c: 311: i2c1_state = S_MASTER_10BIT_RESTART;
  4563  0014C2  0E0B               	movlw	11
  4564  0014C4  6E43               	movwf	_i2c1_state,c
  4565                           
  4566                           ;i2c1.c: 312: } else {
  4567  0014C6  0012               	return	
  4568  0014C8                     i2l2301:
  4569                           
  4570                           ;i2c1.c: 314: i2c1_state = S_MASTER_SEND_DATA;
  4571  0014C8  0E03               	movlw	3
  4572  0014CA  6E43               	movwf	_i2c1_state,c
  4573                           
  4574                           ;i2c1.c: 315: }
  4575                           ;i2c1.c: 316: }
  4576                           ;i2c1.c: 318: break;
  4577  0014CC  0012               	return	
  4578  0014CE                     i2l341:
  4579                           
  4580                           ;i2c1.c: 322: if (SSP1CON2bits.ACKSTAT) {
  4581  0014CE  ACC5               	btfss	4037,6,c	;volatile
  4582  0014D0  D006               	goto	i2l342
  4583                           
  4584                           ;i2c1.c: 323: i2c1_object.i2cErrors++;
  4585  0014D2  0100               	movlb	0	; () banked
  4586  0014D4  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;i2c1.c: 324: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4590  0014D6  0E04               	movlw	4
  4591  0014D8  EC10  F00D         	call	_I2C1_Stop
  4592                           
  4593                           ;i2c1.c: 325: } else {
  4594  0014DC  0012               	return	
  4595  0014DE                     i2l342:
  4596                           
  4597                           ;i2c1.c: 328: SSP1CON2bits.RSEN = 1;
  4598  0014DE  82C5               	bsf	4037,1,c	;volatile
  4599                           
  4600                           ;i2c1.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4601  0014E0  C047  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  4602  0014E4  C048  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  4603  0014E8  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  4604  0014EC  6A05               	clrf	??_I2C1_ISR+1,c
  4605  0014EE  0E06               	movlw	6
  4606  0014F0  1604               	andwf	??_I2C1_ISR,f,c
  4607  0014F2  0E00               	movlw	0
  4608  0014F4  1605               	andwf	??_I2C1_ISR+1,f,c
  4609  0014F6  0EF0               	movlw	240
  4610  0014F8  1004               	iorwf	??_I2C1_ISR,w,c
  4611  0014FA  6E47               	movwf	I2C1_ISR@i2c_address,c
  4612  0014FC  5005               	movf	??_I2C1_ISR+1,w,c
  4613  0014FE  6E48               	movwf	I2C1_ISR@i2c_address+1,c
  4614                           
  4615                           ;i2c1.c: 335: i2c_address |= 0x0001;
  4616  001500  8047               	bsf	I2C1_ISR@i2c_address,0,c
  4617                           
  4618                           ;i2c1.c: 338: i2c_10bit_address_restart = 1;
  4619  001502  0E01               	movlw	1
  4620  001504  6E40               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  4621                           
  4622                           ;i2c1.c: 341: i2c1_state = S_MASTER_SEND_ADDR;
  4623  001506  0E02               	movlw	2
  4624  001508  6E43               	movwf	_i2c1_state,c
  4625                           
  4626                           ;i2c1.c: 342: }
  4627                           ;i2c1.c: 344: break;
  4628  00150A  0012               	return	
  4629  00150C                     i2l2315:
  4630                           
  4631                           ;i2c1.c: 359: if (i2c_10bit_address_restart != 1) {
  4632  00150C  0440               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  4633  00150E  B4D8               	btfsc	status,2,c
  4634  001510  D01A               	goto	i2l346
  4635                           
  4636                           ;i2c1.c: 361: i2c_address = p_i2c1_trb_current->address;
  4637  001512  C02B  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  4638  001516  C02C  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  4639  00151A  CFDE F047          	movff	postinc2,I2C1_ISR@i2c_address
  4640  00151E  CFDD F048          	movff	postdec2,I2C1_ISR@i2c_address+1
  4641                           
  4642                           ;i2c1.c: 362: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  4643  001522  EE20 F003          	lfsr	2,3
  4644  001526  502B               	movf	_p_i2c1_trb_current,w,c
  4645  001528  26D9               	addwf	fsr2l,f,c
  4646  00152A  502C               	movf	_p_i2c1_trb_current+1,w,c
  4647  00152C  22DA               	addwfc	fsr2h,f,c
  4648  00152E  CFDE F027          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  4649  001532  CFDD F028          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  4650                           
  4651                           ;i2c1.c: 363: i2c_bytes_left = p_i2c1_trb_current->length;
  4652  001536  EE20 F002          	lfsr	2,2
  4653  00153A  502B               	movf	_p_i2c1_trb_current,w,c
  4654  00153C  26D9               	addwf	fsr2l,f,c
  4655  00153E  502C               	movf	_p_i2c1_trb_current+1,w,c
  4656  001540  22DA               	addwfc	fsr2h,f,c
  4657  001542  50DF               	movf	indf2,w,c
  4658  001544  6E41               	movwf	I2C1_ISR@i2c_bytes_left,c
  4659  001546                     i2l346:
  4660                           
  4661                           ;i2c1.c: 383: SSP1BUF = i2c_address;
  4662  001546  C047  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  4663                           
  4664                           ;i2c1.c: 384: if (i2c_address & 0x01) {
  4665  00154A  A047               	btfss	I2C1_ISR@i2c_address,0,c
  4666  00154C  D003               	goto	i2l2335
  4667                           
  4668                           ;i2c1.c: 386: i2c1_state = S_MASTER_ACK_ADDR;
  4669  00154E  0E05               	movlw	5
  4670  001550  6E43               	movwf	_i2c1_state,c
  4671                           
  4672                           ;i2c1.c: 387: } else {
  4673  001552  0012               	return	
  4674  001554                     i2l2335:
  4675                           
  4676                           ;i2c1.c: 389: i2c1_state = S_MASTER_SEND_DATA;
  4677  001554  0E03               	movlw	3
  4678  001556  6E43               	movwf	_i2c1_state,c
  4679                           
  4680                           ;i2c1.c: 390: }
  4681                           ;i2c1.c: 391: }
  4682                           ;i2c1.c: 392: break;
  4683  001558  0012               	return	
  4684  00155A                     i2l352:
  4685                           
  4686                           ;i2c1.c: 397: if (SSP1CON2bits.ACKSTAT) {
  4687  00155A  ACC5               	btfss	4037,6,c	;volatile
  4688  00155C  D007               	goto	i2l2343
  4689                           
  4690                           ;i2c1.c: 399: i2c1_object.i2cErrors++;
  4691  00155E  0100               	movlb	0	; () banked
  4692  001560  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;i2c1.c: 402: SSP1CON2bits.ACKSTAT = 0;
  4696  001562  9CC5               	bcf	4037,6,c	;volatile
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;i2c1.c: 405: I2C1_Stop(I2C1_DATA_NO_ACK);
  4700  001564  0E05               	movlw	5
  4701  001566  EC10  F00D         	call	_I2C1_Stop
  4702                           
  4703                           ;i2c1.c: 407: } else {
  4704  00156A  0012               	return	
  4705  00156C                     i2l2343:
  4706                           
  4707                           ;i2c1.c: 409: if (i2c_bytes_left-- == 0U) {
  4708  00156C  0641               	decf	I2C1_ISR@i2c_bytes_left,f,c
  4709  00156E  2841               	incf	I2C1_ISR@i2c_bytes_left,w,c
  4710  001570  A4D8               	btfss	status,2,c
  4711  001572  D00E               	goto	i2l2353
  4712                           
  4713                           ;i2c1.c: 413: p_i2c1_trb_current++;
  4714  001574  0E05               	movlw	5
  4715  001576  262B               	addwf	_p_i2c1_trb_current,f,c
  4716  001578  0E00               	movlw	0
  4717  00157A  222C               	addwfc	_p_i2c1_trb_current+1,f,c
  4718                           
  4719                           ;i2c1.c: 416: if (--i2c1_trb_count == 0) {
  4720  00157C  2E42               	decfsz	_i2c1_trb_count,f,c
  4721  00157E  D004               	goto	i2l356
  4722                           
  4723                           ;i2c1.c: 417: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4724  001580  0E00               	movlw	0
  4725  001582  EC10  F00D         	call	_I2C1_Stop
  4726                           
  4727                           ;i2c1.c: 418: } else {
  4728  001586  0012               	return	
  4729  001588                     i2l356:
  4730                           
  4731                           ;i2c1.c: 425: SSP1CON2bits.RSEN = 1;
  4732  001588  82C5               	bsf	4037,1,c	;volatile
  4733                           
  4734                           ;i2c1.c: 428: i2c1_state = S_MASTER_SEND_ADDR;
  4735  00158A  0E02               	movlw	2
  4736  00158C  6E43               	movwf	_i2c1_state,c
  4737                           
  4738                           ;i2c1.c: 430: }
  4739                           ;i2c1.c: 431: } else {
  4740  00158E  0012               	return	
  4741  001590                     i2l2353:
  4742                           
  4743                           ;i2c1.c: 433: SSP1BUF = *pi2c_buf_ptr++;
  4744  001590  C027  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4745  001594  C028  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4746  001598  50DF               	movf	indf2,w,c
  4747  00159A  6EC9               	movwf	4041,c	;volatile
  4748  00159C  4A27               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4749  00159E  2A28               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4750                           
  4751                           ;i2c1.c: 434: }
  4752                           ;i2c1.c: 435: }
  4753                           ;i2c1.c: 436: break;
  4754  0015A0  0012               	return	
  4755  0015A2                     i2l359:
  4756                           
  4757                           ;i2c1.c: 441: if (SSP1CON2bits.ACKSTAT) {
  4758  0015A2  ACC5               	btfss	4037,6,c	;volatile
  4759  0015A4  D007               	goto	i2l360
  4760                           
  4761                           ;i2c1.c: 444: i2c1_object.i2cErrors++;
  4762  0015A6  0100               	movlb	0	; () banked
  4763  0015A8  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;i2c1.c: 447: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4767  0015AA  0E04               	movlw	4
  4768  0015AC  EC10  F00D         	call	_I2C1_Stop
  4769                           
  4770                           ;i2c1.c: 450: SSP1CON2bits.ACKSTAT = 0;
  4771  0015B0  9CC5               	bcf	4037,6,c	;volatile
  4772                           
  4773                           ;i2c1.c: 451: } else {
  4774  0015B2  0012               	return	
  4775  0015B4                     i2l360:
  4776                           
  4777                           ;i2c1.c: 452: SSP1CON2bits.RCEN = 1;
  4778  0015B4  86C5               	bsf	4037,3,c	;volatile
  4779                           
  4780                           ;i2c1.c: 453: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4781  0015B6  0E08               	movlw	8
  4782  0015B8  6E43               	movwf	_i2c1_state,c
  4783                           
  4784                           ;i2c1.c: 454: }
  4785                           ;i2c1.c: 455: break;
  4786  0015BA  0012               	return	
  4787  0015BC                     i2l2365:
  4788                           
  4789                           ;i2c1.c: 462: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4790  0015BC  0E08               	movlw	8
  4791  0015BE  6E43               	movwf	_i2c1_state,c
  4792                           
  4793                           ;i2c1.c: 465: SSP1CON2bits.RCEN = 1;
  4794  0015C0  86C5               	bsf	4037,3,c	;volatile
  4795                           
  4796                           ;i2c1.c: 467: break;
  4797  0015C2  0012               	return	
  4798  0015C4                     i2l2369:
  4799                           
  4800                           ;i2c1.c: 472: *pi2c_buf_ptr++ = SSP1BUF;
  4801  0015C4  C027  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4802  0015C8  C028  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4803  0015CC  CFC9 FFDF          	movff	4041,indf2	;volatile
  4804  0015D0  4A27               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4805  0015D2  2A28               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4806                           
  4807                           ;i2c1.c: 475: if (--i2c_bytes_left) {
  4808  0015D4  0E01               	movlw	1
  4809  0015D6  5E41               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  4810  0015D8  B4D8               	btfsc	status,2,c
  4811  0015DA  D004               	goto	i2l364
  4812                           
  4813                           ;i2c1.c: 481: SSP1CON2bits.ACKDT = 0;
  4814  0015DC  9AC5               	bcf	4037,5,c	;volatile
  4815                           
  4816                           ;i2c1.c: 484: i2c1_state = S_MASTER_RCV_DATA;
  4817  0015DE  0E06               	movlw	6
  4818  0015E0  6E43               	movwf	_i2c1_state,c
  4819                           
  4820                           ;i2c1.c: 485: } else {
  4821  0015E2  D003               	goto	i2l2381
  4822  0015E4                     i2l364:
  4823                           
  4824                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  4825  0015E4  8AC5               	bsf	4037,5,c	;volatile
  4826                           
  4827                           ;i2c1.c: 491: I2C1_FunctionComplete();
  4828  0015E6  ECA1  F00E         	call	_I2C1_FunctionComplete	;wreg free
  4829  0015EA                     i2l2381:
  4830                           
  4831                           ;i2c1.c: 492: }
  4832                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  4833  0015EA  88C5               	bsf	4037,4,c	;volatile
  4834                           
  4835                           ;i2c1.c: 496: break;
  4836  0015EC  0012               	return	
  4837  0015EE                     i2l2383:
  4838                           
  4839                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  4840                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4841  0015EE  0E00               	movlw	0
  4842  0015F0  EC10  F00D         	call	_I2C1_Stop
  4843                           
  4844                           ;i2c1.c: 503: break;
  4845  0015F4  0012               	return	
  4846  0015F6                     i2l2385:
  4847                           
  4848                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  4849  0015F6  0100               	movlb	0	; () banked
  4850  0015F8  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  4854  0015FA  0E06               	movlw	6
  4855  0015FC  EC10  F00D         	call	_I2C1_Stop
  4856                           
  4857                           ;i2c1.c: 513: }
  4858                           
  4859                           ;i2c1.c: 511: break;
  4860  001600  0012               	return	
  4861  001602                     i2l2391:
  4862  001602  5043               	movf	_i2c1_state,w,c
  4863                           
  4864                           ; Switch size 1, requested type "space"
  4865                           ; Number of cases is 11, Range of values is 0 to 11
  4866                           ; switch strategies available:
  4867                           ; Name         Instructions Cycles
  4868                           ; simple_byte           34    18 (average)
  4869                           ;	Chosen strategy is simple_byte
  4870  001604  0A00               	xorlw	0	; case 0
  4871  001606  B4D8               	btfsc	status,2,c
  4872  001608  D708               	goto	i2l330
  4873  00160A  0A01               	xorlw	1	; case 1
  4874  00160C  B4D8               	btfsc	status,2,c
  4875  00160E  D744               	goto	i2l335
  4876  001610  0A03               	xorlw	3	; case 2
  4877  001612  B4D8               	btfsc	status,2,c
  4878  001614  D77B               	goto	i2l2315
  4879  001616  0A01               	xorlw	1	; case 3
  4880  001618  B4D8               	btfsc	status,2,c
  4881  00161A  D79F               	goto	i2l352
  4882  00161C  0A07               	xorlw	7	; case 4
  4883  00161E  B4D8               	btfsc	status,2,c
  4884  001620  D7E6               	goto	i2l2383
  4885  001622  0A01               	xorlw	1	; case 5
  4886  001624  B4D8               	btfsc	status,2,c
  4887  001626  D7BD               	goto	i2l359
  4888  001628  0A03               	xorlw	3	; case 6
  4889  00162A  B4D8               	btfsc	status,2,c
  4890  00162C  D7C7               	goto	i2l2365
  4891  00162E  0A01               	xorlw	1	; case 7
  4892  001630  B4D8               	btfsc	status,2,c
  4893  001632  D7DD               	goto	i2l2383
  4894  001634  0A0F               	xorlw	15	; case 8
  4895  001636  B4D8               	btfsc	status,2,c
  4896  001638  D7C5               	goto	i2l2369
  4897  00163A  0A02               	xorlw	2	; case 10
  4898  00163C  B4D8               	btfsc	status,2,c
  4899  00163E  D730               	goto	i2l336
  4900  001640  0A01               	xorlw	1	; case 11
  4901  001642  B4D8               	btfsc	status,2,c
  4902  001644  D744               	goto	i2l341
  4903  001646  D7D7               	goto	i2l2385
  4904  001648                     __end_of_I2C1_ISR:
  4905                           	opt stack 0
  4906                           pclatu	equ	0xFFB
  4907                           pclath	equ	0xFFA
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           intcon2	equ	0xFF1
  4916                           postinc0	equ	0xFEE
  4917                           fsr0h	equ	0xFEA
  4918                           fsr0l	equ	0xFE9
  4919                           wreg	equ	0xFE8
  4920                           fsr1h	equ	0xFE2
  4921                           fsr1l	equ	0xFE1
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _I2C1_Stop *****************
  4930 ;; Defined at:
  4931 ;;		line 530 in file "mcc_generated_files/i2c1.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  completion_c    1    wreg     enum E6981
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  completion_c    1    2[COMRAM] enum E6981
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;Total ram usage:        3 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_I2C1_ISR
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text33
  4959  001A20                     __ptext33:
  4960                           	opt stack 0
  4961  001A20                     _I2C1_Stop:
  4962                           	opt stack 22
  4963                           
  4964                           ;incstack = 0
  4965                           ;I2C1_Stop@completion_code stored from wreg
  4966  001A20  6E03               	movwf	I2C1_Stop@completion_code,c
  4967                           
  4968                           ;i2c1.c: 532: SSP1CON2bits.PEN = 1;
  4969  001A22  84C5               	bsf	4037,2,c	;volatile
  4970                           
  4971                           ;i2c1.c: 535: if (p_i2c1_current->pTrFlag != (0)) {
  4972  001A24  EE20 F003          	lfsr	2,3
  4973  001A28  5029               	movf	_p_i2c1_current,w,c
  4974  001A2A  26D9               	addwf	fsr2l,f,c
  4975  001A2C  502A               	movf	_p_i2c1_current+1,w,c
  4976  001A2E  22DA               	addwfc	fsr2h,f,c
  4977  001A30  50DE               	movf	postinc2,w,c
  4978  001A32  10DE               	iorwf	postinc2,w,c
  4979  001A34  B4D8               	btfsc	status,2,c
  4980  001A36  D010               	goto	i2l2207
  4981                           
  4982                           ;i2c1.c: 537: *(p_i2c1_current->pTrFlag) = completion_code;
  4983  001A38  EE20 F003          	lfsr	2,3
  4984  001A3C  5029               	movf	_p_i2c1_current,w,c
  4985  001A3E  26D9               	addwf	fsr2l,f,c
  4986  001A40  502A               	movf	_p_i2c1_current+1,w,c
  4987  001A42  22DA               	addwfc	fsr2h,f,c
  4988  001A44  CFDE F001          	movff	postinc2,??_I2C1_Stop
  4989  001A48  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
  4990  001A4C  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
  4991  001A50  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  4992  001A54  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
  4993  001A58                     i2l2207:
  4994                           
  4995                           ;i2c1.c: 538: }
  4996                           ;i2c1.c: 541: i2c1_state = S_MASTER_IDLE;
  4997  001A58  0E00               	movlw	0
  4998  001A5A  6E43               	movwf	_i2c1_state,c
  4999  001A5C  0012               	return		;funcret
  5000  001A5E                     __end_of_I2C1_Stop:
  5001                           	opt stack 0
  5002                           pclatu	equ	0xFFB
  5003                           pclath	equ	0xFFA
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           intcon2	equ	0xFF1
  5012                           postinc0	equ	0xFEE
  5013                           fsr0h	equ	0xFEA
  5014                           fsr0l	equ	0xFE9
  5015                           wreg	equ	0xFE8
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _I2C1_FunctionComplete *****************
  5026 ;; Defined at:
  5027 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_I2C1_ISR
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text34
  5055  001D42                     __ptext34:
  5056                           	opt stack 0
  5057  001D42                     _I2C1_FunctionComplete:
  5058                           	opt stack 22
  5059                           
  5060                           ;i2c1.c: 519: p_i2c1_trb_current++;
  5061                           
  5062                           ;incstack = 0
  5063  001D42  0E05               	movlw	5
  5064  001D44  262B               	addwf	_p_i2c1_trb_current,f,c
  5065  001D46  0E00               	movlw	0
  5066  001D48  222C               	addwfc	_p_i2c1_trb_current+1,f,c
  5067                           
  5068                           ;i2c1.c: 522: if (--i2c1_trb_count == 0) {
  5069  001D4A  2E42               	decfsz	_i2c1_trb_count,f,c
  5070  001D4C  D003               	goto	i2l2215
  5071                           
  5072                           ;i2c1.c: 523: i2c1_state = S_MASTER_SEND_STOP;
  5073  001D4E  0E04               	movlw	4
  5074  001D50  6E43               	movwf	_i2c1_state,c
  5075                           
  5076                           ;i2c1.c: 524: } else {
  5077  001D52  0012               	return	
  5078  001D54                     i2l2215:
  5079                           
  5080                           ;i2c1.c: 525: i2c1_state = S_MASTER_RESTART;
  5081  001D54  0E01               	movlw	1
  5082  001D56  6E43               	movwf	_i2c1_state,c
  5083  001D58  0012               	return	
  5084  001D5A                     __end_of_I2C1_FunctionComplete:
  5085                           	opt stack 0
  5086                           pclatu	equ	0xFFB
  5087                           pclath	equ	0xFFA
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodh	equ	0xFF4
  5093                           prodl	equ	0xFF3
  5094                           intcon	equ	0xFF2
  5095                           intcon2	equ	0xFF1
  5096                           postinc0	equ	0xFEE
  5097                           fsr0h	equ	0xFEA
  5098                           fsr0l	equ	0xFE9
  5099                           wreg	equ	0xFE8
  5100                           fsr1h	equ	0xFE2
  5101                           fsr1l	equ	0xFE1
  5102                           indf2	equ	0xFDF
  5103                           postinc2	equ	0xFDE
  5104                           postdec2	equ	0xFDD
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8
  5108                           
  5109 ;; *************** function _I2C1_BusCollisionISR *****************
  5110 ;; Defined at:
  5111 ;;		line 656 in file "mcc_generated_files/i2c1.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		None
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_INTERRUPT_InterruptManager
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text35
  5139  001DAC                     __ptext35:
  5140                           	opt stack 0
  5141  001DAC                     _I2C1_BusCollisionISR:
  5142                           	opt stack 23
  5143                           
  5144                           ;incstack = 0
  5145  001DAC  0012               	return		;funcret
  5146  001DAE                     __end_of_I2C1_BusCollisionISR:
  5147                           	opt stack 0
  5148                           pclatu	equ	0xFFB
  5149                           pclath	equ	0xFFA
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           intcon2	equ	0xFF1
  5158                           postinc0	equ	0xFEE
  5159                           fsr0h	equ	0xFEA
  5160                           fsr0l	equ	0xFE9
  5161                           wreg	equ	0xFE8
  5162                           fsr1h	equ	0xFE2
  5163                           fsr1l	equ	0xFE1
  5164                           indf2	equ	0xFDF
  5165                           postinc2	equ	0xFDE
  5166                           postdec2	equ	0xFDD
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _EUSART2_Transmit_ISR *****************
  5172 ;; Defined at:
  5173 ;;		line 147 in file "mcc_generated_files/eusart2.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        0 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_INTERRUPT_InterruptManager
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text36
  5201  001B96                     __ptext36:
  5202                           	opt stack 0
  5203  001B96                     _EUSART2_Transmit_ISR:
  5204                           	opt stack 23
  5205                           
  5206                           ;eusart2.c: 150: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  5207                           
  5208                           ;incstack = 0
  5209  001B96  0E08               	movlw	8
  5210  001B98  603D               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
  5211  001B9A  D012               	goto	i2l473
  5212                           
  5213                           ;eusart2.c: 151: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
  5214  001B9C  503E               	movf	_eusart2TxTail,w,c
  5215  001B9E  0D01               	mullw	1
  5216  001BA0  0EB0               	movlw	low _eusart2TxBuffer
  5217  001BA2  24F3               	addwf	prodl,w,c
  5218  001BA4  6ED9               	movwf	fsr2l,c
  5219  001BA6  0E00               	movlw	high _eusart2TxBuffer
  5220  001BA8  20F4               	addwfc	prodh,w,c
  5221  001BAA  6EDA               	movwf	fsr2h,c
  5222  001BAC  50DF               	movf	indf2,w,c
  5223  001BAE  6E73               	movwf	3955,c	;volatile
  5224  001BB0  2A3E               	incf	_eusart2TxTail,f,c
  5225                           
  5226                           ;eusart2.c: 152: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  5227  001BB2  0E07               	movlw	7
  5228  001BB4  643E               	cpfsgt	_eusart2TxTail,c
  5229  001BB6  D002               	goto	i2l2447
  5230                           
  5231                           ;eusart2.c: 153: eusart2TxTail = 0;
  5232  001BB8  0E00               	movlw	0
  5233  001BBA  6E3E               	movwf	_eusart2TxTail,c
  5234  001BBC                     i2l2447:
  5235                           
  5236                           ;eusart2.c: 154: }
  5237                           ;eusart2.c: 155: eusart2TxBufferRemaining++;
  5238  001BBC  2A3D               	incf	_eusart2TxBufferRemaining,f,c	;volatile
  5239                           
  5240                           ;eusart2.c: 156: } else {
  5241  001BBE  0012               	return	
  5242  001BC0                     i2l473:
  5243                           
  5244                           ;eusart2.c: 157: PIE3bits.TX2IE = 0;
  5245  001BC0  98A3               	bcf	4003,4,c	;volatile
  5246  001BC2  0012               	return	
  5247  001BC4                     __end_of_EUSART2_Transmit_ISR:
  5248                           	opt stack 0
  5249                           pclatu	equ	0xFFB
  5250                           pclath	equ	0xFFA
  5251                           tblptru	equ	0xFF8
  5252                           tblptrh	equ	0xFF7
  5253                           tblptrl	equ	0xFF6
  5254                           tablat	equ	0xFF5
  5255                           prodh	equ	0xFF4
  5256                           prodl	equ	0xFF3
  5257                           intcon	equ	0xFF2
  5258                           intcon2	equ	0xFF1
  5259                           postinc0	equ	0xFEE
  5260                           fsr0h	equ	0xFEA
  5261                           fsr0l	equ	0xFE9
  5262                           wreg	equ	0xFE8
  5263                           fsr1h	equ	0xFE2
  5264                           fsr1l	equ	0xFE1
  5265                           indf2	equ	0xFDF
  5266                           postinc2	equ	0xFDE
  5267                           postdec2	equ	0xFDD
  5268                           fsr2h	equ	0xFDA
  5269                           fsr2l	equ	0xFD9
  5270                           status	equ	0xFD8
  5271                           
  5272 ;; *************** function _EUSART2_Receive_ISR *****************
  5273 ;; Defined at:
  5274 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_INTERRUPT_InterruptManager
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text37
  5302  001BC4                     __ptext37:
  5303                           	opt stack 0
  5304  001BC4                     _EUSART2_Receive_ISR:
  5305                           	opt stack 23
  5306                           
  5307                           ;eusart2.c: 162: if (1 == RC2STAbits.OERR) {
  5308                           
  5309                           ;incstack = 0
  5310  001BC4  A271               	btfss	3953,1,c	;volatile
  5311  001BC6  D002               	goto	i2l2427
  5312                           
  5313                           ;eusart2.c: 165: RC2STAbits.CREN = 0;
  5314  001BC8  9871               	bcf	3953,4,c	;volatile
  5315                           
  5316                           ;eusart2.c: 166: RC2STAbits.CREN = 1;
  5317  001BCA  8871               	bsf	3953,4,c	;volatile
  5318  001BCC                     i2l2427:
  5319                           
  5320                           ;eusart2.c: 167: }
  5321                           ;eusart2.c: 170: eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  5322  001BCC  503C               	movf	_eusart2RxHead,w,c
  5323  001BCE  0D01               	mullw	1
  5324  001BD0  0E60               	movlw	low _eusart2RxBuffer
  5325  001BD2  24F3               	addwf	prodl,w,c
  5326  001BD4  6ED9               	movwf	fsr2l,c
  5327  001BD6  0E00               	movlw	high _eusart2RxBuffer
  5328  001BD8  20F4               	addwfc	prodh,w,c
  5329  001BDA  6EDA               	movwf	fsr2h,c
  5330  001BDC  CF74 FFDF          	movff	3956,indf2	;volatile
  5331  001BE0  2A3C               	incf	_eusart2RxHead,f,c
  5332                           
  5333                           ;eusart2.c: 171: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  5334  001BE2  0E3F               	movlw	63
  5335  001BE4  643C               	cpfsgt	_eusart2RxHead,c
  5336  001BE6  D002               	goto	i2l2435
  5337                           
  5338                           ;eusart2.c: 172: eusart2RxHead = 0;
  5339  001BE8  0E00               	movlw	0
  5340  001BEA  6E3C               	movwf	_eusart2RxHead,c
  5341  001BEC                     i2l2435:
  5342                           
  5343                           ;eusart2.c: 173: }
  5344                           ;eusart2.c: 174: eusart2RxCount++;
  5345  001BEC  2A3A               	incf	_eusart2RxCount,f,c	;volatile
  5346  001BEE  0012               	return		;funcret
  5347  001BF0                     __end_of_EUSART2_Receive_ISR:
  5348                           	opt stack 0
  5349                           pclatu	equ	0xFFB
  5350                           pclath	equ	0xFFA
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           prodh	equ	0xFF4
  5356                           prodl	equ	0xFF3
  5357                           intcon	equ	0xFF2
  5358                           intcon2	equ	0xFF1
  5359                           postinc0	equ	0xFEE
  5360                           fsr0h	equ	0xFEA
  5361                           fsr0l	equ	0xFE9
  5362                           wreg	equ	0xFE8
  5363                           fsr1h	equ	0xFE2
  5364                           fsr1l	equ	0xFE1
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _EUSART1_Transmit_ISR *****************
  5373 ;; Defined at:
  5374 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_INTERRUPT_InterruptManager
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text38
  5402  001918                     __ptext38:
  5403                           	opt stack 0
  5404  001918                     _EUSART1_Transmit_ISR:
  5405                           	opt stack 23
  5406                           
  5407                           ;eusart1.c: 176: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  5408                           
  5409                           ;incstack = 0
  5410  001918  0E40               	movlw	64
  5411  00191A  0100               	movlb	0	; () banked
  5412  00191C  61E9               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5413  00191E  D01E               	goto	i2l544
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;eusart1.c: 177: if (PORTAbits.RA7 == 0) {
  5417  001920  BE80               	btfsc	3968,7,c	;volatile
  5418  001922  D013               	goto	i2l545
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;eusart1.c: 178: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  5422  001924  5038               	movf	_eusart1TxTail,w,c
  5423  001926  0D01               	mullw	1
  5424  001928  0E40               	movlw	low _eusart1TxBuffer
  5425  00192A  24F3               	addwf	prodl,w,c
  5426  00192C  6ED9               	movwf	fsr2l,c
  5427  00192E  0E01               	movlw	high _eusart1TxBuffer
  5428  001930  20F4               	addwfc	prodh,w,c
  5429  001932  6EDA               	movwf	fsr2h,c
  5430  001934  50DF               	movf	indf2,w,c
  5431  001936  6EAD               	movwf	4013,c	;volatile
  5432                           
  5433                           ; BSR set to: 0
  5434  001938  2A38               	incf	_eusart1TxTail,f,c
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;eusart1.c: 179: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  5438  00193A  0E3F               	movlw	63
  5439  00193C  6438               	cpfsgt	_eusart1TxTail,c
  5440  00193E  D002               	goto	i2l2419
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;eusart1.c: 180: eusart1TxTail = 0;
  5444  001940  0E00               	movlw	0
  5445  001942  6E38               	movwf	_eusart1TxTail,c
  5446  001944                     i2l2419:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;eusart1.c: 181: }
  5450                           ;eusart1.c: 182: eusart1TxBufferRemaining++;
  5451  001944  0100               	movlb	0	; () banked
  5452  001946  2BE9               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5453                           
  5454                           ;eusart1.c: 183: } else {
  5455  001948  0012               	return	
  5456  00194A                     i2l545:
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;eusart1.c: 184: PIE1bits.TX1IE = 0;
  5460  00194A  989D               	bcf	3997,4,c	;volatile
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;eusart1.c: 185: subdata.IO_LED = waitCTS = 1;
  5464  00194C  0E01               	movlw	1
  5465  00194E  6E45               	movwf	_waitCTS,c	;volatile
  5466  001950  B045               	btfsc	_waitCTS,0,c	;volatile
  5467  001952  D002               	bra	i2u169_45
  5468  001954  9E44               	bcf	_subdata,7,c
  5469  001956  D001               	bra	i2u169_46
  5470  001958                     i2u169_45:
  5471  001958  8E44               	bsf	_subdata,7,c
  5472  00195A                     i2u169_46:
  5473                           
  5474                           ;eusart1.c: 186: }
  5475                           ;eusart1.c: 187: } else {
  5476  00195A  0012               	return	
  5477  00195C                     i2l544:
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;eusart1.c: 188: PIE1bits.TXIE = 0;
  5481  00195C  989D               	bcf	3997,4,c	;volatile
  5482  00195E  0012               	return	
  5483  001960                     __end_of_EUSART1_Transmit_ISR:
  5484                           	opt stack 0
  5485                           pclatu	equ	0xFFB
  5486                           pclath	equ	0xFFA
  5487                           tblptru	equ	0xFF8
  5488                           tblptrh	equ	0xFF7
  5489                           tblptrl	equ	0xFF6
  5490                           tablat	equ	0xFF5
  5491                           prodh	equ	0xFF4
  5492                           prodl	equ	0xFF3
  5493                           intcon	equ	0xFF2
  5494                           intcon2	equ	0xFF1
  5495                           postinc0	equ	0xFEE
  5496                           fsr0h	equ	0xFEA
  5497                           fsr0l	equ	0xFE9
  5498                           wreg	equ	0xFE8
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _EUSART1_Receive_ISR *****************
  5509 ;; Defined at:
  5510 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_INTERRUPT_InterruptManager
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text39
  5538  001BF0                     __ptext39:
  5539                           	opt stack 0
  5540  001BF0                     _EUSART1_Receive_ISR:
  5541                           	opt stack 23
  5542                           
  5543                           ;eusart1.c: 193: if (1 == RC1STAbits.OERR) {
  5544                           
  5545                           ;incstack = 0
  5546  001BF0  A2AB               	btfss	4011,1,c	;volatile
  5547  001BF2  D002               	goto	i2l2397
  5548                           
  5549                           ;eusart1.c: 196: RC1STAbits.CREN = 0;
  5550  001BF4  98AB               	bcf	4011,4,c	;volatile
  5551                           
  5552                           ;eusart1.c: 197: RC1STAbits.CREN = 1;
  5553  001BF6  88AB               	bsf	4011,4,c	;volatile
  5554  001BF8                     i2l2397:
  5555                           
  5556                           ;eusart1.c: 198: }
  5557                           ;eusart1.c: 201: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5558  001BF8  5037               	movf	_eusart1RxHead,w,c
  5559  001BFA  0D01               	mullw	1
  5560  001BFC  0E00               	movlw	low _eusart1RxBuffer
  5561  001BFE  24F3               	addwf	prodl,w,c
  5562  001C00  6ED9               	movwf	fsr2l,c
  5563  001C02  0E01               	movlw	high _eusart1RxBuffer
  5564  001C04  20F4               	addwfc	prodh,w,c
  5565  001C06  6EDA               	movwf	fsr2h,c
  5566  001C08  CFAE FFDF          	movff	4014,indf2	;volatile
  5567  001C0C  2A37               	incf	_eusart1RxHead,f,c
  5568                           
  5569                           ;eusart1.c: 202: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  5570  001C0E  0E3F               	movlw	63
  5571  001C10  6437               	cpfsgt	_eusart1RxHead,c
  5572  001C12  D002               	goto	i2l2405
  5573                           
  5574                           ;eusart1.c: 203: eusart1RxHead = 0;
  5575  001C14  0E00               	movlw	0
  5576  001C16  6E37               	movwf	_eusart1RxHead,c
  5577  001C18                     i2l2405:
  5578                           
  5579                           ;eusart1.c: 204: }
  5580                           ;eusart1.c: 205: eusart1RxCount++;
  5581  001C18  2A35               	incf	_eusart1RxCount,f,c	;volatile
  5582  001C1A  0012               	return		;funcret
  5583  001C1C                     __end_of_EUSART1_Receive_ISR:
  5584                           	opt stack 0
  5585                           pclatu	equ	0xFFB
  5586                           pclath	equ	0xFFA
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           intcon2	equ	0xFF1
  5595                           postinc0	equ	0xFEE
  5596                           fsr0h	equ	0xFEA
  5597                           fsr0l	equ	0xFE9
  5598                           wreg	equ	0xFE8
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           indf2	equ	0xFDF
  5602                           postinc2	equ	0xFDE
  5603                           postdec2	equ	0xFDD
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           pclatu	equ	0xFFB
  5608                           pclath	equ	0xFFA
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           intcon	equ	0xFF2
  5616                           intcon2	equ	0xFF1
  5617                           postinc0	equ	0xFEE
  5618                           fsr0h	equ	0xFEA
  5619                           fsr0l	equ	0xFE9
  5620                           wreg	equ	0xFE8
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           indf2	equ	0xFDF
  5624                           postinc2	equ	0xFDE
  5625                           postdec2	equ	0xFDD
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630                           	psect	rparam
  5631  0000                     pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           intcon2	equ	0xFF1
  5641                           postinc0	equ	0xFEE
  5642                           fsr0h	equ	0xFEA
  5643                           fsr0l	equ	0xFE9
  5644                           wreg	equ	0xFE8
  5645                           fsr1h	equ	0xFE2
  5646                           fsr1l	equ	0xFE1
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654                           	psect	temp
  5655  00004C                     btemp:
  5656                           	opt stack 0
  5657  00004C                     	ds	1
  5658  0000                     int$flags	set	btemp
  5659                           pclatu	equ	0xFFB
  5660                           pclath	equ	0xFFA
  5661                           tblptru	equ	0xFF8
  5662                           tblptrh	equ	0xFF7
  5663                           tblptrl	equ	0xFF6
  5664                           tablat	equ	0xFF5
  5665                           prodh	equ	0xFF4
  5666                           prodl	equ	0xFF3
  5667                           intcon	equ	0xFF2
  5668                           intcon2	equ	0xFF1
  5669                           postinc0	equ	0xFEE
  5670                           fsr0h	equ	0xFEA
  5671                           fsr0l	equ	0xFE9
  5672                           wreg	equ	0xFE8
  5673                           fsr1h	equ	0xFE2
  5674                           fsr1l	equ	0xFE1
  5675                           indf2	equ	0xFDF
  5676                           postinc2	equ	0xFDE
  5677                           postdec2	equ	0xFDD
  5678                           fsr2h	equ	0xFDA
  5679                           fsr2l	equ	0xFD9
  5680                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         281
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      75
    BANK0           160     19     139
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E6981 size(2) Largest target is 0
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    oled_str_disp@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    I2C_M_write@wr	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E6981 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    F7093.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWrite@pflag	PTR enum E6981 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    F7088.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S1243$pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    S1255$pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    p_i2c1_current.pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    S1255$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S1266$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S1266$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _oled_data->_I2C_M_write
    _oled_cmd->_I2C_M_write
    _I2C_M_write->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _EUSART_CompWrite->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_oled_str_disp
    _oled_str_disp->_oled_position
    _oled_position->_oled_cmd
    _oled_data->_I2C_M_write
    _oled_init->_oled_cmd
    _oled_contrast->_oled_cmd
    _oled_clear->_oled_cmd
    _oled_cmd->_I2C_M_write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   16506
                                             11 BANK0      8     8      0
                  _ADC_GetConversion
                       _EUSART1_Read
                      _EUSART1_Write
                   _EUSART_CompWrite
                  _SYSTEM_Initialize
                         _oled_clear
                      _oled_contrast
                          _oled_data
                          _oled_init
                      _oled_position
                      _oled_str_disp
 ---------------------------------------------------------------------------------
 (1) _oled_str_disp                                        7     4      3    5218
                                              4 BANK0      7     4      3
                          _oled_data
                      _oled_position
 ---------------------------------------------------------------------------------
 (2) _oled_position                                        2     1      1    2693
                                              2 BANK0      2     1      1
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (2) _oled_data                                            1     1      0    2091
                                              1 BANK0      1     1      0
                        _I2C_M_write
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            1     1      0    2091
                                              2 BANK0      1     1      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (1) _oled_contrast                                        2     2      0    2122
                                              2 BANK0      2     2      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (1) _oled_clear                                           1     1      0    2091
                                              2 BANK0      1     1      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (3) _oled_cmd                                             1     1      0    2091
                                              1 BANK0      1     1      0
                        _I2C_M_write
 ---------------------------------------------------------------------------------
 (4) _I2C_M_write                                          4     1      3    2060
                                             35 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     7     0      7    1607
                                             28 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             19 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_CompWrite                                     2     2      0     110
                                             20 COMRAM     2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      44
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0      22
                                              5 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART1_Read
   _EUSART1_Write
   _EUSART_CompWrite
     _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
   _oled_clear
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_contrast
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_data
     _I2C_M_write
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _oled_init
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_position
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_str_disp
     _oled_data
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oled_position
       _oled_cmd
         _I2C_M_write
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _TMR0_CallBack
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      12        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Sep 01 13:04:42 2022

              __end_of_oled_str_disp 17A2             _eusart1TxBufferRemaining 00E9  
                                 l27 1B7E                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l640 17A0  
                                l537 18A0                                  l676 138A  
                                l677 13DE                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                      _timer1ReloadVal 004A  
               __size_of_I2C_M_write 0098                                  _str 00A0  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                     __end_of_I2C1_ISR 1648  
                        main@escaped 002F                                 l2233 18C2  
                               l2235 18C6                                 l2219 1888  
                               l2481 1AD4                                 l2721 16DC  
                               l2801 171A                                 l2491 1AFC  
                               l2723 16E8                                 l2717 16BC  
                               l2733 1878                                 l2805 1748  
                               l2727 16F8                                 l2751 180A  
                               l2807 1772                                 l2737 17C0  
                               l2739 17E0                                 l2763 1832  
                               l2749 1802                                 l2861 1334  
                               l2853 1320                                 l2845 1050  
                               l2863 134C                                 l2881 1392  
                               l2867 1360                                 l2875 1372  
                               l2893 13BE                                 l2869 136E  
                               l2877 1386                                 l2887 13B4  
                        main@columun 0031                                 STR_1 1001  
                               u3000 1240                                 u3010 1250  
                               _LATA 000F89                                 u3110 12D0  
                               u3030 1260                                 _LATB 000F8A  
                               _LATC 000F8B                                 u3008 1244  
                               _LATD 000F8C                                 u3105 12C4  
                               u3025 1254                                 _LATE 000F8D  
                               u3130 12E0                                 u3050 1278  
                               u3060 12A0                                 u3125 12D4  
                               u3045 1264                                 u3150 12F0  
                               u3070 12B0                                 u3056 127A  
                               u3145 12E4                                 u3090 12C0  
                               u3227 1024                                 u3068 12A4  
                               u2700 1070                                 u3237 1C3E  
                               u3165 12F4                                 u3085 12B4  
                               u2710 1080                                 u3247 19B2  
                               u3257 19D6                                 u2810 10D0  
                               u2730 1090                                 u3267 1A14  
                               u2900 1144                                 u2708 1074  
                               u3277 1D1E                                 u2805 10C4  
                               u2725 1084                                 u2830 10E0  
                               u2750 10A0                                 u3287 1C68  
                               u2920 1154                                 u3297 17E2  
                               u2825 10D4                                 u2745 1094  
                               u2850 1114                                 u2770 10B0  
                               u2915 1148                                 u2940 1164  
                               u2860 1124                                 u2845 10E4  
                               u2765 10A4                                 u2790 10C0  
                               u2935 1158                                 u2960 1174  
                               u2880 1134                                 u2785 10B4  
                               u2858 1118                                 u2955 1168  
                               u2875 1128                                 u2980 1184  
                               u2975 1178                                 u2895 1138  
                               u2995 1188                                 _TMR1 000FCE  
                               _WPUB 000F61                ??_EUSART2_Receive_ISR 0001  
                      _EUSART1_Write 1886                                 _main 100C  
                      ?_EUSART1_Read 0001                      _TMR0_StartTimer 1DA8  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9               ??_I2C1_MasterTRBInsert 0018  
                               btemp 004C                        __CFG_BORV$190 000000  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00DC                        __CFG_IESO$OFF 000000  
       __end_of_EUSART2_Transmit_ISR 1BC4                         ___param_bank 000000  
     I2C1_MasterWriteTRBBuild@length 0018              __end_of_TMR0_Initialize 1CF4  
                         _i2c1_state 0043       __size_of_OSCILLATOR_Initialize 000E  
          I2C1_MasterTRBInsert@count 0019        __end_of_OSCILLATOR_Initialize 1D92  
          I2C1_MasterTRBInsert@pflag 0016                                ?_main 0001  
                  __end_of_I2C1_Stop 1A5E                      _TMR1_StartTimer 1DA4  
                              _T0CON 000FD5                                _T1CON 000FCD  
                              _LATD6 007C66                       __CFG_DEBUG$OFF 000000  
                              i2l121 0072                                i2l123 007E  
                              i2l131 00A0                                i2l115 004E  
                              i2l125 008A                                i2l117 005A  
                              i2l127 0096                                i2l119 0066  
                              i2l330 141A                                i2l341 14CE  
                              i2l333 1490                                i2l342 14DE  
                              i2l335 1498                                i2l360 15B4  
                              i2l352 155A                                i2l336 14A0  
                              i2l346 1546                                i2l364 15E4  
                              i2l356 1588                                i2l359 15A2  
                              i2l544 195C                                i2l545 194A  
                              i2l473 1BC0                                _TMR0H 000FD7  
                              _TMR1H 000FCF                                _TMR0L 000FD6  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
       __end_of_I2C1_BusCollisionISR 1DAE                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1918  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                    ??_I2C1_Initialize 0014  
                   __end_of_TMR0_ISR 1D9E                     __end_of_TMR1_ISR 1C94  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                        oled_data@work 00D7  
                      oled_cmd@write 00D4                       ?_EUSART1_Write 0001  
            __end_of_TMR1_Initialize 1CD8                                pclath 000FFA  
                              tablat 000FF5                       ??_EUSART1_Read 0014  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000      I2C1_MasterWriteTRBBuild@address 0019  
                    __initialization 1B04                I2C1_MasterWrite@pdata 001D  
              I2C1_MasterWrite@pflag 0022           __end_of_EUSART1_Initialize 1AD0  
                       __end_of_main 13E4                 EUSART_CompWrite@data 0016  
        ?_INTERRUPT_InterruptManager 0001                          _i2c1_object 00B8  
                             ??_main 00E1                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0001              __end_of_TMR0_StartTimer 1DAC  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0             _eusart2TxBufferRemaining 003D  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               _T1GCON 000FCC  
                             _RC1STA 000FAB                               _RC2STA 000F71  
                             i2l2301 14C8                               i2l2215 1D54  
                             i2l2207 1A58                               i2l2315 150C  
                             i2l2405 1C18                               i2l2343 156C  
                             i2l2335 1554                               i2l2353 1590  
                             i2l2419 1944                               i2l2435 1BEC  
                             i2l2427 1BCC                               i2l2283 1472  
                             i2l2381 15EA                               i2l2365 15BC  
                     __CFG_WDTEN$OFF 000000                               i2l2447 1BBC  
                             i2l2383 15EE                               i2l2295 14B0  
                             i2l2391 1602                               i2l2385 15F6  
                             i2l2369 15C4                               i2l2397 1BF8  
                             _RCREG1 000FAE                               _RCREG2 000F74  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _SPBRG2 000F75                               _TX1STA 000FAC  
                             _TX2STA 000F72                               _TRISD6 007CAE  
                             _TXREG1 000FAD                               _TXREG2 000F73  
                  ?_I2C1_MasterWrite 001D                       __CFG_XINST$OFF 000000  
                 ??_I2C1_MasterWrite 0024                       _p_i2c1_current 0029  
            __end_of_TMR1_StartTimer 1DA8                       __CFG_STVREN$ON 000000  
                  ?_EUSART_CompWrite 0001           ??_I2C1_MasterWriteTRBBuild 001B  
                   ?_TMR0_Initialize 0001                            ?_I2C1_ISR 0001  
                             clear_0 1B0A                               clear_1 1B16  
                             clear_2 1B22                     __end_of_oled_cmd 1C70  
                 ??_EUSART_CompWrite 0015                       oled_data@write 00D2  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
               _EUSART2_Transmit_ISR 1B96             ADC_GetConversion@channel 0018  
              __end_of_TMR0_CallBack 1D10                      ??_EUSART1_Write 0014  
      I2C1_MasterWriteTRBBuild@pdata 0016                      _eusart1RxBuffer 0100  
      __size_of_INTERRUPT_Initialize 0014                __end_of_TMR1_CallBack 1DA4  
                    _eusart1TxBuffer 0140                      _eusart2RxBuffer 0060  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 1C94  
                    _eusart2TxBuffer 00B0                           __accesstop 0060  
            __end_of__initialization 1B28                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                       _i2c1_trb_count 0042  
              _I2C1_FunctionComplete 1D42                 _I2C1_BusCollisionISR 1DAC  
                     __pcstackCOMRAM 0001               I2C1_MasterWrite@length 001F  
                _timer0ReloadVal8bit 00EA                  ??_SYSTEM_Initialize 0014  
                          ?_TMR0_ISR 0001                            ?_TMR1_ISR 0001  
                         ??_I2C1_ISR 0004                 __end_of_EUSART1_Read 1B04  
             ??_EUSART1_Transmit_ISR 0001                ?_EUSART2_Transmit_ISR 0001  
        __end_of_EUSART1_Receive_ISR 1C1C                     ?_TMR0_StartTimer 0001  
          __end_of_SYSTEM_Initialize 1CB6                        _eusart1RxHead 0037  
                      _eusart2RxHead 003C                        _eusart1TxHead 0039  
                      _eusart1RxTail 0036                        _eusart2TxHead 003F  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                      _eusart2RxTail 003B                        _eusart1TxTail 0038  
                      _eusart2TxTail 003E                      __CFG_PLLCFG$OFF 000000  
            I2C_M_write@slaveTimeOut 00BF                           __pnvCOMRAM 004A  
              ?_I2C1_BusCollisionISR 0001                   __CFG_CCP2MX$PORTC1 000000  
                 __size_of_oled_data 002A                   __size_of_oled_init 003E  
                   ?_TMR1_StartTimer 0001                           ??_TMR0_ISR 0001  
                         ??_TMR1_ISR 0001                   __CFG_CCP3MX$PORTB5 000000  
             __size_of_oled_contrast 003E                      _I2C1_Initialize 1A5E  
                      ??_I2C_M_write 0027              __size_of_ADC_Initialize 0016  
                            _OSCCON2 000FD2          __end_of_EUSART2_Receive_ISR 1BF0  
                          _I2C1_Stop 1A20                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SPBRGH2 000F76               __size_of_oled_position 0018  
                            _SSP1ADD 000FC8                              _SSP1BUF 000FC9  
             __size_of_oled_str_disp 00A0                   main@recievedbefore 0032  
      I2C1_MasterTRBInsert@ptrb_list 0014                    oled_contrast@cont 00D9  
                          ?_oled_cmd 0001                      __CFG_PWRTEN$OFF 000000  
             ?_I2C1_FunctionComplete 0001                              __Hparam 0000  
      __size_of_I2C1_MasterTRBInsert 00BA                   _not_of_before_data 0034  
                            __Lparam 0000                   _p_i2c1_trb_current 002B  
                       __psmallconst 1000                              __pcinit 1B04  
                            __ramtop 1000                              __ptext0 100C  
                            __ptext1 1702                              __ptext2 1D2A  
                            __ptext3 1C1C                              __ptext4 19A4  
                            __ptext5 19E2                              __ptext6 1D10  
                            __ptext7 1C46                              __ptext8 17A2  
                            __ptext9 183A                            _T0CONbits 000FD5  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 1D84  
             ??_EUSART2_Transmit_ISR 0001                           _oled_clear 1D10  
                 _EUSART1_Initialize 1A9A             ??_PIN_MANAGER_Initialize 0014  
                            _waitCTS 0045                           ?_I2C1_Stop 0001  
                __end_of_I2C_M_write 183A                    __end_of_oled_data 1C46  
                            _tmrFlag 0046                       oled_str_disp@i 00E0  
                  __end_of_oled_init 19E2                              _subdata 0044  
                      _oled_contrast 19E2           __size_of_SYSTEM_Initialize 0022  
               I2C1_ISR@pi2c_buf_ptr 0027                 end_of_initialization 1B28  
                ?_EUSART1_Initialize 0001                        __Lmediumconst 0000  
                         ??_oled_cmd 0027               ??_I2C1_BusCollisionISR 0001  
            __end_of_I2C1_Initialize 1A9A                        _oled_position 1D2A  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                __size_of_EUSART1_Read 0034  
                      _oled_str_disp 1702                 ??_EUSART1_Initialize 0014  
                          _PORTAbits 000F80                            _PORTBbits 000F81  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
          __size_of_I2C1_MasterWrite 004C                    __size_of_I2C1_ISR 0264  
                     ?_oled_contrast 0001            __size_of_EUSART_CompWrite 0030  
                EUSART1_Write@txData 0014    I2C1_ISR@i2c_10bit_address_restart 0040  
                       _EUSART1_Read 1AD0              I2C1_MasterWrite@address 0020  
                     ?_oled_position 00D8                       ?_oled_str_disp 00DA  
       __end_of_INTERRUPT_Initialize 1D84              I2C1_MasterWrite@trBlock 00C8  
                  __size_of_TMR0_ISR 000C                    __size_of_TMR1_ISR 0024  
           I2C1_Stop@completion_code 0003                       _ADC_Initialize 1D5A  
                        _I2C_M_write 17A2               ?_OSCILLATOR_Initialize 0001  
                       oled_cmd@work 00D7                          ?_oled_clear 0001  
                start_initialization 1B04                          ??_I2C1_Stop 0001  
           __size_of_TMR0_Initialize 001C      __size_of_PIN_MANAGER_Initialize 0048  
  __size_of_I2C1_MasterWriteTRBBuild 0044            ?_I2C1_MasterWriteTRBBuild 0014  
              __end_of_EUSART1_Write 18D0                     main@recieveddata 0033  
                   ?_I2C1_Initialize 0001             __size_of_TMR1_Initialize 0022  
             __size_of_TMR0_CallBack 001C               __end_of_ADC_Initialize 1D70  
             __size_of_TMR1_CallBack 0006         I2C1_MasterWriteTRBBuild@ptrb 0014  
                     _eusart1RxCount 0035                       _eusart2RxCount 003A  
              TMR1_ISR@CountCallBack 002D                      ??_oled_contrast 00D8  
                        __pbssCOMRAM 0027        __size_of_EUSART1_Transmit_ISR 0048  
                      __pcstackBANK0 00D6                        _i2c1_tr_queue 00CD  
                   oled_position@col 00D8              ??_I2C1_FunctionComplete 0001  
       __size_of_EUSART1_Receive_ISR 002C                      ??_oled_position 0027  
                          __pnvBANK0 00E9             __size_of_TMR0_StartTimer 0004  
                    ??_oled_str_disp 00DD               _PIN_MANAGER_Initialize 18D0  
                __size_of_oled_clear 001A                    __size_of_oled_cmd 002A  
                          __pintcode 0008                      ?_ADC_Initialize 0001  
                           _I2C1_ISR 13E4         ??_INTERRUPT_InterruptManager 0006  
                      I2C_M_write@wr 0024                     _I2C1_MasterWrite 183A  
                           _BAUD1CON 000FB8                             _BAUD2CON 000F70  
                        __smallconst 1000         __end_of_I2C1_MasterTRBInsert 1702  
           __size_of_TMR1_StartTimer 0004                     _EUSART_CompWrite 1B36  
                      _TMR0_CallBack 1CF4                 _INTERRUPT_Initialize 1D70  
                          _oled_data 1C1C                            _oled_init 19A4  
                      _TMR1_CallBack 1D9E               I2C1_MasterRead@trBlock 00C3  
                  ??_TMR0_Initialize 0014         __size_of_EUSART2_Receive_ISR 002C  
                           _LATEbits 000F8D                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _IPR3bits 000FA5  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
                           _PIE3bits 000FA3                             i2u141_45 1D0A  
                           i2u141_46 1D0C  __size_of_INTERRUPT_InterruptManager 00D4  
                           _PIR1bits 000F9E                             i2u169_45 1958  
                           i2u169_46 195A                             _PIR2bits 000FA1  
                           _PIR3bits 000FA4                             _RCONbits 000FD0  
                    I2C_M_write@addr 00D6                     __CFG_WDTPS$32768 000000  
                           _SSP1CON1 000FC6                             _SSP1CON3 000FCB  
                           _TMR0_ISR 1D92                             _TMR1_ISR 1C70  
                           _SSP1STAT 000FC7                     oled_str_disp@col 00DA  
                  ??_TMR1_Initialize 0014                           _ADCON0bits 000FC2  
      __size_of_EUSART2_Transmit_ISR 002E                       ?_TMR0_CallBack 0001  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                     ?_TMR1_CallBack 0001                           ?_oled_data 0001  
                         ?_oled_init 0001                EUSART1_Read@readValue 0014  
                           __Hrparam 0000        __size_of_I2C1_BusCollisionISR 0002  
                           __Lrparam 0000                    _ADC_GetConversion 1B66  
                 __CFG_BOREN$SBORDIS 000000               I2C1_ISR@i2c_bytes_left 0041  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0014  
                 ?_ADC_GetConversion 0014                    ??_TMR0_StartTimer 0014  
        __size_of_EUSART1_Initialize 0036                         ?_I2C_M_write 0024  
   __end_of_I2C1_MasterWriteTRBBuild 19A4                      oled_position@li 00D9  
                ??_ADC_GetConversion 0016                         ??_oled_clear 00D8  
                I2C1_ISR@i2c_address 0047                             __ptext10 1960  
                           __ptext11 1648                             __ptext20 1A5E  
                           __ptext12 1C94                             __ptext21 1A9A  
                           __ptext13 1CB6                           _T1GCONbits 000FCC  
                           __ptext30 1D92                             __ptext22 1D5A  
                           __ptext14 1DA4                             __ptext31 1CF4  
                           __ptext23 1B36                             __ptext15 1CD8  
                           __ptext32 13E4                             __ptext24 1886  
                           __ptext16 1DA8                             __ptext33 1A20  
                           __ptext25 1AD0                             __ptext17 18D0  
                           __ptext34 1D42                             __ptext26 1B66  
                           __ptext18 1D84                             __ptext35 1DAC  
                           __ptext19 1D70                             __ptext36 1B96  
                           __ptext28 1C70                             __ptext37 1BC4  
                           __ptext29 1D9E                             __ptext38 1918  
                           __ptext39 1BF0                         _SSP1CON1bits 000FC6  
                       _SSP1CON2bits 000FC5                    ??_TMR1_StartTimer 0014  
                      __size_of_main 03D8                             _oled_cmd 1C46  
          __end_of_ADC_GetConversion 1B96                 _I2C1_MasterTRBInsert 1648  
                         _RC1STAbits 000FAB                           _RC2STAbits 000F71  
                 __end_of_oled_clear 1D2A                      oled_str_disp@li 00DF  
                           int$flags 004C   __end_of_INTERRUPT_InterruptManager 00DC  
         _INTERRUPT_InterruptManager 0008                             main@line 0030  
                _EUSART1_Receive_ISR 1BF0                           _INTCONbits 000FF2  
                    ??_TMR0_CallBack 0001               ??_INTERRUPT_Initialize 0014  
                    ??_TMR1_CallBack 0001                             intlevel2 0000  
                        ??_oled_data 0027                          ??_oled_init 00D8  
               ?_EUSART1_Receive_ISR 0001                   I2C_M_write@timeOut 00C1  
            ?_PIN_MANAGER_Initialize 0001             __end_of_I2C1_MasterWrite 1886  
     __size_of_I2C1_FunctionComplete 0018        __end_of_I2C1_FunctionComplete 1D5A  
              ?_I2C1_MasterTRBInsert 0014         __end_of_EUSART1_Transmit_ISR 1960  
                   ??_ADC_Initialize 0014             __end_of_EUSART_CompWrite 1B66  
           __size_of_I2C1_Initialize 003C               __size_of_EUSART1_Write 004A  
                _EUSART2_Receive_ISR 1BC4                    I2C_M_write@length 0026  
                  I2C_M_write@status 0049                      _TMR0_Initialize 1CD8  
                oled_str_disp@string 00DB             _I2C1_MasterWriteTRBBuild 1960  
                  __CFG_T3CMX$PORTC0 000000                __end_of_oled_contrast 1A20  
              ??_EUSART1_Receive_ISR 0001       __end_of_PIN_MANAGER_Initialize 1918  
               ?_EUSART2_Receive_ISR 0001                   __size_of_I2C1_Stop 003E  
                  __CFG_FOSC$INTIO67 000000           __size_of_ADC_GetConversion 0030  
                    _TMR1_Initialize 1CB6                __end_of_oled_position 1D42  
