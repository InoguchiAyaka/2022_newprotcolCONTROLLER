

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 31 18:54:18 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	nvCOMRAM
    61  00004A                     __pnvCOMRAM:
    62                           	opt stack 0
    63  00004A                     _timer1ReloadVal:
    64                           	opt stack 0
    65  00004A                     	ds	2
    66                           
    67                           	psect	nvBANK0
    68  0000E7                     __pnvBANK0:
    69                           	opt stack 0
    70  0000E7                     _eusart1TxBufferRemaining:
    71                           	opt stack 0
    72  0000E7                     	ds	1
    73  0000E8                     _eusart2TxBufferRemaining:
    74                           	opt stack 0
    75  0000E8                     	ds	1
    76  0000E9                     _timer0ReloadVal8bit:
    77                           	opt stack 0
    78  0000E9                     	ds	1
    79  0000                     _ANSELA	set	3896
    80  0000                     _ANSELB	set	3897
    81  0000                     _ANSELC	set	3898
    82  0000                     _ANSELD	set	3899
    83  0000                     _ANSELE	set	3900
    84  0000                     _TMR1	set	4046
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _BAUD1CON	set	4024
    92  0000                     _BAUD2CON	set	3952
    93  0000                     _INTCON2bits	set	4081
    94  0000                     _INTCONbits	set	4082
    95  0000                     _IPR1bits	set	3999
    96  0000                     _IPR2bits	set	4002
    97  0000                     _IPR3bits	set	4005
    98  0000                     _LATA	set	3977
    99  0000                     _LATB	set	3978
   100  0000                     _LATC	set	3979
   101  0000                     _LATD	set	3980
   102  0000                     _LATE	set	3981
   103  0000                     _LATEbits	set	3981
   104  0000                     _OSCCON	set	4051
   105  0000                     _OSCCON2	set	4050
   106  0000                     _OSCTUNE	set	3995
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIE2bits	set	4000
   109  0000                     _PIE3bits	set	4003
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PIR2bits	set	4001
   112  0000                     _PIR3bits	set	4004
   113  0000                     _PORTAbits	set	3968
   114  0000                     _PORTBbits	set	3969
   115  0000                     _PORTCbits	set	3970
   116  0000                     _PORTDbits	set	3971
   117  0000                     _RC1STA	set	4011
   118  0000                     _RC1STAbits	set	4011
   119  0000                     _RC2STA	set	3953
   120  0000                     _RC2STAbits	set	3953
   121  0000                     _RCONbits	set	4048
   122  0000                     _RCREG1	set	4014
   123  0000                     _RCREG2	set	3956
   124  0000                     _SPBRG1	set	4015
   125  0000                     _SPBRG2	set	3957
   126  0000                     _SPBRGH1	set	4016
   127  0000                     _SPBRGH2	set	3958
   128  0000                     _SSP1ADD	set	4040
   129  0000                     _SSP1BUF	set	4041
   130  0000                     _SSP1CON1	set	4038
   131  0000                     _SSP1CON1bits	set	4038
   132  0000                     _SSP1CON2bits	set	4037
   133  0000                     _SSP1CON3	set	4043
   134  0000                     _SSP1STAT	set	4039
   135  0000                     _T0CON	set	4053
   136  0000                     _T0CONbits	set	4053
   137  0000                     _T1CON	set	4045
   138  0000                     _T1CONbits	set	4045
   139  0000                     _T1GCON	set	4044
   140  0000                     _T1GCONbits	set	4044
   141  0000                     _TMR0H	set	4055
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR1H	set	4047
   144  0000                     _TMR1L	set	4046
   145  0000                     _TRISA	set	3986
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISC	set	3988
   148  0000                     _TRISD	set	3989
   149  0000                     _TRISE	set	3990
   150  0000                     _TX1STA	set	4012
   151  0000                     _TX2STA	set	3954
   152  0000                     _TXREG1	set	4013
   153  0000                     _TXREG2	set	3955
   154  0000                     _WPUB	set	3937
   155                           
   156                           	psect	smallconst
   157  001000                     __psmallconst:
   158                           	opt stack 0
   159  001000  00                 	db	0
   160  001001                     STR_1:
   161  001001  4F                 	db	79	;'O'
   162  001002  4C                 	db	76	;'L'
   163  001003  45                 	db	69	;'E'
   164  001004  44                 	db	68	;'D'
   165  001005  20                 	db	32
   166  001006  54                 	db	84	;'T'
   167  001007  45                 	db	69	;'E'
   168  001008  53                 	db	83	;'S'
   169  001009  54                 	db	84	;'T'
   170  00100A  00                 	db	0
   171                           
   172                           ; #config settings
   173  00100B  00                 	db	0	; dummy byte at the end
   174  0000                     
   175                           	psect	cinit
   176  001AF8                     __pcinit:
   177                           	opt stack 0
   178  001AF8                     start_initialization:
   179                           	opt stack 0
   180  001AF8                     __initialization:
   181                           	opt stack 0
   182                           
   183                           ; Clear objects allocated to BANK1 (128 bytes)
   184  001AF8  EE01  F000         	lfsr	0,__pbssBANK1
   185  001AFC  0E80               	movlw	128
   186  001AFE                     clear_0:
   187  001AFE  6AEE               	clrf	postinc0,c
   188  001B00  06E8               	decf	wreg,f,c
   189  001B02  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (116 bytes)
   192  001B04  EE00  F060         	lfsr	0,__pbssBANK0
   193  001B08  0E74               	movlw	116
   194  001B0A                     clear_1:
   195  001B0A  6AEE               	clrf	postinc0,c
   196  001B0C  06E8               	decf	wreg,f,c
   197  001B0E  E1FD               	bnz	clear_1
   198                           
   199                           ; Clear objects allocated to COMRAM (35 bytes)
   200  001B10  EE00  F027         	lfsr	0,__pbssCOMRAM
   201  001B14  0E23               	movlw	35
   202  001B16                     clear_2:
   203  001B16  6AEE               	clrf	postinc0,c
   204  001B18  06E8               	decf	wreg,f,c
   205  001B1A  E1FD               	bnz	clear_2
   206  001B1C                     end_of_initialization:
   207                           	opt stack 0
   208  001B1C                     __end_of__initialization:
   209                           	opt stack 0
   210  001B1C  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   211  001B1E  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   212  001B20  0E00               	movlw	low (__Lmediumconst shr (0+16))
   213  001B22  6EF8               	movwf	tblptru,c
   214  001B24  0100               	movlb	0
   215  001B26  EF06  F008         	goto	_main	;jump to C main() function
   216                           tblptru	equ	0xFF8
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	bssCOMRAM
   221  000027                     __pbssCOMRAM:
   222                           	opt stack 0
   223  000027                     _i2c1_object:
   224                           	opt stack 0
   225  000027                     	ds	7
   226  00002E                     _p_i2c1_current:
   227                           	opt stack 0
   228  00002E                     	ds	2
   229  000030                     _p_i2c1_trb_current:
   230                           	opt stack 0
   231  000030                     	ds	2
   232  000032                     I2C1_ISR@i2c_10bit_address_restart:
   233                           	opt stack 0
   234  000032                     	ds	1
   235  000033                     I2C1_ISR@i2c_bytes_left:
   236                           	opt stack 0
   237  000033                     	ds	1
   238  000034                     _eusart1RxCount:
   239                           	opt stack 0
   240  000034                     	ds	1
   241  000035                     _eusart1RxHead:
   242                           	opt stack 0
   243  000035                     	ds	1
   244  000036                     _eusart1RxTail:
   245                           	opt stack 0
   246  000036                     	ds	1
   247  000037                     _eusart1TxHead:
   248                           	opt stack 0
   249  000037                     	ds	1
   250  000038                     _eusart1TxTail:
   251                           	opt stack 0
   252  000038                     	ds	1
   253  000039                     _eusart2RxCount:
   254                           	opt stack 0
   255  000039                     	ds	1
   256  00003A                     _eusart2RxHead:
   257                           	opt stack 0
   258  00003A                     	ds	1
   259  00003B                     _eusart2RxTail:
   260                           	opt stack 0
   261  00003B                     	ds	1
   262  00003C                     _eusart2TxHead:
   263                           	opt stack 0
   264  00003C                     	ds	1
   265  00003D                     _eusart2TxTail:
   266                           	opt stack 0
   267  00003D                     	ds	1
   268  00003E                     _i2c1_state:
   269                           	opt stack 0
   270  00003E                     	ds	1
   271  00003F                     _i2c1_trb_count:
   272                           	opt stack 0
   273  00003F                     	ds	1
   274  000040                     _subdata:
   275                           	opt stack 0
   276  000040                     	ds	1
   277  000041                     _tmrFlag:
   278                           	opt stack 0
   279  000041                     	ds	1
   280  000042                     _waitCTS:
   281                           	opt stack 0
   282  000042                     	ds	1
   283  000043                     main@escaped:
   284                           	opt stack 0
   285  000043                     	ds	1
   286  000044                     main@line:
   287                           	opt stack 0
   288  000044                     	ds	1
   289  000045                     main@recievedbefore:
   290                           	opt stack 0
   291  000045                     	ds	1
   292  000046                     main@recieveddata:
   293                           	opt stack 0
   294  000046                     	ds	1
   295  000047                     I2C1_ISR@i2c_address:
   296                           	opt stack 0
   297  000047                     	ds	2
   298  000049                     I2C_M_write@status:
   299                           	opt stack 0
   300  000049                     	ds	1
   301                           tblptru	equ	0xFF8
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           
   305                           	psect	bssBANK0
   306  000060                     __pbssBANK0:
   307                           	opt stack 0
   308  000060                     _eusart2RxBuffer:
   309                           	opt stack 0
   310  000060                     	ds	64
   311  0000A0                     _str:
   312                           	opt stack 0
   313  0000A0                     	ds	16
   314  0000B0                     _eusart2TxBuffer:
   315                           	opt stack 0
   316  0000B0                     	ds	8
   317  0000B8                     I2C1_ISR@pi2c_buf_ptr:
   318                           	opt stack 0
   319  0000B8                     	ds	2
   320  0000BA                     I2C_M_write@slaveTimeOut:
   321                           	opt stack 0
   322  0000BA                     	ds	2
   323  0000BC                     I2C_M_write@timeOut:
   324                           	opt stack 0
   325  0000BC                     	ds	2
   326  0000BE                     TMR1_ISR@CountCallBack:
   327                           	opt stack 0
   328  0000BE                     	ds	2
   329  0000C0                     main@columun:
   330                           	opt stack 0
   331  0000C0                     	ds	1
   332  0000C1                     I2C1_MasterRead@trBlock:
   333                           	opt stack 0
   334  0000C1                     	ds	5
   335  0000C6                     I2C1_MasterWrite@trBlock:
   336                           	opt stack 0
   337  0000C6                     	ds	5
   338  0000CB                     _i2c1_tr_queue:
   339                           	opt stack 0
   340  0000CB                     	ds	5
   341  0000D0                     oled_cmd@write:
   342                           	opt stack 0
   343  0000D0                     	ds	2
   344  0000D2                     oled_data@write:
   345                           	opt stack 0
   346  0000D2                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           
   351                           	psect	bssBANK1
   352  000100                     __pbssBANK1:
   353                           	opt stack 0
   354  000100                     _eusart1RxBuffer:
   355                           	opt stack 0
   356  000100                     	ds	64
   357  000140                     _eusart1TxBuffer:
   358                           	opt stack 0
   359  000140                     	ds	64
   360                           tblptru	equ	0xFF8
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           
   364                           	psect	cstackBANK0
   365  0000D4                     __pcstackBANK0:
   366                           	opt stack 0
   367  0000D4                     I2C_M_write@addr:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x0
   371  0000D4                     	ds	1
   372  0000D5                     oled_cmd@work:
   373                           	opt stack 0
   374  0000D5                     oled_data@work:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378  0000D5                     	ds	1
   379  0000D6                     ??_oled_init:
   380  0000D6                     ??_oled_contrast:
   381  0000D6                     ??_oled_clear:
   382  0000D6                     oled_position@col:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x2
   386  0000D6                     	ds	1
   387  0000D7                     oled_position@li:
   388                           	opt stack 0
   389  0000D7                     oled_contrast@cont:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x3
   393  0000D7                     	ds	1
   394  0000D8                     oled_str_disp@col:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x4
   398  0000D8                     	ds	1
   399  0000D9                     oled_str_disp@string:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x5
   403  0000D9                     	ds	2
   404  0000DB                     ??_oled_str_disp:
   405                           
   406                           ; 1 bytes @ 0x7
   407  0000DB                     	ds	2
   408  0000DD                     oled_str_disp@li:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x9
   412  0000DD                     	ds	1
   413  0000DE                     oled_str_disp@i:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0xA
   417  0000DE                     	ds	1
   418  0000DF                     ??_main:
   419                           
   420                           ; 1 bytes @ 0xB
   421  0000DF                     	ds	8
   422                           tblptru	equ	0xFF8
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           
   426                           	psect	cstackCOMRAM
   427  000001                     __pcstackCOMRAM:
   428                           	opt stack 0
   429  000001                     ??_I2C1_Stop:
   430  000001                     
   431                           ; 1 bytes @ 0x0
   432  000001                     	ds	2
   433  000003                     I2C1_Stop@completion_code:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x2
   437  000003                     	ds	1
   438  000004                     ??_I2C1_ISR:
   439                           
   440                           ; 1 bytes @ 0x3
   441  000004                     	ds	2
   442  000006                     ??_INTERRUPT_InterruptManager:
   443                           
   444                           ; 1 bytes @ 0x5
   445  000006                     	ds	14
   446  000014                     ?_ADC_GetConversion:
   447                           	opt stack 0
   448  000014                     EUSART2_Read@readValue:
   449                           	opt stack 0
   450  000014                     EUSART1_Read@readValue:
   451                           	opt stack 0
   452  000014                     EUSART1_Write@txData:
   453                           	opt stack 0
   454  000014                     I2C1_MasterTRBInsert@ptrb_list:
   455                           	opt stack 0
   456  000014                     I2C1_MasterWriteTRBBuild@ptrb:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x13
   460  000014                     	ds	1
   461  000015                     EUSART_CompWrite@c:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x14
   465  000015                     	ds	1
   466  000016                     ??_ADC_GetConversion:
   467  000016                     I2C1_MasterTRBInsert@pflag:
   468                           	opt stack 0
   469  000016                     I2C1_MasterWriteTRBBuild@pdata:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x15
   473  000016                     	ds	2
   474  000018                     ADC_GetConversion@channel:
   475                           	opt stack 0
   476  000018                     I2C1_MasterWriteTRBBuild@length:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x17
   480  000018                     	ds	1
   481  000019                     I2C1_MasterTRBInsert@count:
   482                           	opt stack 0
   483  000019                     I2C1_MasterWriteTRBBuild@address:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x18
   487  000019                     	ds	2
   488  00001B                     ??_I2C1_MasterWriteTRBBuild:
   489                           
   490                           ; 1 bytes @ 0x1A
   491  00001B                     	ds	2
   492  00001D                     I2C1_MasterWrite@pdata:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x1C
   496  00001D                     	ds	2
   497  00001F                     I2C1_MasterWrite@length:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1E
   501  00001F                     	ds	1
   502  000020                     I2C1_MasterWrite@address:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x1F
   506  000020                     	ds	2
   507  000022                     I2C1_MasterWrite@pflag:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x21
   511  000022                     	ds	2
   512  000024                     I2C_M_write@wr:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x23
   516  000024                     	ds	2
   517  000026                     I2C_M_write@length:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x25
   521  000026                     	ds	1
   522  000027                     tblptru	equ	0xFF8
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           
   526                           ; 1 bytes @ 0x26
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 263 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;Total ram usage:        8 bytes
   551 ;; Hardware stack levels required when called:    9
   552 ;; This function calls:
   553 ;;		_ADC_GetConversion
   554 ;;		_EUSART1_Read
   555 ;;		_EUSART1_Write
   556 ;;		_EUSART2_Read
   557 ;;		_EUSART_CompWrite
   558 ;;		_SYSTEM_Initialize
   559 ;;		_oled_clear
   560 ;;		_oled_contrast
   561 ;;		_oled_data
   562 ;;		_oled_init
   563 ;;		_oled_position
   564 ;;		_oled_str_disp
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text0
   571  00100C                     __ptext0:
   572                           	opt stack 0
   573  00100C                     _main:
   574                           	opt stack 22
   575                           
   576                           ;main.c: 266: SYSTEM_Initialize();
   577                           
   578                           ;incstack = 0
   579  00100C  EC49  F00E         	call	_SYSTEM_Initialize	;wreg free
   580                           
   581                           ;main.c: 271: (INTCONbits.GIE = 1);
   582  001010  8EF2               	bsf	intcon,7,c	;volatile
   583                           
   584                           ;main.c: 274: (INTCONbits.PEIE = 1);
   585  001012  8CF2               	bsf	intcon,6,c	;volatile
   586                           
   587                           ;main.c: 283: LATEbits.LATE2=0;
   588  001014  948D               	bcf	3981,2,c	;volatile
   589                           
   590                           ;main.c: 285: PORTAbits.RA4=0;
   591  001016  9880               	bcf	3968,4,c	;volatile
   592                           
   593                           ;main.c: 287: _delay((unsigned long)((5)*(64000000/4000.0)));
   594  001018  0E68               	movlw	104
   595  00101A  0100               	movlb	0	; () banked
   596  00101C  6FDF               	movwf	??_main& (0+255),b
   597  00101E  0EE4               	movlw	228
   598  001020                     u3277:
   599  001020  2EE8               	decfsz	wreg,f,c
   600  001022  D7FE               	goto	u3277
   601  001024  2FDF               	decfsz	??_main& (0+255),f,b
   602  001026  D7FC               	goto	u3277
   603  001028  D000               	nop2	
   604                           
   605                           ;main.c: 288: oled_init();
   606  00102A  ECF5  F00C         	call	_oled_init	;wreg free
   607                           
   608                           ;main.c: 289: oled_contrast(0xFF);
   609  00102E  0EFF               	movlw	255
   610  001030  ECD7  F00C         	call	_oled_contrast
   611                           
   612                           ;main.c: 290: oled_str_disp(0, 0, "OLED TEST");
   613  001034  0E00               	movlw	0
   614  001036  0100               	movlb	0	; () banked
   615  001038  6FD8               	movwf	oled_str_disp@col& (0+255),b
   616  00103A  0E01               	movlw	low STR_1
   617  00103C  0100               	movlb	0	; () banked
   618  00103E  6FD9               	movwf	oled_str_disp@string& (0+255),b
   619  001040  0E10               	movlw	high STR_1
   620  001042  0100               	movlb	0	; () banked
   621  001044  6FDA               	movwf	(oled_str_disp@string+1)& (0+255),b
   622  001046  0E00               	movlw	0
   623  001048  EC1A  F00B         	call	_oled_str_disp
   624  00104C                     l2854:
   625                           
   626                           ;main.c: 292: if (tmrFlag) {
   627  00104C  5041               	movf	_tmrFlag,w,c
   628  00104E  B4D8               	btfsc	status,2,c
   629  001050  D164               	goto	l653
   630                           
   631                           ;main.c: 293: tmrFlag = 0;
   632  001052  0E00               	movlw	0
   633  001054  6E41               	movwf	_tmrFlag,c
   634                           
   635                           ;main.c: 294: EUSART1_Write('S');
   636  001056  0E53               	movlw	83
   637  001058  EC2A  F00C         	call	_EUSART1_Write
   638                           
   639                           ;main.c: 295: EUSART1_Write('S');
   640  00105C  0E53               	movlw	83
   641  00105E  EC2A  F00C         	call	_EUSART1_Write
   642                           
   643                           ;main.c: 296: EUSART_CompWrite((PORTBbits.RB0 << 7) | (PORTDbits.RD3 << 6) | (PORTCbits.
      +                          RC0 << 5) | (PORTDbits.RD4 << 4)
   644                           ;main.c: 297: | ((subdata.IO_LCrossD) << 3) | ((subdata.IO_LCrossU) << 2) | ((subdata.IO
      +                          _LCrossR) << 1) | ((subdata.IO_LCrossL) << 0));
   645  001062  A640               	btfss	_subdata,3,c
   646  001064  D004               	goto	u2740
   647  001066  0100               	movlb	0	; () banked
   648  001068  6BDF               	clrf	??_main& (0+255),b
   649  00106A  2BDF               	incf	??_main& (0+255),f,b
   650  00106C  D002               	goto	u2748
   651  00106E                     u2740:
   652  00106E  0100               	movlb	0	; () banked
   653  001070  6BDF               	clrf	??_main& (0+255),b
   654  001072                     u2748:
   655  001072  A440               	btfss	_subdata,2,c
   656  001074  D004               	goto	u2750
   657  001076  0E02               	movlw	2
   658  001078  0100               	movlb	0	; () banked
   659  00107A  6FE0               	movwf	(??_main+1)& (0+255),b
   660  00107C  D002               	goto	u2765
   661  00107E                     u2750:
   662  00107E  0100               	movlb	0	; () banked
   663  001080  6BE0               	clrf	(??_main+1)& (0+255),b
   664  001082                     u2765:
   665  001082  A040               	btfss	_subdata,0,c
   666  001084  D004               	goto	u2770
   667  001086  0E04               	movlw	4
   668  001088  0100               	movlb	0	; () banked
   669  00108A  6FE1               	movwf	(??_main+2)& (0+255),b
   670  00108C  D002               	goto	u2785
   671  00108E                     u2770:
   672  00108E  0100               	movlb	0	; () banked
   673  001090  6BE1               	clrf	(??_main+2)& (0+255),b
   674  001092                     u2785:
   675  001092  A240               	btfss	_subdata,1,c
   676  001094  D004               	goto	u2790
   677  001096  0E08               	movlw	8
   678  001098  0100               	movlb	0	; () banked
   679  00109A  6FE2               	movwf	(??_main+3)& (0+255),b
   680  00109C  D002               	goto	u2805
   681  00109E                     u2790:
   682  00109E  0100               	movlb	0	; () banked
   683  0010A0  6BE2               	clrf	(??_main+3)& (0+255),b
   684  0010A2                     u2805:
   685  0010A2  A883               	btfss	3971,4,c	;volatile
   686  0010A4  D004               	goto	u2810
   687  0010A6  0E10               	movlw	16
   688  0010A8  0100               	movlb	0	; () banked
   689  0010AA  6FE3               	movwf	(??_main+4)& (0+255),b
   690  0010AC  D002               	goto	u2825
   691  0010AE                     u2810:
   692  0010AE  0100               	movlb	0	; () banked
   693  0010B0  6BE3               	clrf	(??_main+4)& (0+255),b
   694  0010B2                     u2825:
   695  0010B2  A082               	btfss	3970,0,c	;volatile
   696  0010B4  D004               	goto	u2830
   697  0010B6  0E20               	movlw	32
   698  0010B8  0100               	movlb	0	; () banked
   699  0010BA  6FE4               	movwf	(??_main+5)& (0+255),b
   700  0010BC  D002               	goto	u2845
   701  0010BE                     u2830:
   702  0010BE  0100               	movlb	0	; () banked
   703  0010C0  6BE4               	clrf	(??_main+5)& (0+255),b
   704  0010C2                     u2845:
   705  0010C2  A683               	btfss	3971,3,c	;volatile
   706  0010C4  D004               	goto	u2850
   707  0010C6  0E40               	movlw	64
   708  0010C8  0100               	movlb	0	; () banked
   709  0010CA  6FE5               	movwf	(??_main+6)& (0+255),b
   710  0010CC  D002               	goto	u2865
   711  0010CE                     u2850:
   712  0010CE  0100               	movlb	0	; () banked
   713  0010D0  6BE5               	clrf	(??_main+6)& (0+255),b
   714  0010D2                     u2865:
   715  0010D2  A081               	btfss	3969,0,c	;volatile
   716  0010D4  D004               	goto	u2870
   717  0010D6  0E80               	movlw	128
   718  0010D8  0100               	movlb	0	; () banked
   719  0010DA  6FE6               	movwf	(??_main+7)& (0+255),b
   720  0010DC  D002               	goto	u2885
   721  0010DE                     u2870:
   722  0010DE  0100               	movlb	0	; () banked
   723  0010E0  6BE6               	clrf	(??_main+7)& (0+255),b
   724  0010E2                     u2885:
   725  0010E2  0100               	movlb	0	; () banked
   726  0010E4  51E6               	movf	(??_main+7)& (0+255),w,b
   727  0010E6  0100               	movlb	0	; () banked
   728  0010E8  11E5               	iorwf	(??_main+6)& (0+255),w,b
   729  0010EA  0100               	movlb	0	; () banked
   730  0010EC  11E4               	iorwf	(??_main+5)& (0+255),w,b
   731  0010EE  0100               	movlb	0	; () banked
   732  0010F0  11E3               	iorwf	(??_main+4)& (0+255),w,b
   733  0010F2  0100               	movlb	0	; () banked
   734  0010F4  11E2               	iorwf	(??_main+3)& (0+255),w,b
   735  0010F6  0100               	movlb	0	; () banked
   736  0010F8  11E1               	iorwf	(??_main+2)& (0+255),w,b
   737  0010FA  0100               	movlb	0	; () banked
   738  0010FC  11E0               	iorwf	(??_main+1)& (0+255),w,b
   739  0010FE  0100               	movlb	0	; () banked
   740  001100  11DF               	iorwf	??_main& (0+255),w,b
   741  001102  ECC2  F00E         	call	_EUSART_CompWrite
   742                           
   743                           ;main.c: 298: EUSART_CompWrite((PORTAbits.RA0 << 7) | (PORTAbits.RA1 << 6) | (PORTDbits.
      +                          RD0 << 5) | (PORTDbits.RD1 << 4)
   744                           ;main.c: 299: | (PORTBbits.RB4 << 3) | (PORTAbits.RA5 << 2) | ((subdata.IO_LMid) << 1) |
      +                           (PORTBbits.RB1 << 0));
   745  001106  A281               	btfss	3969,1,c	;volatile
   746  001108  D004               	goto	u2890
   747  00110A  0100               	movlb	0	; () banked
   748  00110C  6BDF               	clrf	??_main& (0+255),b
   749  00110E  2BDF               	incf	??_main& (0+255),f,b
   750  001110  D002               	goto	u2898
   751  001112                     u2890:
   752  001112  0100               	movlb	0	; () banked
   753  001114  6BDF               	clrf	??_main& (0+255),b
   754  001116                     u2898:
   755  001116  A840               	btfss	_subdata,4,c
   756  001118  D004               	goto	u2900
   757  00111A  0E02               	movlw	2
   758  00111C  0100               	movlb	0	; () banked
   759  00111E  6FE0               	movwf	(??_main+1)& (0+255),b
   760  001120  D002               	goto	u2915
   761  001122                     u2900:
   762  001122  0100               	movlb	0	; () banked
   763  001124  6BE0               	clrf	(??_main+1)& (0+255),b
   764  001126                     u2915:
   765  001126  AA80               	btfss	3968,5,c	;volatile
   766  001128  D004               	goto	u2920
   767  00112A  0E04               	movlw	4
   768  00112C  0100               	movlb	0	; () banked
   769  00112E  6FE1               	movwf	(??_main+2)& (0+255),b
   770  001130  D002               	goto	u2935
   771  001132                     u2920:
   772  001132  0100               	movlb	0	; () banked
   773  001134  6BE1               	clrf	(??_main+2)& (0+255),b
   774  001136                     u2935:
   775  001136  A881               	btfss	3969,4,c	;volatile
   776  001138  D004               	goto	u2940
   777  00113A  0E08               	movlw	8
   778  00113C  0100               	movlb	0	; () banked
   779  00113E  6FE2               	movwf	(??_main+3)& (0+255),b
   780  001140  D002               	goto	u2955
   781  001142                     u2940:
   782  001142  0100               	movlb	0	; () banked
   783  001144  6BE2               	clrf	(??_main+3)& (0+255),b
   784  001146                     u2955:
   785  001146  A283               	btfss	3971,1,c	;volatile
   786  001148  D004               	goto	u2960
   787  00114A  0E10               	movlw	16
   788  00114C  0100               	movlb	0	; () banked
   789  00114E  6FE3               	movwf	(??_main+4)& (0+255),b
   790  001150  D002               	goto	u2975
   791  001152                     u2960:
   792  001152  0100               	movlb	0	; () banked
   793  001154  6BE3               	clrf	(??_main+4)& (0+255),b
   794  001156                     u2975:
   795  001156  A083               	btfss	3971,0,c	;volatile
   796  001158  D004               	goto	u2980
   797  00115A  0E20               	movlw	32
   798  00115C  0100               	movlb	0	; () banked
   799  00115E  6FE4               	movwf	(??_main+5)& (0+255),b
   800  001160  D002               	goto	u2995
   801  001162                     u2980:
   802  001162  0100               	movlb	0	; () banked
   803  001164  6BE4               	clrf	(??_main+5)& (0+255),b
   804  001166                     u2995:
   805  001166  A280               	btfss	3968,1,c	;volatile
   806  001168  D004               	goto	u3000
   807  00116A  0E40               	movlw	64
   808  00116C  0100               	movlb	0	; () banked
   809  00116E  6FE5               	movwf	(??_main+6)& (0+255),b
   810  001170  D002               	goto	u3015
   811  001172                     u3000:
   812  001172  0100               	movlb	0	; () banked
   813  001174  6BE5               	clrf	(??_main+6)& (0+255),b
   814  001176                     u3015:
   815  001176  A080               	btfss	3968,0,c	;volatile
   816  001178  D004               	goto	u3020
   817  00117A  0E80               	movlw	128
   818  00117C  0100               	movlb	0	; () banked
   819  00117E  6FE6               	movwf	(??_main+7)& (0+255),b
   820  001180  D002               	goto	u3035
   821  001182                     u3020:
   822  001182  0100               	movlb	0	; () banked
   823  001184  6BE6               	clrf	(??_main+7)& (0+255),b
   824  001186                     u3035:
   825  001186  0100               	movlb	0	; () banked
   826  001188  51E6               	movf	(??_main+7)& (0+255),w,b
   827  00118A  0100               	movlb	0	; () banked
   828  00118C  11E5               	iorwf	(??_main+6)& (0+255),w,b
   829  00118E  0100               	movlb	0	; () banked
   830  001190  11E4               	iorwf	(??_main+5)& (0+255),w,b
   831  001192  0100               	movlb	0	; () banked
   832  001194  11E3               	iorwf	(??_main+4)& (0+255),w,b
   833  001196  0100               	movlb	0	; () banked
   834  001198  11E2               	iorwf	(??_main+3)& (0+255),w,b
   835  00119A  0100               	movlb	0	; () banked
   836  00119C  11E1               	iorwf	(??_main+2)& (0+255),w,b
   837  00119E  0100               	movlb	0	; () banked
   838  0011A0  11E0               	iorwf	(??_main+1)& (0+255),w,b
   839  0011A2  0100               	movlb	0	; () banked
   840  0011A4  11DF               	iorwf	??_main& (0+255),w,b
   841  0011A6  ECC2  F00E         	call	_EUSART_CompWrite
   842                           
   843                           ;main.c: 301: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_LHorizon) >> 2));
   844  0011AA  0E02               	movlw	2
   845  0011AC  ECAE  F00D         	call	_ADC_GetConversion
   846  0011B0  90D8               	bcf	status,0,c
   847  0011B2  3215               	rrcf	?_ADC_GetConversion+1,f,c
   848  0011B4  3214               	rrcf	?_ADC_GetConversion,f,c
   849  0011B6  90D8               	bcf	status,0,c
   850  0011B8  3215               	rrcf	?_ADC_GetConversion+1,f,c
   851  0011BA  3214               	rrcf	?_ADC_GetConversion,f,c
   852  0011BC  5014               	movf	?_ADC_GetConversion,w,c
   853  0011BE  0800               	sublw	0
   854  0011C0  0100               	movlb	0	; () banked
   855  0011C2  6FDF               	movwf	??_main& (0+255),b
   856  0011C4  0100               	movlb	0	; () banked
   857  0011C6  05DF               	decf	??_main& (0+255),w,b
   858  0011C8  ECC2  F00E         	call	_EUSART_CompWrite
   859                           
   860                           ;main.c: 302: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_LVertical) >> 2));
   861  0011CC  0E03               	movlw	3
   862  0011CE  ECAE  F00D         	call	_ADC_GetConversion
   863  0011D2  90D8               	bcf	status,0,c
   864  0011D4  3215               	rrcf	?_ADC_GetConversion+1,f,c
   865  0011D6  3214               	rrcf	?_ADC_GetConversion,f,c
   866  0011D8  90D8               	bcf	status,0,c
   867  0011DA  3215               	rrcf	?_ADC_GetConversion+1,f,c
   868  0011DC  3214               	rrcf	?_ADC_GetConversion,f,c
   869  0011DE  5014               	movf	?_ADC_GetConversion,w,c
   870  0011E0  0800               	sublw	0
   871  0011E2  0100               	movlb	0	; () banked
   872  0011E4  6FDF               	movwf	??_main& (0+255),b
   873  0011E6  0100               	movlb	0	; () banked
   874  0011E8  05DF               	decf	??_main& (0+255),w,b
   875  0011EA  ECC2  F00E         	call	_EUSART_CompWrite
   876                           
   877                           ;main.c: 304: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_RHorizon) >> 2));
   878  0011EE  0E05               	movlw	5
   879  0011F0  ECAE  F00D         	call	_ADC_GetConversion
   880  0011F4  90D8               	bcf	status,0,c
   881  0011F6  3215               	rrcf	?_ADC_GetConversion+1,f,c
   882  0011F8  3214               	rrcf	?_ADC_GetConversion,f,c
   883  0011FA  90D8               	bcf	status,0,c
   884  0011FC  3215               	rrcf	?_ADC_GetConversion+1,f,c
   885  0011FE  3214               	rrcf	?_ADC_GetConversion,f,c
   886  001200  5014               	movf	?_ADC_GetConversion,w,c
   887  001202  0800               	sublw	0
   888  001204  0100               	movlb	0	; () banked
   889  001206  6FDF               	movwf	??_main& (0+255),b
   890  001208  0100               	movlb	0	; () banked
   891  00120A  05DF               	decf	??_main& (0+255),w,b
   892  00120C  ECC2  F00E         	call	_EUSART_CompWrite
   893                           
   894                           ;main.c: 305: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_RVertical) >> 2));
   895  001210  0E06               	movlw	6
   896  001212  ECAE  F00D         	call	_ADC_GetConversion
   897  001216  90D8               	bcf	status,0,c
   898  001218  3215               	rrcf	?_ADC_GetConversion+1,f,c
   899  00121A  3214               	rrcf	?_ADC_GetConversion,f,c
   900  00121C  90D8               	bcf	status,0,c
   901  00121E  3215               	rrcf	?_ADC_GetConversion+1,f,c
   902  001220  3214               	rrcf	?_ADC_GetConversion,f,c
   903  001222  5014               	movf	?_ADC_GetConversion,w,c
   904  001224  0800               	sublw	0
   905  001226  0100               	movlb	0	; () banked
   906  001228  6FDF               	movwf	??_main& (0+255),b
   907  00122A  0100               	movlb	0	; () banked
   908  00122C  05DF               	decf	??_main& (0+255),w,b
   909  00122E  ECC2  F00E         	call	_EUSART_CompWrite
   910                           
   911                           ;main.c: 307: EUSART_CompWrite((PORTBbits.RB2 << 7) | ((subdata.IO_LDown) << 6) | ((1 - 
      +                          PORTBbits.RB5) << 1) | (PORTBbits.RB3 << 0));
   912  001232  A681               	btfss	3969,3,c	;volatile
   913  001234  D004               	goto	u3040
   914  001236  0100               	movlb	0	; () banked
   915  001238  6BDF               	clrf	??_main& (0+255),b
   916  00123A  2BDF               	incf	??_main& (0+255),f,b
   917  00123C  D002               	goto	u3048
   918  00123E                     u3040:
   919  00123E  0100               	movlb	0	; () banked
   920  001240  6BDF               	clrf	??_main& (0+255),b
   921  001242                     u3048:
   922  001242  AA40               	btfss	_subdata,5,c
   923  001244  D004               	goto	u3050
   924  001246  0E40               	movlw	64
   925  001248  0100               	movlb	0	; () banked
   926  00124A  6FE0               	movwf	(??_main+1)& (0+255),b
   927  00124C  D002               	goto	u3065
   928  00124E                     u3050:
   929  00124E  0100               	movlb	0	; () banked
   930  001250  6BE0               	clrf	(??_main+1)& (0+255),b
   931  001252                     u3065:
   932  001252  A481               	btfss	3969,2,c	;volatile
   933  001254  D004               	goto	u3070
   934  001256  0E80               	movlw	128
   935  001258  0100               	movlb	0	; () banked
   936  00125A  6FE1               	movwf	(??_main+2)& (0+255),b
   937  00125C  D002               	goto	u3085
   938  00125E                     u3070:
   939  00125E  0100               	movlb	0	; () banked
   940  001260  6BE1               	clrf	(??_main+2)& (0+255),b
   941  001262                     u3085:
   942  001262  0100               	movlb	0	; () banked
   943  001264  51E1               	movf	(??_main+2)& (0+255),w,b
   944  001266  0100               	movlb	0	; () banked
   945  001268  11E0               	iorwf	(??_main+1)& (0+255),w,b
   946  00126A  0100               	movlb	0	; () banked
   947  00126C  6FE2               	movwf	(??_main+3)& (0+255),b
   948  00126E  AA81               	btfss	3969,5,c	;volatile
   949  001270  D002               	goto	u3090
   950  001272  0E01               	movlw	1
   951  001274  D001               	goto	u3096
   952  001276                     u3090:
   953  001276  0E00               	movlw	0
   954  001278                     u3096:
   955  001278  0800               	sublw	0
   956  00127A  0100               	movlb	0	; () banked
   957  00127C  6FE3               	movwf	(??_main+4)& (0+255),b
   958  00127E  0100               	movlb	0	; () banked
   959  001280  90D8               	bcf	status,0,c
   960  001282  35E3               	rlcf	(??_main+4)& (0+255),w,b
   961  001284  0F02               	addlw	2
   962  001286  0100               	movlb	0	; () banked
   963  001288  11E2               	iorwf	(??_main+3)& (0+255),w,b
   964  00128A  0100               	movlb	0	; () banked
   965  00128C  11DF               	iorwf	??_main& (0+255),w,b
   966  00128E  ECC2  F00E         	call	_EUSART_CompWrite
   967                           
   968                           ;main.c: 308: EUSART_CompWrite((PORTCbits.RC2 << 5) | (PORTCbits.RC1 << 4) | (PORTDbits.
      +                          RD2 << 3) | (PORTCbits.RC5 << 2) | (PORTDbits.RD5 << 1) | ((subdata.IO_TactSw00) << 0));
   969  001292  AC40               	btfss	_subdata,6,c
   970  001294  D004               	goto	u3100
   971  001296  0100               	movlb	0	; () banked
   972  001298  6BDF               	clrf	??_main& (0+255),b
   973  00129A  2BDF               	incf	??_main& (0+255),f,b
   974  00129C  D002               	goto	u3108
   975  00129E                     u3100:
   976  00129E  0100               	movlb	0	; () banked
   977  0012A0  6BDF               	clrf	??_main& (0+255),b
   978  0012A2                     u3108:
   979  0012A2  AA83               	btfss	3971,5,c	;volatile
   980  0012A4  D004               	goto	u3110
   981  0012A6  0E02               	movlw	2
   982  0012A8  0100               	movlb	0	; () banked
   983  0012AA  6FE0               	movwf	(??_main+1)& (0+255),b
   984  0012AC  D002               	goto	u3125
   985  0012AE                     u3110:
   986  0012AE  0100               	movlb	0	; () banked
   987  0012B0  6BE0               	clrf	(??_main+1)& (0+255),b
   988  0012B2                     u3125:
   989  0012B2  AA82               	btfss	3970,5,c	;volatile
   990  0012B4  D004               	goto	u3130
   991  0012B6  0E04               	movlw	4
   992  0012B8  0100               	movlb	0	; () banked
   993  0012BA  6FE1               	movwf	(??_main+2)& (0+255),b
   994  0012BC  D002               	goto	u3145
   995  0012BE                     u3130:
   996  0012BE  0100               	movlb	0	; () banked
   997  0012C0  6BE1               	clrf	(??_main+2)& (0+255),b
   998  0012C2                     u3145:
   999  0012C2  A483               	btfss	3971,2,c	;volatile
  1000  0012C4  D004               	goto	u3150
  1001  0012C6  0E08               	movlw	8
  1002  0012C8  0100               	movlb	0	; () banked
  1003  0012CA  6FE2               	movwf	(??_main+3)& (0+255),b
  1004  0012CC  D002               	goto	u3165
  1005  0012CE                     u3150:
  1006  0012CE  0100               	movlb	0	; () banked
  1007  0012D0  6BE2               	clrf	(??_main+3)& (0+255),b
  1008  0012D2                     u3165:
  1009  0012D2  A282               	btfss	3970,1,c	;volatile
  1010  0012D4  D004               	goto	u3170
  1011  0012D6  0E10               	movlw	16
  1012  0012D8  0100               	movlb	0	; () banked
  1013  0012DA  6FE3               	movwf	(??_main+4)& (0+255),b
  1014  0012DC  D002               	goto	u3185
  1015  0012DE                     u3170:
  1016  0012DE  0100               	movlb	0	; () banked
  1017  0012E0  6BE3               	clrf	(??_main+4)& (0+255),b
  1018  0012E2                     u3185:
  1019  0012E2  A482               	btfss	3970,2,c	;volatile
  1020  0012E4  D004               	goto	u3190
  1021  0012E6  0E20               	movlw	32
  1022  0012E8  0100               	movlb	0	; () banked
  1023  0012EA  6FE4               	movwf	(??_main+5)& (0+255),b
  1024  0012EC  D002               	goto	u3205
  1025  0012EE                     u3190:
  1026  0012EE  0100               	movlb	0	; () banked
  1027  0012F0  6BE4               	clrf	(??_main+5)& (0+255),b
  1028  0012F2                     u3205:
  1029  0012F2  0100               	movlb	0	; () banked
  1030  0012F4  51E4               	movf	(??_main+5)& (0+255),w,b
  1031  0012F6  0100               	movlb	0	; () banked
  1032  0012F8  11E3               	iorwf	(??_main+4)& (0+255),w,b
  1033  0012FA  0100               	movlb	0	; () banked
  1034  0012FC  11E2               	iorwf	(??_main+3)& (0+255),w,b
  1035  0012FE  0100               	movlb	0	; () banked
  1036  001300  11E1               	iorwf	(??_main+2)& (0+255),w,b
  1037  001302  0100               	movlb	0	; () banked
  1038  001304  11E0               	iorwf	(??_main+1)& (0+255),w,b
  1039  001306  0100               	movlb	0	; () banked
  1040  001308  11DF               	iorwf	??_main& (0+255),w,b
  1041  00130A  ECC2  F00E         	call	_EUSART_CompWrite
  1042                           
  1043                           ;main.c: 309: EUSART1_Write('E');
  1044  00130E  0E45               	movlw	69
  1045  001310  EC2A  F00C         	call	_EUSART1_Write
  1046                           
  1047                           ;main.c: 310: EUSART1_Write('E');
  1048  001314  0E45               	movlw	69
  1049  001316  EC2A  F00C         	call	_EUSART1_Write
  1050  00131A                     l653:
  1051                           
  1052                           ;main.c: 314: }
  1053                           ;main.c: 315: if ((eusart2RxCount)) {
  1054  00131A  5039               	movf	_eusart2RxCount,w,c	;volatile
  1055  00131C  B4D8               	btfsc	status,2,c
  1056  00131E  D003               	goto	l2884
  1057                           
  1058                           ;main.c: 316: subdata.byte = EUSART2_Read();
  1059  001320  EC48  F00D         	call	_EUSART2_Read	;wreg free
  1060  001324  6E40               	movwf	_subdata,c
  1061  001326                     l2884:
  1062                           
  1063                           ;main.c: 317: }
  1064                           ;main.c: 346: if ((eusart1RxCount)) {
  1065  001326  5034               	movf	_eusart1RxCount,w,c	;volatile
  1066  001328  B4D8               	btfsc	status,2,c
  1067  00132A  D690               	goto	l2854
  1068                           
  1069                           ;main.c: 347: static uint8_t recieveddata;
  1070                           ;main.c: 348: static uint8_t recievedbefore = '\0';
  1071                           ;main.c: 349: static uint8_t columun = 0;
  1072                           ;main.c: 350: static uint8_t line = 0;
  1073                           ;main.c: 351: static uint8_t escaped = 0;
  1074                           ;main.c: 352: recieveddata = EUSART1_Read();
  1075  00132C  EC62  F00D         	call	_EUSART1_Read	;wreg free
  1076  001330  6E46               	movwf	main@recieveddata,c
  1077                           
  1078                           ;main.c: 353: if (!escaped) {
  1079  001332  5043               	movf	main@escaped,w,c
  1080  001334  B4D8               	btfsc	status,2,c
  1081  001336  D022               	goto	l2906
  1082  001338  D02B               	goto	l2908
  1083  00133A                     l2892:
  1084                           
  1085                           ;main.c: 356: oled_clear();
  1086  00133A  EC95  F00E         	call	_oled_clear	;wreg free
  1087                           
  1088                           ;main.c: 357: oled_position(line = 0, columun = 0);
  1089  00133E  0E00               	movlw	0
  1090  001340  0100               	movlb	0	; () banked
  1091  001342  6FC0               	movwf	main@columun& (0+255),b
  1092  001344  C0C0  F0D6         	movff	main@columun,oled_position@col
  1093  001348  0E00               	movlw	0
  1094  00134A  6E44               	movwf	main@line,c
  1095  00134C  5044               	movf	main@line,w,c
  1096  00134E  EC89  F00E         	call	_oled_position
  1097                           
  1098                           ;main.c: 358: break;
  1099  001352  D020               	goto	l673
  1100  001354                     l2894:
  1101                           
  1102                           ;main.c: 360: oled_position(line = recieveddata, columun = 0);
  1103  001354  0E00               	movlw	0
  1104  001356  0100               	movlb	0	; () banked
  1105  001358  6FC0               	movwf	main@columun& (0+255),b
  1106  00135A  C0C0  F0D6         	movff	main@columun,oled_position@col
  1107  00135E  C046  F044         	movff	main@recieveddata,main@line
  1108  001362  5044               	movf	main@line,w,c
  1109  001364  EC89  F00E         	call	_oled_position
  1110  001368  D007               	goto	l2900
  1111  00136A                     l2898:
  1112                           
  1113                           ;main.c: 364: oled_position(line, columun = recieveddata);
  1114  00136A  C046  F0C0         	movff	main@recieveddata,main@columun
  1115  00136E  C0C0  F0D6         	movff	main@columun,oled_position@col
  1116  001372  5044               	movf	main@line,w,c
  1117  001374  EC89  F00E         	call	_oled_position
  1118  001378                     l2900:
  1119                           
  1120                           ;main.c: 365: escaped = 1;
  1121  001378  0E01               	movlw	1
  1122  00137A  D00B               	goto	L1
  1123  00137C                     l2906:
  1124  00137C  5045               	movf	main@recievedbefore,w,c
  1125                           
  1126                           ; Switch size 1, requested type "space"
  1127                           ; Number of cases is 3, Range of values is 0 to 18
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte           10     6 (average)
  1131                           ;	Chosen strategy is simple_byte
  1132  00137E  0A00               	xorlw	0	; case 0
  1133  001380  B4D8               	btfsc	status,2,c
  1134  001382  D7DB               	goto	l2892
  1135  001384  0A11               	xorlw	17	; case 17
  1136  001386  B4D8               	btfsc	status,2,c
  1137  001388  D7E5               	goto	l2894
  1138  00138A  0A03               	xorlw	3	; case 18
  1139  00138C  B4D8               	btfsc	status,2,c
  1140  00138E  D7ED               	goto	l2898
  1141  001390                     l2908:
  1142                           
  1143                           ;main.c: 372: escaped = 0;
  1144  001390  0E00               	movlw	0
  1145  001392                     L1:
  1146  001392  6E43               	movwf	main@escaped,c
  1147  001394                     l673:
  1148                           
  1149                           ;main.c: 373: }
  1150                           ;main.c: 374: if (!escaped) {
  1151  001394  5043               	movf	main@escaped,w,c
  1152  001396  B4D8               	btfsc	status,2,c
  1153  001398  D019               	goto	l2924
  1154  00139A  D028               	goto	l674
  1155  00139C                     l2912:
  1156                           
  1157                           ;main.c: 382: if (recievedbefore == '\r' && line == 0) {
  1158  00139C  0E0D               	movlw	13
  1159  00139E  1845               	xorwf	main@recievedbefore,w,c
  1160  0013A0  A4D8               	btfss	status,2,c
  1161  0013A2  D024               	goto	l674
  1162  0013A4  5044               	movf	main@line,w,c
  1163  0013A6  A4D8               	btfss	status,2,c
  1164  0013A8  D021               	goto	l674
  1165                           
  1166                           ;main.c: 383: oled_position(line = 1, columun = 0);
  1167  0013AA  0E00               	movlw	0
  1168  0013AC  0100               	movlb	0	; () banked
  1169  0013AE  6FC0               	movwf	main@columun& (0+255),b
  1170  0013B0  C0C0  F0D6         	movff	main@columun,oled_position@col
  1171  0013B4  0E01               	movlw	1
  1172  0013B6  6E44               	movwf	main@line,c
  1173  0013B8  5044               	movf	main@line,w,c
  1174  0013BA  EC89  F00E         	call	_oled_position
  1175                           
  1176                           ;main.c: 384: }
  1177                           ;main.c: 385: break;
  1178  0013BE  D016               	goto	l674
  1179  0013C0                     l2918:
  1180                           
  1181                           ;main.c: 387: oled_data(recieveddata);
  1182  0013C0  5046               	movf	main@recieveddata,w,c
  1183  0013C2  EC1F  F00E         	call	_oled_data
  1184                           
  1185                           ;main.c: 388: columun++;
  1186  0013C6  0100               	movlb	0	; () banked
  1187  0013C8  2BC0               	incf	main@columun& (0+255),f,b
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 390: }
  1191                           
  1192                           ;main.c: 389: break;
  1193  0013CA  D010               	goto	l674
  1194  0013CC                     l2924:
  1195  0013CC  5046               	movf	main@recieveddata,w,c
  1196                           
  1197                           ; Switch size 1, requested type "space"
  1198                           ; Number of cases is 5, Range of values is 0 to 18
  1199                           ; switch strategies available:
  1200                           ; Name         Instructions Cycles
  1201                           ; simple_byte           16     9 (average)
  1202                           ;	Chosen strategy is simple_byte
  1203  0013CE  0A00               	xorlw	0	; case 0
  1204  0013D0  B4D8               	btfsc	status,2,c
  1205  0013D2  D00C               	goto	l674
  1206  0013D4  0A0A               	xorlw	10	; case 10
  1207  0013D6  B4D8               	btfsc	status,2,c
  1208  0013D8  D7E1               	goto	l2912
  1209  0013DA  0A07               	xorlw	7	; case 13
  1210  0013DC  B4D8               	btfsc	status,2,c
  1211  0013DE  D006               	goto	l674
  1212  0013E0  0A1C               	xorlw	28	; case 17
  1213  0013E2  B4D8               	btfsc	status,2,c
  1214  0013E4  D003               	goto	l674
  1215  0013E6  0A03               	xorlw	3	; case 18
  1216  0013E8  A4D8               	btfss	status,2,c
  1217  0013EA  D7EA               	goto	l2918
  1218  0013EC                     l674:
  1219                           
  1220                           ;main.c: 391: }
  1221                           ;main.c: 392: recievedbefore = recieveddata;
  1222  0013EC  C046  F045         	movff	main@recieveddata,main@recievedbefore
  1223  0013F0  D62D               	goto	l2854
  1224  0013F2                     __end_of_main:
  1225                           	opt stack 0
  1226                           tblptru	equ	0xFF8
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _oled_str_disp *****************
  1233 ;; Defined at:
  1234 ;;		line 225 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  li              1    wreg     unsigned char 
  1237 ;;  col             1    4[BANK0 ] unsigned char 
  1238 ;;  string          2    5[BANK0 ] PTR const unsigned char 
  1239 ;;		 -> STR_1(10), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  li              1    9[BANK0 ] unsigned char 
  1242 ;;  i               1   10[BANK0 ] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1252 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;Total ram usage:        7 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    8
  1259 ;; This function calls:
  1260 ;;		_oled_data
  1261 ;;		_oled_position
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text1
  1268  001634                     __ptext1:
  1269                           	opt stack 0
  1270  001634                     _oled_str_disp:
  1271                           	opt stack 22
  1272                           
  1273                           ;incstack = 0
  1274                           ;oled_str_disp@li stored from wreg
  1275  001634  0100               	movlb	0	; () banked
  1276  001636  6FDD               	movwf	oled_str_disp@li& (0+255),b
  1277                           
  1278                           ;main.c: 226: uint8_t i = 0;
  1279  001638  0E00               	movlw	0
  1280  00163A  0100               	movlb	0	; () banked
  1281  00163C  6FDE               	movwf	oled_str_disp@i& (0+255),b
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;main.c: 227: oled_position(li, col);
  1285  00163E  C0D8  F0D6         	movff	oled_str_disp@col,oled_position@col
  1286  001642  0100               	movlb	0	; () banked
  1287  001644  51DD               	movf	oled_str_disp@li& (0+255),w,b
  1288  001646  EC89  F00E         	call	_oled_position
  1289                           
  1290                           ;main.c: 228: while (((col + i) < 16) && string[i]) {
  1291  00164A  D017               	goto	l2818
  1292  00164C                     l2814:
  1293                           
  1294                           ;main.c: 231: oled_data(string[i]);
  1295  00164C  0100               	movlb	0	; () banked
  1296  00164E  51DE               	movf	oled_str_disp@i& (0+255),w,b
  1297  001650  0D01               	mullw	1
  1298  001652  C0D9  F0DB         	movff	oled_str_disp@string,??_oled_str_disp
  1299  001656  C0DA  F0DC         	movff	oled_str_disp@string+1,??_oled_str_disp+1
  1300  00165A  50F3               	movf	prodl,w,c
  1301  00165C  0100               	movlb	0	; () banked
  1302  00165E  27DB               	addwf	??_oled_str_disp& (0+255),f,b
  1303  001660  50F4               	movf	prodh,w,c
  1304  001662  0100               	movlb	0	; () banked
  1305  001664  23DC               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1306  001666  C0DB  FFF6         	movff	??_oled_str_disp,tblptrl
  1307  00166A  C0DC  FFF7         	movff	??_oled_str_disp+1,tblptrh
  1308  00166E                     	if	0	;tblptru may be non-zero
  1309  00166E                     	endif
  1310  00166E                     	if	0	;tblptru may be non-zero
  1311  00166E                     	endif
  1312  00166E  0008               	tblrd		*
  1313  001670  50F5               	movf	tablat,w,c
  1314  001672  EC1F  F00E         	call	_oled_data
  1315                           
  1316                           ;main.c: 233: i++;
  1317  001676  0100               	movlb	0	; () banked
  1318  001678  2BDE               	incf	oled_str_disp@i& (0+255),f,b
  1319  00167A                     l2818:
  1320  00167A  0100               	movlb	0	; () banked
  1321  00167C  51DE               	movf	oled_str_disp@i& (0+255),w,b
  1322  00167E  C0D8  F0DB         	movff	oled_str_disp@col,??_oled_str_disp
  1323  001682  0100               	movlb	0	; () banked
  1324  001684  6BDC               	clrf	(??_oled_str_disp+1)& (0+255),b
  1325  001686  0100               	movlb	0	; () banked
  1326  001688  27DB               	addwf	??_oled_str_disp& (0+255),f,b
  1327  00168A  0E00               	movlw	0
  1328  00168C  23DC               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1329  00168E  0100               	movlb	0	; () banked
  1330  001690  BFDC               	btfsc	(??_oled_str_disp+1)& (0+255),7,b
  1331  001692  D008               	goto	l2820
  1332  001694  0100               	movlb	0	; () banked
  1333  001696  51DC               	movf	(??_oled_str_disp+1)& (0+255),w,b
  1334  001698  E11C               	bnz	l638
  1335  00169A  0E10               	movlw	16
  1336  00169C  0100               	movlb	0	; () banked
  1337  00169E  5DDB               	subwf	??_oled_str_disp& (0+255),w,b
  1338  0016A0  B0D8               	btfsc	status,0,c
  1339  0016A2  0012               	return	
  1340  0016A4                     l2820:
  1341                           
  1342                           ; BSR set to: 0
  1343  0016A4  0100               	movlb	0	; () banked
  1344  0016A6  51DE               	movf	oled_str_disp@i& (0+255),w,b
  1345  0016A8  0D01               	mullw	1
  1346  0016AA  C0D9  F0DB         	movff	oled_str_disp@string,??_oled_str_disp
  1347  0016AE  C0DA  F0DC         	movff	oled_str_disp@string+1,??_oled_str_disp+1
  1348  0016B2  50F3               	movf	prodl,w,c
  1349  0016B4  0100               	movlb	0	; () banked
  1350  0016B6  27DB               	addwf	??_oled_str_disp& (0+255),f,b
  1351  0016B8  50F4               	movf	prodh,w,c
  1352  0016BA  0100               	movlb	0	; () banked
  1353  0016BC  23DC               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1354  0016BE  C0DB  FFF6         	movff	??_oled_str_disp,tblptrl
  1355  0016C2  C0DC  FFF7         	movff	??_oled_str_disp+1,tblptrh
  1356  0016C6                     	if	0	;tblptru may be non-zero
  1357  0016C6                     	endif
  1358  0016C6                     	if	0	;tblptru may be non-zero
  1359  0016C6                     	endif
  1360  0016C6  0008               	tblrd		*
  1361  0016C8  50F5               	movf	tablat,w,c
  1362  0016CA  0900               	iorlw	0
  1363  0016CC  B4D8               	btfsc	status,2,c
  1364  0016CE  0012               	return	
  1365  0016D0  D7BD               	goto	l2814
  1366  0016D2                     l638:
  1367                           
  1368                           ; BSR set to: 0
  1369  0016D2  0012               	return		;funcret
  1370  0016D4                     __end_of_oled_str_disp:
  1371                           	opt stack 0
  1372                           tblptru	equ	0xFF8
  1373                           tblptrh	equ	0xFF7
  1374                           tblptrl	equ	0xFF6
  1375                           tablat	equ	0xFF5
  1376                           prodh	equ	0xFF4
  1377                           prodl	equ	0xFF3
  1378                           intcon	equ	0xFF2
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function _oled_position *****************
  1384 ;; Defined at:
  1385 ;;		line 216 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  li              1    wreg     unsigned char 
  1388 ;;  col             1    2[BANK0 ] unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  li              1    3[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        2 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    7
  1407 ;; This function calls:
  1408 ;;		_oled_cmd
  1409 ;; This function is called by:
  1410 ;;		_oled_str_disp
  1411 ;;		_main
  1412 ;;		_oled_char_disp
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text2
  1417  001D12                     __ptext2:
  1418                           	opt stack 0
  1419  001D12                     _oled_position:
  1420                           	opt stack 22
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;incstack = 0
  1424                           ;oled_position@li stored from wreg
  1425  001D12  0100               	movlb	0	; () banked
  1426  001D14  6FD7               	movwf	oled_position@li& (0+255),b
  1427                           
  1428                           ;main.c: 217: oled_cmd(0x80 | (li << 5) | col);
  1429  001D16  0100               	movlb	0	; () banked
  1430  001D18  39D7               	swapf	oled_position@li& (0+255),w,b
  1431  001D1A  46E8               	rlncf	wreg,f,c
  1432  001D1C  0BE0               	andlw	224
  1433  001D1E  0100               	movlb	0	; () banked
  1434  001D20  11D6               	iorwf	oled_position@col& (0+255),w,b
  1435  001D22  0980               	iorlw	128
  1436  001D24  EC34  F00E         	call	_oled_cmd
  1437  001D28  0012               	return		;funcret
  1438  001D2A                     __end_of_oled_position:
  1439                           	opt stack 0
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           prodh	equ	0xFF4
  1445                           prodl	equ	0xFF3
  1446                           intcon	equ	0xFF2
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _oled_data *****************
  1452 ;; Defined at:
  1453 ;;		line 199 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  work            1    wreg     unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  work            1    1[BANK0 ] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;Total ram usage:        1 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    6
  1474 ;; This function calls:
  1475 ;;		_I2C_M_write
  1476 ;; This function is called by:
  1477 ;;		_oled_str_disp
  1478 ;;		_main
  1479 ;;		_oled_char_disp
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text3
  1484  001C3E                     __ptext3:
  1485                           	opt stack 0
  1486  001C3E                     _oled_data:
  1487                           	opt stack 23
  1488                           
  1489                           ;incstack = 0
  1490                           ;oled_data@work stored from wreg
  1491  001C3E  0100               	movlb	0	; () banked
  1492  001C40  6FD5               	movwf	oled_data@work& (0+255),b
  1493                           
  1494                           ;main.c: 200: static char write[2];
  1495                           ;main.c: 201: write[0] = 0x40;
  1496  001C42  0E40               	movlw	64
  1497  001C44  0100               	movlb	0	; () banked
  1498  001C46  6FD2               	movwf	oled_data@write& (0+255),b
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 202: write[1] = work;
  1502  001C48  C0D5  F0D3         	movff	oled_data@work,oled_data@write+1
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;main.c: 203: I2C_M_write((0x3c), (uint8_t*) write, 2);
  1506  001C4C  0ED2               	movlw	low oled_data@write
  1507  001C4E  6E24               	movwf	I2C_M_write@wr,c
  1508  001C50  0E00               	movlw	high oled_data@write
  1509  001C52  6E25               	movwf	I2C_M_write@wr+1,c
  1510  001C54  0E02               	movlw	2
  1511  001C56  6E26               	movwf	I2C_M_write@length,c
  1512  001C58  0E3C               	movlw	60
  1513  001C5A  ECB9  F00B         	call	_I2C_M_write
  1514                           
  1515                           ;main.c: 204: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1516  001C5E  0ED5               	movlw	213
  1517  001C60                     u3287:
  1518  001C60  2EE8               	decfsz	wreg,f,c
  1519  001C62  D7FE               	goto	u3287
  1520  001C64  F000               	nop	
  1521  001C66  0012               	return		;funcret
  1522  001C68                     __end_of_oled_data:
  1523                           	opt stack 0
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           tblptrl	equ	0xFF6
  1527                           tablat	equ	0xFF5
  1528                           prodh	equ	0xFF4
  1529                           prodl	equ	0xFF3
  1530                           intcon	equ	0xFF2
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           status	equ	0xFD8
  1534                           
  1535 ;; *************** function _oled_init *****************
  1536 ;; Defined at:
  1537 ;;		line 207 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    7
  1558 ;; This function calls:
  1559 ;;		_oled_cmd
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text4
  1566  0019EA                     __ptext4:
  1567                           	opt stack 0
  1568  0019EA                     _oled_init:
  1569                           	opt stack 23
  1570                           
  1571                           ;main.c: 208: oled_cmd(0x01);
  1572                           
  1573                           ;incstack = 0
  1574  0019EA  0E01               	movlw	1
  1575  0019EC  EC34  F00E         	call	_oled_cmd
  1576                           
  1577                           ;main.c: 209: _delay((unsigned long)((2)*(64000000/4000.0)));
  1578  0019F0  0E2A               	movlw	42
  1579  0019F2  0100               	movlb	0	; () banked
  1580  0019F4  6FD6               	movwf	??_oled_init& (0+255),b
  1581  0019F6  0E8E               	movlw	142
  1582  0019F8                     u3297:
  1583  0019F8  2EE8               	decfsz	wreg,f,c
  1584  0019FA  D7FE               	goto	u3297
  1585  0019FC  2FD6               	decfsz	??_oled_init& (0+255),f,b
  1586  0019FE  D7FC               	goto	u3297
  1587                           
  1588                           ;main.c: 210: oled_cmd(0x03);
  1589  001A00  0E03               	movlw	3
  1590  001A02  EC34  F00E         	call	_oled_cmd
  1591                           
  1592                           ;main.c: 211: oled_cmd(0x0f & 0x0f & 0x0d & 0x0e);
  1593  001A06  0E0C               	movlw	12
  1594  001A08  EC34  F00E         	call	_oled_cmd
  1595                           
  1596                           ;main.c: 212: oled_cmd(0x01);
  1597  001A0C  0E01               	movlw	1
  1598  001A0E  EC34  F00E         	call	_oled_cmd
  1599                           
  1600                           ;main.c: 213: _delay((unsigned long)((2)*(64000000/4000.0)));
  1601  001A12  0E2A               	movlw	42
  1602  001A14  0100               	movlb	0	; () banked
  1603  001A16  6FD6               	movwf	??_oled_init& (0+255),b
  1604  001A18  0E8E               	movlw	142
  1605  001A1A                     u3307:
  1606  001A1A  2EE8               	decfsz	wreg,f,c
  1607  001A1C  D7FE               	goto	u3307
  1608  001A1E  2FD6               	decfsz	??_oled_init& (0+255),f,b
  1609  001A20  D7FC               	goto	u3307
  1610  001A22  0012               	return		;funcret
  1611  001A24                     __end_of_oled_init:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           prodh	equ	0xFF4
  1618                           prodl	equ	0xFF3
  1619                           intcon	equ	0xFF2
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _oled_contrast *****************
  1625 ;; Defined at:
  1626 ;;		line 237 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  cont            1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  cont            1    3[BANK0 ] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    7
  1647 ;; This function calls:
  1648 ;;		_oled_cmd
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text5
  1655  0019AE                     __ptext5:
  1656                           	opt stack 0
  1657  0019AE                     _oled_contrast:
  1658                           	opt stack 23
  1659                           
  1660                           ;incstack = 0
  1661                           ;oled_contrast@cont stored from wreg
  1662  0019AE  0100               	movlb	0	; () banked
  1663  0019B0  6FD7               	movwf	oled_contrast@cont& (0+255),b
  1664                           
  1665                           ;main.c: 238: oled_cmd(0x2A);
  1666  0019B2  0E2A               	movlw	42
  1667  0019B4  EC34  F00E         	call	_oled_cmd
  1668                           
  1669                           ;main.c: 239: oled_cmd(0x79);
  1670  0019B8  0E79               	movlw	121
  1671  0019BA  EC34  F00E         	call	_oled_cmd
  1672                           
  1673                           ;main.c: 240: oled_cmd(0x81);
  1674  0019BE  0E81               	movlw	129
  1675  0019C0  EC34  F00E         	call	_oled_cmd
  1676                           
  1677                           ;main.c: 241: oled_cmd(cont);
  1678  0019C4  0100               	movlb	0	; () banked
  1679  0019C6  51D7               	movf	oled_contrast@cont& (0+255),w,b
  1680  0019C8  EC34  F00E         	call	_oled_cmd
  1681                           
  1682                           ;main.c: 242: oled_cmd(0x78);
  1683  0019CC  0E78               	movlw	120
  1684  0019CE  EC34  F00E         	call	_oled_cmd
  1685                           
  1686                           ;main.c: 243: oled_cmd(0x28);
  1687  0019D2  0E28               	movlw	40
  1688  0019D4  EC34  F00E         	call	_oled_cmd
  1689                           
  1690                           ;main.c: 244: _delay((unsigned long)((2)*(64000000/4000.0)));
  1691  0019D8  0E2A               	movlw	42
  1692  0019DA  0100               	movlb	0	; () banked
  1693  0019DC  6FD6               	movwf	??_oled_contrast& (0+255),b
  1694  0019DE  0E8E               	movlw	142
  1695  0019E0                     u3317:
  1696  0019E0  2EE8               	decfsz	wreg,f,c
  1697  0019E2  D7FE               	goto	u3317
  1698  0019E4  2FD6               	decfsz	??_oled_contrast& (0+255),f,b
  1699  0019E6  D7FC               	goto	u3317
  1700  0019E8  0012               	return		;funcret
  1701  0019EA                     __end_of_oled_contrast:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           prodh	equ	0xFF4
  1708                           prodl	equ	0xFF3
  1709                           intcon	equ	0xFF2
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           status	equ	0xFD8
  1713                           
  1714 ;; *************** function _oled_clear *****************
  1715 ;; Defined at:
  1716 ;;		line 247 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        1 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    7
  1737 ;; This function calls:
  1738 ;;		_oled_cmd
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text6
  1745  001D2A                     __ptext6:
  1746                           	opt stack 0
  1747  001D2A                     _oled_clear:
  1748                           	opt stack 23
  1749                           
  1750                           ;main.c: 248: oled_cmd(0x01);
  1751                           
  1752                           ;incstack = 0
  1753  001D2A  0E01               	movlw	1
  1754  001D2C  EC34  F00E         	call	_oled_cmd
  1755                           
  1756                           ;main.c: 249: _delay((unsigned long)((2)*(64000000/4000.0)));
  1757  001D30  0E2A               	movlw	42
  1758  001D32  0100               	movlb	0	; () banked
  1759  001D34  6FD6               	movwf	??_oled_clear& (0+255),b
  1760  001D36  0E8E               	movlw	142
  1761  001D38                     u3327:
  1762  001D38  2EE8               	decfsz	wreg,f,c
  1763  001D3A  D7FE               	goto	u3327
  1764  001D3C  2FD6               	decfsz	??_oled_clear& (0+255),f,b
  1765  001D3E  D7FC               	goto	u3327
  1766  001D40  0012               	return		;funcret
  1767  001D42                     __end_of_oled_clear:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _oled_cmd *****************
  1781 ;; Defined at:
  1782 ;;		line 191 in file "main.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  work            1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  work            1    1[BANK0 ] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    6
  1803 ;; This function calls:
  1804 ;;		_I2C_M_write
  1805 ;; This function is called by:
  1806 ;;		_oled_init
  1807 ;;		_oled_position
  1808 ;;		_oled_contrast
  1809 ;;		_oled_clear
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text7
  1814  001C68                     __ptext7:
  1815                           	opt stack 0
  1816  001C68                     _oled_cmd:
  1817                           	opt stack 22
  1818                           
  1819                           ;incstack = 0
  1820                           ;oled_cmd@work stored from wreg
  1821  001C68  0100               	movlb	0	; () banked
  1822  001C6A  6FD5               	movwf	oled_cmd@work& (0+255),b
  1823                           
  1824                           ;main.c: 192: static char write[2];
  1825                           ;main.c: 193: write[0] = 0x00;
  1826  001C6C  0E00               	movlw	0
  1827  001C6E  0100               	movlb	0	; () banked
  1828  001C70  6FD0               	movwf	oled_cmd@write& (0+255),b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 194: write[1] = work;
  1832  001C72  C0D5  F0D1         	movff	oled_cmd@work,oled_cmd@write+1
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 195: I2C_M_write((0x3c), (uint8_t*) write, 2);
  1836  001C76  0ED0               	movlw	low oled_cmd@write
  1837  001C78  6E24               	movwf	I2C_M_write@wr,c
  1838  001C7A  0E00               	movlw	high oled_cmd@write
  1839  001C7C  6E25               	movwf	I2C_M_write@wr+1,c
  1840  001C7E  0E02               	movlw	2
  1841  001C80  6E26               	movwf	I2C_M_write@length,c
  1842  001C82  0E3C               	movlw	60
  1843  001C84  ECB9  F00B         	call	_I2C_M_write
  1844                           
  1845                           ;main.c: 196: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1846  001C88  0ED5               	movlw	213
  1847  001C8A                     u3337:
  1848  001C8A  2EE8               	decfsz	wreg,f,c
  1849  001C8C  D7FE               	goto	u3337
  1850  001C8E  F000               	nop	
  1851  001C90  0012               	return		;funcret
  1852  001C92                     __end_of_oled_cmd:
  1853                           	opt stack 0
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodh	equ	0xFF4
  1859                           prodl	equ	0xFF3
  1860                           intcon	equ	0xFF2
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function _I2C_M_write *****************
  1866 ;; Defined at:
  1867 ;;		line 127 in file "main.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  addr            1    wreg     unsigned char 
  1870 ;;  wr              2   35[COMRAM] PTR unsigned char 
  1871 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  1872 ;;  length          1   37[COMRAM] unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  addr            1    0[BANK0 ] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1884 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;Total ram usage:        4 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    5
  1891 ;; This function calls:
  1892 ;;		_I2C1_MasterWrite
  1893 ;; This function is called by:
  1894 ;;		_oled_cmd
  1895 ;;		_oled_data
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text8
  1900  001772                     __ptext8:
  1901                           	opt stack 0
  1902  001772                     _I2C_M_write:
  1903                           	opt stack 22
  1904                           
  1905                           ;incstack = 0
  1906                           ;I2C_M_write@addr stored from wreg
  1907  001772  0100               	movlb	0	; () banked
  1908  001774  6FD4               	movwf	I2C_M_write@addr& (0+255),b
  1909                           
  1910                           ;main.c: 133: static uint16_t timeOut, slaveTimeOut;
  1911                           ;main.c: 135: static I2C1_MESSAGE_STATUS status;
  1912                           ;main.c: 136: status = I2C1_MESSAGE_PENDING;
  1913  001776  0E02               	movlw	2
  1914  001778  6E49               	movwf	I2C_M_write@status,c
  1915                           
  1916                           ;main.c: 144: timeOut = 0;
  1917  00177A  0E00               	movlw	0
  1918  00177C  0100               	movlb	0	; () banked
  1919  00177E  6FBD               	movwf	(I2C_M_write@timeOut+1)& (0+255),b
  1920  001780  0E00               	movlw	0
  1921  001782  6FBC               	movwf	I2C_M_write@timeOut& (0+255),b
  1922                           
  1923                           ;main.c: 145: slaveTimeOut = 0;
  1924  001784  0E00               	movlw	0
  1925  001786  0100               	movlb	0	; () banked
  1926  001788  6FBB               	movwf	(I2C_M_write@slaveTimeOut+1)& (0+255),b
  1927  00178A  0E00               	movlw	0
  1928  00178C  6FBA               	movwf	I2C_M_write@slaveTimeOut& (0+255),b
  1929                           
  1930                           ;main.c: 147: while (status != I2C1_MESSAGE_FAIL) {
  1931  00178E  D039               	goto	l2776
  1932  001790                     l2750:
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;main.c: 149: I2C1_MasterWrite(wr,
  1936                           ;main.c: 150: length,
  1937                           ;main.c: 151: addr,
  1938                           ;main.c: 152: &status);
  1939  001790  C024  F01D         	movff	I2C_M_write@wr,I2C1_MasterWrite@pdata
  1940  001794  C025  F01E         	movff	I2C_M_write@wr+1,I2C1_MasterWrite@pdata+1
  1941  001798  C026  F01F         	movff	I2C_M_write@length,I2C1_MasterWrite@length
  1942  00179C  C0D4  F020         	movff	I2C_M_write@addr,I2C1_MasterWrite@address
  1943  0017A0  6A21               	clrf	I2C1_MasterWrite@address+1,c
  1944  0017A2  0E49               	movlw	low I2C_M_write@status
  1945  0017A4  6E22               	movwf	I2C1_MasterWrite@pflag,c
  1946  0017A6  0E00               	movlw	high I2C_M_write@status
  1947  0017A8  6E23               	movwf	I2C1_MasterWrite@pflag+1,c
  1948  0017AA  EC05  F00C         	call	_I2C1_MasterWrite	;wreg free
  1949                           
  1950                           ;main.c: 155: while (status == I2C1_MESSAGE_PENDING) {
  1951  0017AE  D011               	goto	l2762
  1952  0017B0                     l2752:
  1953                           
  1954                           ;main.c: 157: _delay((unsigned long)((100)*(64000000/4000000.0)));
  1955  0017B0  0EE4               	movlw	228
  1956  0017B2                     u3347:
  1957  0017B2  D000               	nop2	
  1958  0017B4  D000               	nop2	
  1959  0017B6  2EE8               	decfsz	wreg,f,c
  1960  0017B8  D7FC               	goto	u3347
  1961  0017BA  D000               	nop2		;nop
  1962  0017BC  D000               	nop2		;nop
  1963                           
  1964                           ;main.c: 160: if (slaveTimeOut == 20)
  1965  0017BE  0E14               	movlw	20
  1966  0017C0  0100               	movlb	0	; () banked
  1967  0017C2  19BA               	xorwf	I2C_M_write@slaveTimeOut& (0+255),w,b
  1968  0017C4  0100               	movlb	0	; () banked
  1969  0017C6  11BB               	iorwf	(I2C_M_write@slaveTimeOut+1)& (0+255),w,b
  1970  0017C8  B4D8               	btfsc	status,2,c
  1971  0017CA  D007               	goto	l2764
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;main.c: 162: else
  1975                           ;main.c: 163: slaveTimeOut++;
  1976                           
  1977                           ; BSR set to: 0
  1978                           
  1979                           ; BSR set to: 0
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;main.c: 161: break;
  1983  0017CC  0100               	movlb	0	; () banked
  1984  0017CE  4BBA               	infsnz	I2C_M_write@slaveTimeOut& (0+255),f,b
  1985  0017D0  2BBB               	incf	(I2C_M_write@slaveTimeOut+1)& (0+255),f,b
  1986  0017D2                     l2762:
  1987  0017D2  0E02               	movlw	2
  1988  0017D4  1849               	xorwf	I2C_M_write@status,w,c
  1989  0017D6  B4D8               	btfsc	status,2,c
  1990  0017D8  D7EB               	goto	l2752
  1991  0017DA                     l2764:
  1992                           
  1993                           ;main.c: 164: }
  1994                           ;main.c: 165: if ((slaveTimeOut == 20) ||
  1995                           ;main.c: 166: (status == I2C1_MESSAGE_COMPLETE))
  1996  0017DA  0E14               	movlw	20
  1997  0017DC  0100               	movlb	0	; () banked
  1998  0017DE  19BA               	xorwf	I2C_M_write@slaveTimeOut& (0+255),w,b
  1999  0017E0  0100               	movlb	0	; () banked
  2000  0017E2  11BB               	iorwf	(I2C_M_write@slaveTimeOut+1)& (0+255),w,b
  2001  0017E4  B4D8               	btfsc	status,2,c
  2002  0017E6  0012               	return	
  2003                           
  2004                           ; BSR set to: 0
  2005  0017E8  5049               	movf	I2C_M_write@status,w,c
  2006  0017EA  B4D8               	btfsc	status,2,c
  2007  0017EC  0012               	return	
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 176: if (timeOut == 2)
  2011                           
  2012                           ; BSR set to: 0
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;main.c: 167: break;
  2016  0017EE  0E02               	movlw	2
  2017  0017F0  0100               	movlb	0	; () banked
  2018  0017F2  19BC               	xorwf	I2C_M_write@timeOut& (0+255),w,b
  2019  0017F4  0100               	movlb	0	; () banked
  2020  0017F6  11BD               	iorwf	(I2C_M_write@timeOut+1)& (0+255),w,b
  2021  0017F8  B4D8               	btfsc	status,2,c
  2022  0017FA  0012               	return	
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 178: else
  2026                           ;main.c: 179: timeOut++;
  2027                           
  2028                           ; BSR set to: 0
  2029                           
  2030                           ; BSR set to: 0
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;main.c: 177: break;
  2034  0017FC  0100               	movlb	0	; () banked
  2035  0017FE  4BBC               	infsnz	I2C_M_write@timeOut& (0+255),f,b
  2036  001800  2BBD               	incf	(I2C_M_write@timeOut+1)& (0+255),f,b
  2037  001802                     l2776:
  2038                           
  2039                           ; BSR set to: 0
  2040  001802  0449               	decf	I2C_M_write@status,w,c
  2041  001804  B4D8               	btfsc	status,2,c
  2042  001806  0012               	return	
  2043  001808  D7C3               	goto	l2750
  2044  00180A                     __end_of_I2C_M_write:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           intcon	equ	0xFF2
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _I2C1_MasterWrite *****************
  2058 ;; Defined at:
  2059 ;;		line 545 in file "mcc_generated_files/i2c1.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  2062 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  2063 ;;  length          1   30[COMRAM] unsigned char 
  2064 ;;  address         2   31[COMRAM] unsigned int 
  2065 ;;  pflag           2   33[COMRAM] PTR enum E7754
  2066 ;;		 -> I2C_M_write@status(1), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;Total ram usage:        7 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    4
  2085 ;; This function calls:
  2086 ;;		_I2C1_MasterTRBInsert
  2087 ;;		_I2C1_MasterWriteTRBBuild
  2088 ;; This function is called by:
  2089 ;;		_I2C_M_write
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text9
  2094  00180A                     __ptext9:
  2095                           	opt stack 0
  2096  00180A                     _I2C1_MasterWrite:
  2097                           	opt stack 22
  2098                           
  2099                           ;i2c1.c: 550: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  2100                           ;i2c1.c: 553: if (i2c1_object.trStatus.s.full != 1) {
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;incstack = 0
  2104  00180A  B02B               	btfsc	_i2c1_object+4,0,c
  2105  00180C  D01C               	goto	l2746
  2106                           
  2107                           ;i2c1.c: 554: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  2108  00180E  0EC6               	movlw	low I2C1_MasterWrite@trBlock
  2109  001810  6E14               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  2110  001812  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2111  001814  6E15               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  2112  001816  C01D  F016         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  2113  00181A  C01E  F017         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  2114  00181E  C01F  F018         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  2115  001822  C020  F019         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  2116  001826  C021  F01A         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  2117  00182A  EC96  F00C         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  2118                           
  2119                           ;i2c1.c: 555: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  2120  00182E  0EC6               	movlw	low I2C1_MasterWrite@trBlock
  2121  001830  6E14               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  2122  001832  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2123  001834  6E15               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  2124  001836  C022  F016         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  2125  00183A  C023  F017         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  2126  00183E  0E01               	movlw	1
  2127  001840  EC6A  F00B         	call	_I2C1_MasterTRBInsert
  2128                           
  2129                           ;i2c1.c: 556: } else {
  2130  001844  0012               	return	
  2131  001846                     l2746:
  2132                           
  2133                           ;i2c1.c: 557: *pflag = I2C1_MESSAGE_FAIL;
  2134  001846  C022  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  2135  00184A  C023  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  2136  00184E  0E01               	movlw	1
  2137  001850  6EDF               	movwf	indf2,c
  2138  001852  0012               	return	
  2139  001854                     __end_of_I2C1_MasterWrite:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           intcon	equ	0xFF2
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           indf2	equ	0xFDF
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  2156 ;; Defined at:
  2157 ;;		line 638 in file "mcc_generated_files/i2c1.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  ptrb            2   19[COMRAM] PTR struct .
  2160 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  2161 ;;  pdata           2   21[COMRAM] PTR unsigned char 
  2162 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  2163 ;;  length          1   23[COMRAM] unsigned char 
  2164 ;;  address         2   24[COMRAM] unsigned int 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        9 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_I2C1_MasterWrite
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text10
  2191  00192C                     __ptext10:
  2192                           	opt stack 0
  2193  00192C                     _I2C1_MasterWriteTRBBuild:
  2194                           	opt stack 22
  2195                           
  2196                           ;i2c1.c: 643: ptrb->address = address << 1;
  2197                           
  2198                           ;incstack = 0
  2199  00192C  C019  F01B         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  2200  001930  C01A  F01C         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  2201  001934  90D8               	bcf	status,0,c
  2202  001936  361B               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  2203  001938  361C               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  2204  00193A  C014  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  2205  00193E  C015  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  2206  001942  C01B  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  2207  001946  C01C  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  2208                           
  2209                           ;i2c1.c: 644: ptrb->length = length;
  2210  00194A  EE20 F002          	lfsr	2,2
  2211  00194E  5014               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2212  001950  26D9               	addwf	fsr2l,f,c
  2213  001952  5015               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2214  001954  22DA               	addwfc	fsr2h,f,c
  2215  001956  C018  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  2216                           
  2217                           ;i2c1.c: 645: ptrb->pbuffer = pdata;
  2218  00195A  EE20 F003          	lfsr	2,3
  2219  00195E  5014               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2220  001960  26D9               	addwf	fsr2l,f,c
  2221  001962  5015               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2222  001964  22DA               	addwfc	fsr2h,f,c
  2223  001966  C016  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  2224  00196A  C017  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  2225  00196E  0012               	return		;funcret
  2226  001970                     __end_of_I2C1_MasterWriteTRBBuild:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           tblptrh	equ	0xFF7
  2230                           tblptrl	equ	0xFF6
  2231                           tablat	equ	0xFF5
  2232                           prodh	equ	0xFF4
  2233                           prodl	equ	0xFF3
  2234                           intcon	equ	0xFF2
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           indf2	equ	0xFDF
  2238                           postinc2	equ	0xFDE
  2239                           postdec2	equ	0xFDD
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _I2C1_MasterTRBInsert *****************
  2245 ;; Defined at:
  2246 ;;		line 580 in file "mcc_generated_files/i2c1.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  count           1    wreg     unsigned char 
  2249 ;;  ptrb_list       2   19[COMRAM] PTR struct .
  2250 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  2251 ;;  pflag           2   21[COMRAM] PTR enum E7754
  2252 ;;		 -> I2C_M_write@status(1), 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  count           1   24[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;Total ram usage:        6 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    3
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_I2C1_MasterWrite
  2275 ;;		_I2C1_MasterRead
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text11
  2280  0016D4                     __ptext11:
  2281                           	opt stack 0
  2282  0016D4                     _I2C1_MasterTRBInsert:
  2283                           	opt stack 22
  2284                           
  2285                           ;incstack = 0
  2286                           ;I2C1_MasterTRBInsert@count stored from wreg
  2287  0016D4  6E19               	movwf	I2C1_MasterTRBInsert@count,c
  2288                           
  2289                           ;i2c1.c: 586: if (i2c1_object.trStatus.s.full != 1) {
  2290  0016D6  B02B               	btfsc	_i2c1_object+4,0,c
  2291  0016D8  D039               	goto	l2734
  2292                           
  2293                           ;i2c1.c: 587: *pflag = I2C1_MESSAGE_PENDING;
  2294  0016DA  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2295  0016DE  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2296  0016E2  0E02               	movlw	2
  2297  0016E4  6EDF               	movwf	indf2,c
  2298                           
  2299                           ;i2c1.c: 589: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  2300  0016E6  EE20 F001          	lfsr	2,1
  2301  0016EA  5027               	movf	_i2c1_object,w,c
  2302  0016EC  26D9               	addwf	fsr2l,f,c
  2303  0016EE  5028               	movf	_i2c1_object+1,w,c
  2304  0016F0  22DA               	addwfc	fsr2h,f,c
  2305  0016F2  C014  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  2306  0016F6  C015  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  2307                           
  2308                           ;i2c1.c: 590: i2c1_object.pTrTail->count = count;
  2309  0016FA  C027  FFD9         	movff	_i2c1_object,fsr2l
  2310  0016FE  C028  FFDA         	movff	_i2c1_object+1,fsr2h
  2311  001702  C019  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  2312                           
  2313                           ;i2c1.c: 591: i2c1_object.pTrTail->pTrFlag = pflag;
  2314  001706  EE20 F003          	lfsr	2,3
  2315  00170A  5027               	movf	_i2c1_object,w,c
  2316  00170C  26D9               	addwf	fsr2l,f,c
  2317  00170E  5028               	movf	_i2c1_object+1,w,c
  2318  001710  22DA               	addwfc	fsr2h,f,c
  2319  001712  C016  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  2320  001716  C017  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  2321                           
  2322                           ;i2c1.c: 592: i2c1_object.pTrTail++;
  2323  00171A  0E05               	movlw	5
  2324  00171C  2627               	addwf	_i2c1_object,f,c
  2325  00171E  0E00               	movlw	0
  2326  001720  2228               	addwfc	_i2c1_object+1,f,c
  2327                           
  2328                           ;i2c1.c: 595: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)) {
  2329  001722  0ED0               	movlw	low (_i2c1_tr_queue+5)
  2330  001724  1827               	xorwf	_i2c1_object,w,c
  2331  001726  E108               	bnz	l2730
  2332  001728  0E00               	movlw	high (_i2c1_tr_queue+5)
  2333  00172A  1828               	xorwf	_i2c1_object+1,w,c
  2334  00172C  A4D8               	btfss	status,2,c
  2335  00172E  D004               	goto	l2730
  2336                           
  2337                           ;i2c1.c: 597: i2c1_object.pTrTail = i2c1_tr_queue;
  2338  001730  0ECB               	movlw	low _i2c1_tr_queue
  2339  001732  6E27               	movwf	_i2c1_object,c
  2340  001734  0E00               	movlw	high _i2c1_tr_queue
  2341  001736  6E28               	movwf	_i2c1_object+1,c
  2342  001738                     l2730:
  2343                           
  2344                           ;i2c1.c: 598: }
  2345                           ;i2c1.c: 602: i2c1_object.trStatus.s.empty = 0;
  2346  001738  922B               	bcf	_i2c1_object+4,1,c
  2347                           
  2348                           ;i2c1.c: 605: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  2349  00173A  5027               	movf	_i2c1_object,w,c
  2350  00173C  1829               	xorwf	_i2c1_object+2,w,c
  2351  00173E  E10C               	bnz	l2736
  2352  001740  5028               	movf	_i2c1_object+1,w,c
  2353  001742  182A               	xorwf	_i2c1_object+3,w,c
  2354  001744  A4D8               	btfss	status,2,c
  2355  001746  D008               	goto	l2736
  2356                           
  2357                           ;i2c1.c: 607: i2c1_object.trStatus.s.full = 1;
  2358  001748  802B               	bsf	_i2c1_object+4,0,c
  2359                           
  2360                           ;i2c1.c: 608: }
  2361                           ;i2c1.c: 610: } else {
  2362  00174A  D006               	goto	l2736
  2363  00174C                     l2734:
  2364                           
  2365                           ;i2c1.c: 611: *pflag = I2C1_MESSAGE_FAIL;
  2366  00174C  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2367  001750  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2368  001754  0E01               	movlw	1
  2369  001756  6EDF               	movwf	indf2,c
  2370  001758                     l2736:
  2371                           
  2372                           ;i2c1.c: 612: }
  2373                           ;i2c1.c: 615: if (*pflag == I2C1_MESSAGE_PENDING) {
  2374  001758  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2375  00175C  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2376  001760  0E02               	movlw	2
  2377  001762  18DE               	xorwf	postinc2,w,c
  2378  001764  A4D8               	btfss	status,2,c
  2379  001766  0012               	return	
  2380  001768                     l2740:
  2381  001768  503E               	movf	_i2c1_state,w,c
  2382  00176A  A4D8               	btfss	status,2,c
  2383  00176C  D7FD               	goto	l2740
  2384                           
  2385                           ;i2c1.c: 617: {
  2386                           ;i2c1.c: 620: PIR1bits.SSP1IF = 1;
  2387  00176E  869E               	bsf	3998,3,c	;volatile
  2388  001770  0012               	return	
  2389  001772                     __end_of_I2C1_MasterTRBInsert:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _SYSTEM_Initialize *****************
  2408 ;; Defined at:
  2409 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    5
  2430 ;; This function calls:
  2431 ;;		_ADC_Initialize
  2432 ;;		_EUSART1_Initialize
  2433 ;;		_EUSART2_Initialize
  2434 ;;		_I2C1_Initialize
  2435 ;;		_INTERRUPT_Initialize
  2436 ;;		_OSCILLATOR_Initialize
  2437 ;;		_PIN_MANAGER_Initialize
  2438 ;;		_TMR0_Initialize
  2439 ;;		_TMR1_Initialize
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text12
  2446  001C92                     __ptext12:
  2447                           	opt stack 0
  2448  001C92                     _SYSTEM_Initialize:
  2449                           	opt stack 25
  2450                           
  2451                           ;mcc.c: 113: OSCILLATOR_Initialize();
  2452                           
  2453                           ;incstack = 0
  2454  001C92  ECCB  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  2455                           
  2456                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  2457  001C96  EC73  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2458                           
  2459                           ;mcc.c: 115: INTERRUPT_Initialize();
  2460  001C9A  ECB8  F00E         	call	_INTERRUPT_Initialize	;wreg free
  2461                           
  2462                           ;mcc.c: 116: ADC_Initialize();
  2463  001C9E  ECAD  F00E         	call	_ADC_Initialize	;wreg free
  2464                           
  2465                           ;mcc.c: 117: EUSART1_Initialize();
  2466  001CA2  EC2D  F00D         	call	_EUSART1_Initialize	;wreg free
  2467                           
  2468                           ;mcc.c: 118: EUSART2_Initialize();
  2469  001CA6  EC12  F00D         	call	_EUSART2_Initialize	;wreg free
  2470                           
  2471                           ;mcc.c: 119: I2C1_Initialize();
  2472  001CAA  ECC6  F00D         	call	_I2C1_Initialize	;wreg free
  2473                           
  2474                           ;mcc.c: 120: TMR0_Initialize();
  2475  001CAE  EC6D  F00E         	call	_TMR0_Initialize	;wreg free
  2476                           
  2477                           ;mcc.c: 121: TMR1_Initialize();
  2478  001CB2  EC5C  F00E         	call	_TMR1_Initialize	;wreg free
  2479  001CB6  0012               	return		;funcret
  2480  001CB8                     __end_of_SYSTEM_Initialize:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           indf2	equ	0xFDF
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _TMR1_Initialize *****************
  2499 ;; Defined at:
  2500 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    4
  2521 ;; This function calls:
  2522 ;;		_TMR1_StartTimer
  2523 ;; This function is called by:
  2524 ;;		_SYSTEM_Initialize
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text13
  2529  001CB8                     __ptext13:
  2530                           	opt stack 0
  2531  001CB8                     _TMR1_Initialize:
  2532                           	opt stack 25
  2533                           
  2534                           ;tmr1.c: 68: T1CON = 0x30;
  2535                           
  2536                           ;incstack = 0
  2537  001CB8  0E30               	movlw	48
  2538  001CBA  6ECD               	movwf	4045,c	;volatile
  2539                           
  2540                           ;tmr1.c: 71: T1GCON = 0x00;
  2541  001CBC  0E00               	movlw	0
  2542  001CBE  6ECC               	movwf	4044,c	;volatile
  2543                           
  2544                           ;tmr1.c: 74: TMR1H = 0x3C;
  2545  001CC0  0E3C               	movlw	60
  2546  001CC2  6ECF               	movwf	4047,c	;volatile
  2547                           
  2548                           ;tmr1.c: 77: TMR1L = 0xAF;
  2549  001CC4  0EAF               	movlw	175
  2550  001CC6  6ECE               	movwf	4046,c	;volatile
  2551                           
  2552                           ;tmr1.c: 80: timer1ReloadVal = TMR1;
  2553  001CC8  CFCE F04A          	movff	4046,_timer1ReloadVal	;volatile
  2554  001CCC  CFCF F04B          	movff	4047,_timer1ReloadVal+1	;volatile
  2555                           
  2556                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2557  001CD0  909E               	bcf	3998,0,c	;volatile
  2558                           
  2559                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2560  001CD2  809D               	bsf	3997,0,c	;volatile
  2561                           
  2562                           ;tmr1.c: 89: TMR1_StartTimer();
  2563  001CD4  ECDB  F00E         	call	_TMR1_StartTimer	;wreg free
  2564  001CD8  0012               	return		;funcret
  2565  001CDA                     __end_of_TMR1_Initialize:
  2566                           	opt stack 0
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           intcon	equ	0xFF2
  2574                           postinc0	equ	0xFEE
  2575                           wreg	equ	0xFE8
  2576                           indf2	equ	0xFDF
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _TMR1_StartTimer *****************
  2584 ;; Defined at:
  2585 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		None
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    3
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_TMR1_Initialize
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text14
  2614  001DB6                     __ptext14:
  2615                           	opt stack 0
  2616  001DB6                     _TMR1_StartTimer:
  2617                           	opt stack 25
  2618                           
  2619                           ;tmr1.c: 94: T1CONbits.TMR1ON = 1;
  2620                           
  2621                           ;incstack = 0
  2622  001DB6  80CD               	bsf	4045,0,c	;volatile
  2623  001DB8  0012               	return		;funcret
  2624  001DBA                     __end_of_TMR1_StartTimer:
  2625                           	opt stack 0
  2626                           tblptru	equ	0xFF8
  2627                           tblptrh	equ	0xFF7
  2628                           tblptrl	equ	0xFF6
  2629                           tablat	equ	0xFF5
  2630                           prodh	equ	0xFF4
  2631                           prodl	equ	0xFF3
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           indf2	equ	0xFDF
  2636                           postinc2	equ	0xFDE
  2637                           postdec2	equ	0xFDD
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function _TMR0_Initialize *****************
  2643 ;; Defined at:
  2644 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    4
  2665 ;; This function calls:
  2666 ;;		_TMR0_StartTimer
  2667 ;; This function is called by:
  2668 ;;		_SYSTEM_Initialize
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text15
  2673  001CDA                     __ptext15:
  2674                           	opt stack 0
  2675  001CDA                     _TMR0_Initialize:
  2676                           	opt stack 25
  2677                           
  2678                           ;tmr0.c: 93: T0CON = 0xD5;
  2679                           
  2680                           ;incstack = 0
  2681  001CDA  0ED5               	movlw	213
  2682  001CDC  6ED5               	movwf	4053,c	;volatile
  2683                           
  2684                           ;tmr0.c: 96: TMR0H = 0x80;
  2685  001CDE  0E80               	movlw	128
  2686  001CE0  6ED7               	movwf	4055,c	;volatile
  2687                           
  2688                           ;tmr0.c: 99: TMR0L = 0x00;
  2689  001CE2  0E00               	movlw	0
  2690  001CE4  6ED6               	movwf	4054,c	;volatile
  2691                           
  2692                           ;tmr0.c: 102: timer0ReloadVal8bit = 0x80;
  2693  001CE6  0E80               	movlw	128
  2694  001CE8  0100               	movlb	0	; () banked
  2695  001CEA  6FE9               	movwf	_timer0ReloadVal8bit& (0+255),b	;volatile
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;tmr0.c: 105: INTCONbits.TMR0IF = 0;
  2699  001CEC  94F2               	bcf	intcon,2,c	;volatile
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;tmr0.c: 108: INTCONbits.TMR0IE = 1;
  2703  001CEE  8AF2               	bsf	intcon,5,c	;volatile
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;tmr0.c: 111: TMR0_StartTimer();
  2707  001CF0  ECDD  F00E         	call	_TMR0_StartTimer	;wreg free
  2708  001CF4  0012               	return		;funcret
  2709  001CF6                     __end_of_TMR0_Initialize:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           intcon	equ	0xFF2
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           postdec2	equ	0xFDD
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _TMR0_StartTimer *****************
  2728 ;; Defined at:
  2729 ;;		line 114 in file "mcc_generated_files/tmr0.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    3
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_TMR0_Initialize
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text16
  2758  001DBA                     __ptext16:
  2759                           	opt stack 0
  2760  001DBA                     _TMR0_StartTimer:
  2761                           	opt stack 25
  2762                           
  2763                           ;tmr0.c: 116: T0CONbits.TMR0ON = 1;
  2764                           
  2765                           ;incstack = 0
  2766  001DBA  8ED5               	bsf	4053,7,c	;volatile
  2767  001DBC  0012               	return		;funcret
  2768  001DBE                     __end_of_TMR0_StartTimer:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           intcon	equ	0xFF2
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           indf2	equ	0xFDF
  2780                           postinc2	equ	0xFDE
  2781                           postdec2	equ	0xFDD
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _PIN_MANAGER_Initialize *****************
  2787 ;; Defined at:
  2788 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    3
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_SYSTEM_Initialize
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text17
  2817  0018E6                     __ptext17:
  2818                           	opt stack 0
  2819  0018E6                     _PIN_MANAGER_Initialize:
  2820                           	opt stack 26
  2821                           
  2822                           ;pin_manager.c: 51: LATA = 0x00;
  2823                           
  2824                           ;incstack = 0
  2825  0018E6  0E00               	movlw	0
  2826  0018E8  6E89               	movwf	3977,c	;volatile
  2827                           
  2828                           ;pin_manager.c: 52: TRISA = 0xFF;
  2829  0018EA  6892               	setf	3986,c	;volatile
  2830                           
  2831                           ;pin_manager.c: 53: ANSELA = 0x0C;
  2832  0018EC  0E0C               	movlw	12
  2833  0018EE  010F               	movlb	15	; () banked
  2834  0018F0  6F38               	movwf	56,b	;volatile
  2835                           
  2836                           ;pin_manager.c: 55: LATB = 0x00;
  2837  0018F2  0E00               	movlw	0
  2838  0018F4  6E8A               	movwf	3978,c	;volatile
  2839                           
  2840                           ; BSR set to: 15
  2841                           ;pin_manager.c: 56: TRISB = 0xFF;
  2842  0018F6  6893               	setf	3987,c	;volatile
  2843                           
  2844                           ;pin_manager.c: 57: ANSELB = 0x00;
  2845  0018F8  0E00               	movlw	0
  2846  0018FA  010F               	movlb	15	; () banked
  2847  0018FC  6F39               	movwf	57,b	;volatile
  2848                           
  2849                           ;pin_manager.c: 58: WPUB = 0x00;
  2850  0018FE  0E00               	movlw	0
  2851  001900  6E61               	movwf	3937,c	;volatile
  2852                           
  2853                           ;pin_manager.c: 60: LATC = 0x18;
  2854  001902  0E18               	movlw	24
  2855  001904  6E8B               	movwf	3979,c	;volatile
  2856                           
  2857                           ; BSR set to: 15
  2858                           ;pin_manager.c: 61: TRISC = 0xFF;
  2859  001906  6894               	setf	3988,c	;volatile
  2860                           
  2861                           ;pin_manager.c: 62: ANSELC = 0x00;
  2862  001908  0E00               	movlw	0
  2863  00190A  010F               	movlb	15	; () banked
  2864  00190C  6F3A               	movwf	58,b	;volatile
  2865                           
  2866                           ;pin_manager.c: 64: LATD = 0x00;
  2867  00190E  0E00               	movlw	0
  2868  001910  6E8C               	movwf	3980,c	;volatile
  2869                           
  2870                           ; BSR set to: 15
  2871                           ;pin_manager.c: 65: TRISD = 0xFF;
  2872  001912  6895               	setf	3989,c	;volatile
  2873                           
  2874                           ;pin_manager.c: 66: ANSELD = 0x00;
  2875  001914  0E00               	movlw	0
  2876  001916  010F               	movlb	15	; () banked
  2877  001918  6F3B               	movwf	59,b	;volatile
  2878                           
  2879                           ;pin_manager.c: 68: LATE = 0x00;
  2880  00191A  0E00               	movlw	0
  2881  00191C  6E8D               	movwf	3981,c	;volatile
  2882                           
  2883                           ;pin_manager.c: 69: TRISE = 0x07;
  2884  00191E  0E07               	movlw	7
  2885  001920  6E96               	movwf	3990,c	;volatile
  2886                           
  2887                           ;pin_manager.c: 70: ANSELE = 0x03;
  2888  001922  0E03               	movlw	3
  2889  001924  010F               	movlb	15	; () banked
  2890  001926  6F3C               	movwf	60,b	;volatile
  2891                           
  2892                           ; BSR set to: 15
  2893                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 0x01;
  2894  001928  8EF1               	bsf	intcon2,7,c	;volatile
  2895                           
  2896                           ; BSR set to: 15
  2897  00192A  0012               	return		;funcret
  2898  00192C                     __end_of_PIN_MANAGER_Initialize:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           intcon2	equ	0xFF1
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _OSCILLATOR_Initialize *****************
  2918 ;; Defined at:
  2919 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    3
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_SYSTEM_Initialize
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text18
  2948  001D96                     __ptext18:
  2949                           	opt stack 0
  2950  001D96                     _OSCILLATOR_Initialize:
  2951                           	opt stack 26
  2952                           
  2953                           ;mcc.c: 126: OSCCON = 0x60;
  2954                           
  2955                           ; BSR set to: 15
  2956                           ;incstack = 0
  2957  001D96  0E60               	movlw	96
  2958  001D98  6ED3               	movwf	4051,c	;volatile
  2959                           
  2960                           ;mcc.c: 128: OSCCON2 = 0x04;
  2961  001D9A  0E04               	movlw	4
  2962  001D9C  6ED2               	movwf	4050,c	;volatile
  2963                           
  2964                           ;mcc.c: 130: OSCTUNE = 0x40;
  2965  001D9E  0E40               	movlw	64
  2966  001DA0  6E9B               	movwf	3995,c	;volatile
  2967  001DA2  0012               	return		;funcret
  2968  001DA4                     __end_of_OSCILLATOR_Initialize:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           prodh	equ	0xFF4
  2975                           prodl	equ	0xFF3
  2976                           intcon	equ	0xFF2
  2977                           intcon2	equ	0xFF1
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           indf2	equ	0xFDF
  2981                           postinc2	equ	0xFDE
  2982                           postdec2	equ	0xFDD
  2983                           fsr2h	equ	0xFDA
  2984                           fsr2l	equ	0xFD9
  2985                           status	equ	0xFD8
  2986                           
  2987 ;; *************** function _INTERRUPT_Initialize *****************
  2988 ;; Defined at:
  2989 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		None
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    3
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_SYSTEM_Initialize
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text19
  3018  001D70                     __ptext19:
  3019                           	opt stack 0
  3020  001D70                     _INTERRUPT_Initialize:
  3021                           	opt stack 26
  3022                           
  3023                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3024                           
  3025                           ;incstack = 0
  3026  001D70  9ED0               	bcf	4048,7,c	;volatile
  3027                           
  3028                           ;interrupt_manager.c: 59: IPR1bits.SSP1IP = 0;
  3029  001D72  969F               	bcf	3999,3,c	;volatile
  3030                           
  3031                           ;interrupt_manager.c: 61: IPR2bits.BCL1IP = 0;
  3032  001D74  96A2               	bcf	4002,3,c	;volatile
  3033                           
  3034                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  3035  001D76  9A9F               	bcf	3999,5,c	;volatile
  3036                           
  3037                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  3038  001D78  989F               	bcf	3999,4,c	;volatile
  3039                           
  3040                           ;interrupt_manager.c: 67: IPR3bits.RC2IP = 0;
  3041  001D7A  9AA5               	bcf	4005,5,c	;volatile
  3042                           
  3043                           ;interrupt_manager.c: 69: IPR3bits.TX2IP = 0;
  3044  001D7C  98A5               	bcf	4005,4,c	;volatile
  3045                           
  3046                           ;interrupt_manager.c: 71: INTCON2bits.TMR0IP = 0;
  3047  001D7E  94F1               	bcf	intcon2,2,c	;volatile
  3048                           
  3049                           ;interrupt_manager.c: 73: IPR1bits.TMR1IP = 0;
  3050  001D80  909F               	bcf	3999,0,c	;volatile
  3051  001D82  0012               	return		;funcret
  3052  001D84                     __end_of_INTERRUPT_Initialize:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           intcon	equ	0xFF2
  3061                           intcon2	equ	0xFF1
  3062                           postinc0	equ	0xFEE
  3063                           wreg	equ	0xFE8
  3064                           indf2	equ	0xFDF
  3065                           postinc2	equ	0xFDE
  3066                           postdec2	equ	0xFDD
  3067                           fsr2h	equ	0xFDA
  3068                           fsr2l	equ	0xFD9
  3069                           status	equ	0xFD8
  3070                           
  3071 ;; *************** function _I2C1_Initialize *****************
  3072 ;; Defined at:
  3073 ;;		line 194 in file "mcc_generated_files/i2c1.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;Total ram usage:        0 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    3
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_SYSTEM_Initialize
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text20
  3102  001B8C                     __ptext20:
  3103                           	opt stack 0
  3104  001B8C                     _I2C1_Initialize:
  3105                           	opt stack 26
  3106                           
  3107                           ;i2c1.c: 195: i2c1_object.pTrHead = i2c1_tr_queue;
  3108                           
  3109                           ;incstack = 0
  3110  001B8C  0ECB               	movlw	low _i2c1_tr_queue
  3111  001B8E  6E29               	movwf	_i2c1_object+2,c
  3112  001B90  0E00               	movlw	high _i2c1_tr_queue
  3113  001B92  6E2A               	movwf	_i2c1_object+3,c
  3114                           
  3115                           ;i2c1.c: 196: i2c1_object.pTrTail = i2c1_tr_queue;
  3116  001B94  0ECB               	movlw	low _i2c1_tr_queue
  3117  001B96  6E27               	movwf	_i2c1_object,c
  3118  001B98  0E00               	movlw	high _i2c1_tr_queue
  3119  001B9A  6E28               	movwf	_i2c1_object+1,c
  3120                           
  3121                           ;i2c1.c: 197: i2c1_object.trStatus.s.empty = 1;
  3122  001B9C  822B               	bsf	_i2c1_object+4,1,c
  3123                           
  3124                           ;i2c1.c: 198: i2c1_object.trStatus.s.full = 0;
  3125  001B9E  902B               	bcf	_i2c1_object+4,0,c
  3126                           
  3127                           ;i2c1.c: 200: i2c1_object.i2cErrors = 0;
  3128  001BA0  0E00               	movlw	0
  3129  001BA2  6E2D               	movwf	_i2c1_object+6,c
  3130                           
  3131                           ;i2c1.c: 203: SSP1STAT = 0x00;
  3132  001BA4  0E00               	movlw	0
  3133  001BA6  6EC7               	movwf	4039,c	;volatile
  3134                           
  3135                           ;i2c1.c: 205: SSP1CON1 = 0x28;
  3136  001BA8  0E28               	movlw	40
  3137  001BAA  6EC6               	movwf	4038,c	;volatile
  3138                           
  3139                           ;i2c1.c: 207: SSP1CON3 = 0x00;
  3140  001BAC  0E00               	movlw	0
  3141  001BAE  6ECB               	movwf	4043,c	;volatile
  3142                           
  3143                           ;i2c1.c: 209: SSP1ADD = 0x4F;
  3144  001BB0  0E4F               	movlw	79
  3145  001BB2  6EC8               	movwf	4040,c	;volatile
  3146                           
  3147                           ;i2c1.c: 213: PIR1bits.SSP1IF = 0;
  3148  001BB4  969E               	bcf	3998,3,c	;volatile
  3149                           
  3150                           ;i2c1.c: 215: PIE1bits.SSP1IE = 1;
  3151  001BB6  869D               	bsf	3997,3,c	;volatile
  3152  001BB8  0012               	return		;funcret
  3153  001BBA                     __end_of_I2C1_Initialize:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           prodh	equ	0xFF4
  3160                           prodl	equ	0xFF3
  3161                           intcon	equ	0xFF2
  3162                           intcon2	equ	0xFF1
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           indf2	equ	0xFDF
  3166                           postinc2	equ	0xFDE
  3167                           postdec2	equ	0xFDD
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _EUSART2_Initialize *****************
  3173 ;; Defined at:
  3174 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    3
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_SYSTEM_Initialize
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text21
  3203  001A24                     __ptext21:
  3204                           	opt stack 0
  3205  001A24                     _EUSART2_Initialize:
  3206                           	opt stack 26
  3207                           
  3208                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
  3209                           
  3210                           ;incstack = 0
  3211  001A24  9AA3               	bcf	4003,5,c	;volatile
  3212                           
  3213                           ;eusart2.c: 79: PIE3bits.TX2IE = 0;
  3214  001A26  98A3               	bcf	4003,4,c	;volatile
  3215                           
  3216                           ;eusart2.c: 84: BAUD2CON = 0x48;
  3217  001A28  0E48               	movlw	72
  3218  001A2A  6E70               	movwf	3952,c	;volatile
  3219                           
  3220                           ;eusart2.c: 87: RC2STA = 0x90;
  3221  001A2C  0E90               	movlw	144
  3222  001A2E  6E71               	movwf	3953,c	;volatile
  3223                           
  3224                           ;eusart2.c: 90: TX2STA = 0x26;
  3225  001A30  0E26               	movlw	38
  3226  001A32  6E72               	movwf	3954,c	;volatile
  3227                           
  3228                           ;eusart2.c: 93: SPBRG2 = 0x76;
  3229  001A34  0E76               	movlw	118
  3230  001A36  6E75               	movwf	3957,c	;volatile
  3231                           
  3232                           ;eusart2.c: 96: SPBRGH2 = 0x00;
  3233  001A38  0E00               	movlw	0
  3234  001A3A  6E76               	movwf	3958,c	;volatile
  3235                           
  3236                           ;eusart2.c: 100: eusart2TxHead = 0;
  3237  001A3C  0E00               	movlw	0
  3238  001A3E  6E3C               	movwf	_eusart2TxHead,c
  3239                           
  3240                           ;eusart2.c: 101: eusart2TxTail = 0;
  3241  001A40  0E00               	movlw	0
  3242  001A42  6E3D               	movwf	_eusart2TxTail,c
  3243                           
  3244                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  3245  001A44  0E08               	movlw	8
  3246  001A46  0100               	movlb	0	; () banked
  3247  001A48  6FE8               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3248                           
  3249                           ;eusart2.c: 104: eusart2RxHead = 0;
  3250  001A4A  0E00               	movlw	0
  3251  001A4C  6E3A               	movwf	_eusart2RxHead,c
  3252                           
  3253                           ;eusart2.c: 105: eusart2RxTail = 0;
  3254  001A4E  0E00               	movlw	0
  3255  001A50  6E3B               	movwf	_eusart2RxTail,c
  3256                           
  3257                           ;eusart2.c: 106: eusart2RxCount = 0;
  3258  001A52  0E00               	movlw	0
  3259  001A54  6E39               	movwf	_eusart2RxCount,c	;volatile
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;eusart2.c: 109: PIE3bits.RC2IE = 1;
  3263  001A56  8AA3               	bsf	4003,5,c	;volatile
  3264                           
  3265                           ; BSR set to: 0
  3266  001A58  0012               	return		;funcret
  3267  001A5A                     __end_of_EUSART2_Initialize:
  3268                           	opt stack 0
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           intcon	equ	0xFF2
  3276                           intcon2	equ	0xFF1
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           indf2	equ	0xFDF
  3280                           postinc2	equ	0xFDE
  3281                           postdec2	equ	0xFDD
  3282                           fsr2h	equ	0xFDA
  3283                           fsr2l	equ	0xFD9
  3284                           status	equ	0xFD8
  3285                           
  3286 ;; *************** function _EUSART1_Initialize *****************
  3287 ;; Defined at:
  3288 ;;		line 101 in file "mcc_generated_files/eusart1.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    3
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_SYSTEM_Initialize
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text22
  3317  001A5A                     __ptext22:
  3318                           	opt stack 0
  3319  001A5A                     _EUSART1_Initialize:
  3320                           	opt stack 26
  3321                           
  3322                           ;eusart1.c: 103: PIE1bits.RC1IE = 0;
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;incstack = 0
  3326  001A5A  9A9D               	bcf	3997,5,c	;volatile
  3327                           
  3328                           ;eusart1.c: 104: PIE1bits.TX1IE = 0;
  3329  001A5C  989D               	bcf	3997,4,c	;volatile
  3330                           
  3331                           ;eusart1.c: 109: BAUD1CON = 0x48;
  3332  001A5E  0E48               	movlw	72
  3333  001A60  6EB8               	movwf	4024,c	;volatile
  3334                           
  3335                           ;eusart1.c: 112: RC1STA = 0x90;
  3336  001A62  0E90               	movlw	144
  3337  001A64  6EAB               	movwf	4011,c	;volatile
  3338                           
  3339                           ;eusart1.c: 115: TX1STA = 0x26;
  3340  001A66  0E26               	movlw	38
  3341  001A68  6EAC               	movwf	4012,c	;volatile
  3342                           
  3343                           ;eusart1.c: 118: SPBRG1 = 0x8A;
  3344  001A6A  0E8A               	movlw	138
  3345  001A6C  6EAF               	movwf	4015,c	;volatile
  3346                           
  3347                           ;eusart1.c: 121: SPBRGH1 = 0x00;
  3348  001A6E  0E00               	movlw	0
  3349  001A70  6EB0               	movwf	4016,c	;volatile
  3350                           
  3351                           ;eusart1.c: 125: eusart1TxHead = 0;
  3352  001A72  0E00               	movlw	0
  3353  001A74  6E37               	movwf	_eusart1TxHead,c
  3354                           
  3355                           ;eusart1.c: 126: eusart1TxTail = 0;
  3356  001A76  0E00               	movlw	0
  3357  001A78  6E38               	movwf	_eusart1TxTail,c
  3358                           
  3359                           ;eusart1.c: 127: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3360  001A7A  0E40               	movlw	64
  3361  001A7C  0100               	movlb	0	; () banked
  3362  001A7E  6FE7               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3363                           
  3364                           ;eusart1.c: 129: eusart1RxHead = 0;
  3365  001A80  0E00               	movlw	0
  3366  001A82  6E35               	movwf	_eusart1RxHead,c
  3367                           
  3368                           ;eusart1.c: 130: eusart1RxTail = 0;
  3369  001A84  0E00               	movlw	0
  3370  001A86  6E36               	movwf	_eusart1RxTail,c
  3371                           
  3372                           ;eusart1.c: 131: eusart1RxCount = 0;
  3373  001A88  0E00               	movlw	0
  3374  001A8A  6E34               	movwf	_eusart1RxCount,c	;volatile
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;eusart1.c: 134: PIE1bits.RC1IE = 1;
  3378  001A8C  8A9D               	bsf	3997,5,c	;volatile
  3379                           
  3380                           ; BSR set to: 0
  3381  001A8E  0012               	return		;funcret
  3382  001A90                     __end_of_EUSART1_Initialize:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           prodh	equ	0xFF4
  3389                           prodl	equ	0xFF3
  3390                           intcon	equ	0xFF2
  3391                           intcon2	equ	0xFF1
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           indf2	equ	0xFDF
  3395                           postinc2	equ	0xFDE
  3396                           postdec2	equ	0xFDD
  3397                           fsr2h	equ	0xFDA
  3398                           fsr2l	equ	0xFD9
  3399                           status	equ	0xFD8
  3400                           
  3401 ;; *************** function _ADC_Initialize *****************
  3402 ;; Defined at:
  3403 ;;		line 58 in file "mcc_generated_files/adc.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    3
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_SYSTEM_Initialize
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text23
  3432  001D5A                     __ptext23:
  3433                           	opt stack 0
  3434  001D5A                     _ADC_Initialize:
  3435                           	opt stack 26
  3436                           
  3437                           ;adc.c: 62: ADCON0 = 0x01;
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;incstack = 0
  3441  001D5A  0E01               	movlw	1
  3442  001D5C  6EC2               	movwf	4034,c	;volatile
  3443                           
  3444                           ;adc.c: 65: ADCON1 = 0x80;
  3445  001D5E  0E80               	movlw	128
  3446  001D60  6EC1               	movwf	4033,c	;volatile
  3447                           
  3448                           ;adc.c: 68: ADCON2 = 0x8e;
  3449  001D62  0E8E               	movlw	142
  3450  001D64  6EC0               	movwf	4032,c	;volatile
  3451                           
  3452                           ;adc.c: 71: ADRESL = 0x00;
  3453  001D66  0E00               	movlw	0
  3454  001D68  6EC3               	movwf	4035,c	;volatile
  3455                           
  3456                           ;adc.c: 74: ADRESH = 0x00;
  3457  001D6A  0E00               	movlw	0
  3458  001D6C  6EC4               	movwf	4036,c	;volatile
  3459  001D6E  0012               	return		;funcret
  3460  001D70                     __end_of_ADC_Initialize:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           intcon2	equ	0xFF1
  3470                           postinc0	equ	0xFEE
  3471                           wreg	equ	0xFE8
  3472                           indf2	equ	0xFDF
  3473                           postinc2	equ	0xFDE
  3474                           postdec2	equ	0xFDD
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           
  3479 ;; *************** function _EUSART_CompWrite *****************
  3480 ;; Defined at:
  3481 ;;		line 252 in file "main.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  c               1    wreg     unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  c               1   20[COMRAM] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;Total ram usage:        1 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    4
  3502 ;; This function calls:
  3503 ;;		_EUSART1_Write
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text24
  3510  001D84                     __ptext24:
  3511                           	opt stack 0
  3512  001D84                     _EUSART_CompWrite:
  3513                           	opt stack 26
  3514                           
  3515                           ;incstack = 0
  3516                           ;EUSART_CompWrite@c stored from wreg
  3517  001D84  6E15               	movwf	EUSART_CompWrite@c,c
  3518                           
  3519                           ;main.c: 253: EUSART1_Write(c);
  3520  001D86  5015               	movf	EUSART_CompWrite@c,w,c
  3521  001D88  EC2A  F00C         	call	_EUSART1_Write
  3522                           
  3523                           ;main.c: 254: EUSART1_Write(~c);
  3524  001D8C  5015               	movf	EUSART_CompWrite@c,w,c
  3525  001D8E  0AFF               	xorlw	255
  3526  001D90  EC2A  F00C         	call	_EUSART1_Write
  3527  001D94  0012               	return		;funcret
  3528  001D96                     __end_of_EUSART_CompWrite:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           prodh	equ	0xFF4
  3535                           prodl	equ	0xFF3
  3536                           intcon	equ	0xFF2
  3537                           intcon2	equ	0xFF1
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           indf2	equ	0xFDF
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _EUSART1_Write *****************
  3548 ;; Defined at:
  3549 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  txData          1    wreg     unsigned char 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  txData          1   19[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;Total ram usage:        1 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    3
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_EUSART_CompWrite
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text25
  3579  001854                     __ptext25:
  3580                           	opt stack 0
  3581  001854                     _EUSART1_Write:
  3582                           	opt stack 26
  3583                           
  3584                           ;incstack = 0
  3585                           ;EUSART1_Write@txData stored from wreg
  3586  001854  6E14               	movwf	EUSART1_Write@txData,c
  3587  001856                     l2216:
  3588  001856  0100               	movlb	0	; () banked
  3589  001858  51E7               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  3590  00185A  B4D8               	btfsc	status,2,c
  3591  00185C  D7FC               	goto	l2216
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;eusart1.c: 157: }
  3595                           ;eusart1.c: 159: if (0 == PIE1bits.TX1IE && waitCTS == 0) {
  3596  00185E  B89D               	btfsc	3997,4,c	;volatile
  3597  001860  D006               	goto	l537
  3598                           
  3599                           ; BSR set to: 0
  3600  001862  5042               	movf	_waitCTS,w,c	;volatile
  3601  001864  A4D8               	btfss	status,2,c
  3602  001866  D003               	goto	l537
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;eusart1.c: 160: TXREG1 = txData;
  3606  001868  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3607                           
  3608                           ;eusart1.c: 161: } else {
  3609  00186C  D013               	goto	l2232
  3610  00186E                     l537:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;eusart1.c: 162: PIE1bits.TX1IE = 0;
  3614  00186E  989D               	bcf	3997,4,c	;volatile
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;eusart1.c: 163: eusart1TxBuffer[eusart1TxHead++] = txData;
  3618  001870  5037               	movf	_eusart1TxHead,w,c
  3619  001872  0D01               	mullw	1
  3620  001874  0E40               	movlw	low _eusart1TxBuffer
  3621  001876  24F3               	addwf	prodl,w,c
  3622  001878  6ED9               	movwf	fsr2l,c
  3623  00187A  0E01               	movlw	high _eusart1TxBuffer
  3624  00187C  20F4               	addwfc	prodh,w,c
  3625  00187E  6EDA               	movwf	fsr2h,c
  3626  001880  C014  FFDF         	movff	EUSART1_Write@txData,indf2
  3627                           
  3628                           ; BSR set to: 0
  3629  001884  2A37               	incf	_eusart1TxHead,f,c
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;eusart1.c: 164: if (sizeof (eusart1TxBuffer) <= eusart1TxHead) {
  3633  001886  0E3F               	movlw	63
  3634  001888  6437               	cpfsgt	_eusart1TxHead,c
  3635  00188A  D002               	goto	l2230
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;eusart1.c: 165: eusart1TxHead = 0;
  3639  00188C  0E00               	movlw	0
  3640  00188E  6E37               	movwf	_eusart1TxHead,c
  3641  001890                     l2230:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;eusart1.c: 166: }
  3645                           ;eusart1.c: 167: eusart1TxBufferRemaining--;
  3646  001890  0100               	movlb	0	; () banked
  3647  001892  07E7               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3648  001894                     l2232:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;eusart1.c: 168: }
  3652                           ;eusart1.c: 169: if (waitCTS == 0)
  3653  001894  5042               	movf	_waitCTS,w,c	;volatile
  3654  001896  A4D8               	btfss	status,2,c
  3655  001898  0012               	return	
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;eusart1.c: 170: PIE1bits.TX1IE = 1;
  3659  00189A  889D               	bsf	3997,4,c	;volatile
  3660  00189C  0012               	return	
  3661  00189E                     __end_of_EUSART1_Write:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           prodh	equ	0xFF4
  3668                           prodl	equ	0xFF3
  3669                           intcon	equ	0xFF2
  3670                           intcon2	equ	0xFF1
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           indf2	equ	0xFDF
  3674                           postinc2	equ	0xFDE
  3675                           postdec2	equ	0xFDD
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _EUSART2_Read *****************
  3681 ;; Defined at:
  3682 ;;		line 112 in file "mcc_generated_files/eusart2.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  readValue       1   19[COMRAM] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      unsigned char 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    3
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text26
  3711  001A90                     __ptext26:
  3712                           	opt stack 0
  3713  001A90                     _EUSART2_Read:
  3714                           	opt stack 27
  3715                           
  3716                           ;eusart2.c: 113: uint8_t readValue = 0;
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;incstack = 0
  3720  001A90  0E00               	movlw	0
  3721  001A92  6E14               	movwf	EUSART2_Read@readValue,c
  3722  001A94                     l2480:
  3723  001A94  5039               	movf	_eusart2RxCount,w,c	;volatile
  3724  001A96  B4D8               	btfsc	status,2,c
  3725  001A98  D7FD               	goto	l2480
  3726                           
  3727                           ;eusart2.c: 116: }
  3728                           ;eusart2.c: 118: PIE3bits.RC2IE = 0;
  3729  001A9A  9AA3               	bcf	4003,5,c	;volatile
  3730                           
  3731                           ;eusart2.c: 120: readValue = eusart2RxBuffer[eusart2RxTail++];
  3732  001A9C  503B               	movf	_eusart2RxTail,w,c
  3733  001A9E  0D01               	mullw	1
  3734  001AA0  0E60               	movlw	low _eusart2RxBuffer
  3735  001AA2  24F3               	addwf	prodl,w,c
  3736  001AA4  6ED9               	movwf	fsr2l,c
  3737  001AA6  0E00               	movlw	high _eusart2RxBuffer
  3738  001AA8  20F4               	addwfc	prodh,w,c
  3739  001AAA  6EDA               	movwf	fsr2h,c
  3740  001AAC  50DF               	movf	indf2,w,c
  3741  001AAE  6E14               	movwf	EUSART2_Read@readValue,c
  3742  001AB0  2A3B               	incf	_eusart2RxTail,f,c
  3743                           
  3744                           ;eusart2.c: 121: if (sizeof (eusart2RxBuffer) <= eusart2RxTail) {
  3745  001AB2  0E3F               	movlw	63
  3746  001AB4  643B               	cpfsgt	_eusart2RxTail,c
  3747  001AB6  D002               	goto	l2490
  3748                           
  3749                           ;eusart2.c: 122: eusart2RxTail = 0;
  3750  001AB8  0E00               	movlw	0
  3751  001ABA  6E3B               	movwf	_eusart2RxTail,c
  3752  001ABC                     l2490:
  3753                           
  3754                           ;eusart2.c: 123: }
  3755                           ;eusart2.c: 124: eusart2RxCount--;
  3756  001ABC  0639               	decf	_eusart2RxCount,f,c	;volatile
  3757                           
  3758                           ;eusart2.c: 125: PIE3bits.RC2IE = 1;
  3759  001ABE  8AA3               	bsf	4003,5,c	;volatile
  3760                           
  3761                           ;eusart2.c: 127: return readValue;
  3762  001AC0  5014               	movf	EUSART2_Read@readValue,w,c
  3763  001AC2  0012               	return	
  3764  001AC4                     __end_of_EUSART2_Read:
  3765                           	opt stack 0
  3766                           tblptru	equ	0xFF8
  3767                           tblptrh	equ	0xFF7
  3768                           tblptrl	equ	0xFF6
  3769                           tablat	equ	0xFF5
  3770                           prodh	equ	0xFF4
  3771                           prodl	equ	0xFF3
  3772                           intcon	equ	0xFF2
  3773                           intcon2	equ	0xFF1
  3774                           postinc0	equ	0xFEE
  3775                           wreg	equ	0xFE8
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           postdec2	equ	0xFDD
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function _EUSART1_Read *****************
  3784 ;; Defined at:
  3785 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  readValue       1   19[COMRAM] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      unsigned char 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:        1 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    3
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_main
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text27
  3814  001AC4                     __ptext27:
  3815                           	opt stack 0
  3816  001AC4                     _EUSART1_Read:
  3817                           	opt stack 27
  3818                           
  3819                           ;eusart1.c: 138: uint8_t readValue = 0;
  3820                           
  3821                           ;incstack = 0
  3822  001AC4  0E00               	movlw	0
  3823  001AC6  6E14               	movwf	EUSART1_Read@readValue,c
  3824  001AC8                     l2500:
  3825  001AC8  5034               	movf	_eusart1RxCount,w,c	;volatile
  3826  001ACA  B4D8               	btfsc	status,2,c
  3827  001ACC  D7FD               	goto	l2500
  3828                           
  3829                           ;eusart1.c: 141: }
  3830                           ;eusart1.c: 143: PIE1bits.RC1IE = 0;
  3831  001ACE  9A9D               	bcf	3997,5,c	;volatile
  3832                           
  3833                           ;eusart1.c: 145: readValue = eusart1RxBuffer[eusart1RxTail++];
  3834  001AD0  5036               	movf	_eusart1RxTail,w,c
  3835  001AD2  0D01               	mullw	1
  3836  001AD4  0E00               	movlw	low _eusart1RxBuffer
  3837  001AD6  24F3               	addwf	prodl,w,c
  3838  001AD8  6ED9               	movwf	fsr2l,c
  3839  001ADA  0E01               	movlw	high _eusart1RxBuffer
  3840  001ADC  20F4               	addwfc	prodh,w,c
  3841  001ADE  6EDA               	movwf	fsr2h,c
  3842  001AE0  50DF               	movf	indf2,w,c
  3843  001AE2  6E14               	movwf	EUSART1_Read@readValue,c
  3844  001AE4  2A36               	incf	_eusart1RxTail,f,c
  3845                           
  3846                           ;eusart1.c: 146: if (sizeof (eusart1RxBuffer) <= eusart1RxTail) {
  3847  001AE6  0E3F               	movlw	63
  3848  001AE8  6436               	cpfsgt	_eusart1RxTail,c
  3849  001AEA  D002               	goto	l2510
  3850                           
  3851                           ;eusart1.c: 147: eusart1RxTail = 0;
  3852  001AEC  0E00               	movlw	0
  3853  001AEE  6E36               	movwf	_eusart1RxTail,c
  3854  001AF0                     l2510:
  3855                           
  3856                           ;eusart1.c: 148: }
  3857                           ;eusart1.c: 149: eusart1RxCount--;
  3858  001AF0  0634               	decf	_eusart1RxCount,f,c	;volatile
  3859                           
  3860                           ;eusart1.c: 150: PIE1bits.RC1IE = 1;
  3861  001AF2  8A9D               	bsf	3997,5,c	;volatile
  3862                           
  3863                           ;eusart1.c: 152: return readValue;
  3864  001AF4  5014               	movf	EUSART1_Read@readValue,w,c
  3865  001AF6  0012               	return	
  3866  001AF8                     __end_of_EUSART1_Read:
  3867                           	opt stack 0
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           intcon	equ	0xFF2
  3875                           intcon2	equ	0xFF1
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           indf2	equ	0xFDF
  3879                           postinc2	equ	0xFDE
  3880                           postdec2	equ	0xFDD
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _ADC_GetConversion *****************
  3886 ;; Defined at:
  3887 ;;		line 99 in file "mcc_generated_files/adc.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  channel         1    wreg     enum E7753
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  channel         1   23[COMRAM] enum E7753
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  2   19[COMRAM] unsigned int 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:        5 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    3
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text28
  3916  001B5C                     __ptext28:
  3917                           	opt stack 0
  3918  001B5C                     _ADC_GetConversion:
  3919                           	opt stack 27
  3920                           
  3921                           ;incstack = 0
  3922                           ;ADC_GetConversion@channel stored from wreg
  3923  001B5C  6E18               	movwf	ADC_GetConversion@channel,c
  3924                           
  3925                           ;adc.c: 101: ADCON0bits.CHS = channel;
  3926  001B5E  C018  F016         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3927  001B62  4616               	rlncf	??_ADC_GetConversion,f,c
  3928  001B64  4616               	rlncf	??_ADC_GetConversion,f,c
  3929  001B66  50C2               	movf	4034,w,c	;volatile
  3930  001B68  1816               	xorwf	??_ADC_GetConversion,w,c
  3931  001B6A  0B83               	andlw	-125
  3932  001B6C  1816               	xorwf	??_ADC_GetConversion,w,c
  3933  001B6E  6EC2               	movwf	4034,c	;volatile
  3934                           
  3935                           ;adc.c: 104: ADCON0bits.ADON = 1;
  3936  001B70  80C2               	bsf	4034,0,c	;volatile
  3937                           
  3938                           ;adc.c: 107: ADCON0bits.GO_nDONE = 1;
  3939  001B72  82C2               	bsf	4034,1,c	;volatile
  3940  001B74                     l27:
  3941  001B74  B2C2               	btfsc	4034,1,c	;volatile
  3942  001B76  D7FE               	goto	l27
  3943                           
  3944                           ;adc.c: 111: }
  3945                           ;adc.c: 114: return ((ADRESH << 8) + ADRESL);
  3946  001B78  50C4               	movf	4036,w,c	;volatile
  3947  001B7A  6E17               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  3948  001B7C  6A16               	clrf	??_ADC_GetConversion& (0+255),c
  3949  001B7E  50C3               	movf	4035,w,c	;volatile
  3950  001B80  2416               	addwf	??_ADC_GetConversion,w,c
  3951  001B82  6E14               	movwf	?_ADC_GetConversion,c
  3952  001B84  0E00               	movlw	0
  3953  001B86  2017               	addwfc	??_ADC_GetConversion+1,w,c
  3954  001B88  6E15               	movwf	?_ADC_GetConversion+1,c
  3955  001B8A  0012               	return	
  3956  001B8C                     __end_of_ADC_GetConversion:
  3957                           	opt stack 0
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           intcon	equ	0xFF2
  3965                           intcon2	equ	0xFF1
  3966                           postinc0	equ	0xFEE
  3967                           wreg	equ	0xFE8
  3968                           indf2	equ	0xFDF
  3969                           postinc2	equ	0xFDE
  3970                           postdec2	equ	0xFDD
  3971                           fsr2h	equ	0xFDA
  3972                           fsr2l	equ	0xFD9
  3973                           status	equ	0xFD8
  3974                           
  3975 ;; *************** function _INTERRUPT_InterruptManager *****************
  3976 ;; Defined at:
  3977 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:       14 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    2
  3998 ;; This function calls:
  3999 ;;		_EUSART1_Receive_ISR
  4000 ;;		_EUSART1_Transmit_ISR
  4001 ;;		_EUSART2_Receive_ISR
  4002 ;;		_EUSART2_Transmit_ISR
  4003 ;;		_I2C1_BusCollisionISR
  4004 ;;		_I2C1_ISR
  4005 ;;		_TMR0_ISR
  4006 ;;		_TMR1_ISR
  4007 ;; This function is called by:
  4008 ;;		Interrupt level 2
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	intcode
  4013  000008                     __pintcode:
  4014                           	opt stack 0
  4015  000008                     _INTERRUPT_InterruptManager:
  4016                           	opt stack 22
  4017                           
  4018                           ;incstack = 0
  4019  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4020  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  4021  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4022  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4023  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4024  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4025  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4026  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4027  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4028  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4029  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4030  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4031  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4032  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4033  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4034                           
  4035                           ;interrupt_manager.c: 78: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  4036  000042  B69D               	btfsc	3997,3,c	;volatile
  4037  000044  A69E               	btfss	3998,3,c	;volatile
  4038  000046  D003               	goto	i2l113
  4039                           
  4040                           ;interrupt_manager.c: 79: I2C1_ISR();
  4041  000048  ECF9  F009         	call	_I2C1_ISR	;wreg free
  4042                           
  4043                           ;interrupt_manager.c: 80: } else if (PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1) {
  4044  00004C  D029               	goto	i2l129
  4045  00004E                     i2l113:
  4046  00004E  B6A0               	btfsc	4000,3,c	;volatile
  4047  000050  A6A1               	btfss	4001,3,c	;volatile
  4048  000052  D003               	goto	i2l115
  4049                           
  4050                           ;interrupt_manager.c: 81: I2C1_BusCollisionISR();
  4051  000054  ECDF  F00E         	call	_I2C1_BusCollisionISR	;wreg free
  4052                           
  4053                           ;interrupt_manager.c: 82: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  4054  000058  D023               	goto	i2l129
  4055  00005A                     i2l115:
  4056  00005A  BA9D               	btfsc	3997,5,c	;volatile
  4057  00005C  AA9E               	btfss	3998,5,c	;volatile
  4058  00005E  D003               	goto	i2l117
  4059                           
  4060                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  4061  000060  EC09  F00E         	call	_EUSART1_Receive_ISR	;wreg free
  4062                           
  4063                           ;interrupt_manager.c: 84: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  4064  000064  D01D               	goto	i2l129
  4065  000066                     i2l117:
  4066  000066  B89D               	btfsc	3997,4,c	;volatile
  4067  000068  A89E               	btfss	3998,4,c	;volatile
  4068  00006A  D003               	goto	i2l119
  4069                           
  4070                           ;interrupt_manager.c: 85: EUSART1_Transmit_ISR();
  4071  00006C  EC4F  F00C         	call	_EUSART1_Transmit_ISR	;wreg free
  4072                           
  4073                           ;interrupt_manager.c: 86: } else if (PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1) {
  4074  000070  D017               	goto	i2l129
  4075  000072                     i2l119:
  4076  000072  BAA3               	btfsc	4003,5,c	;volatile
  4077  000074  AAA4               	btfss	4004,5,c	;volatile
  4078  000076  D003               	goto	i2l121
  4079                           
  4080                           ;interrupt_manager.c: 87: EUSART2_Receive_ISR();
  4081  000078  ECF3  F00D         	call	_EUSART2_Receive_ISR	;wreg free
  4082                           
  4083                           ;interrupt_manager.c: 88: } else if (PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1) {
  4084  00007C  D011               	goto	i2l129
  4085  00007E                     i2l121:
  4086  00007E  B8A3               	btfsc	4003,4,c	;volatile
  4087  000080  A8A4               	btfss	4004,4,c	;volatile
  4088  000082  D003               	goto	i2l123
  4089                           
  4090                           ;interrupt_manager.c: 89: EUSART2_Transmit_ISR();
  4091  000084  EC95  F00D         	call	_EUSART2_Transmit_ISR	;wreg free
  4092                           
  4093                           ;interrupt_manager.c: 90: } else if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  4094  000088  D00B               	goto	i2l129
  4095  00008A                     i2l123:
  4096  00008A  BAF2               	btfsc	intcon,5,c	;volatile
  4097  00008C  A4F2               	btfss	intcon,2,c	;volatile
  4098  00008E  D003               	goto	i2l125
  4099                           
  4100                           ;interrupt_manager.c: 91: TMR0_ISR();
  4101  000090  ECD2  F00E         	call	_TMR0_ISR	;wreg free
  4102                           
  4103                           ;interrupt_manager.c: 92: } else if (PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  4104  000094  D005               	goto	i2l129
  4105  000096                     i2l125:
  4106  000096  B09D               	btfsc	3997,0,c	;volatile
  4107  000098  A09E               	btfss	3998,0,c	;volatile
  4108  00009A  D002               	goto	i2l129
  4109                           
  4110                           ;interrupt_manager.c: 93: TMR1_ISR();
  4111  00009C  ECDD  F00D         	call	_TMR1_ISR	;wreg free
  4112  0000A0                     i2l129:
  4113  0000A0  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4114  0000A4  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4115  0000A8  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4116  0000AC  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4117  0000B0  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4118  0000B4  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4119  0000B8  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4120  0000BC  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4121  0000C0  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4122  0000C4  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4123  0000C8  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4124  0000CC  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4125  0000D0  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4126  0000D4  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4127  0000D8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4128  0000DA  0011               	retfie		f
  4129  0000DC                     __end_of_INTERRUPT_InterruptManager:
  4130                           	opt stack 0
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           intcon	equ	0xFF2
  4140                           intcon2	equ	0xFF1
  4141                           postinc0	equ	0xFEE
  4142                           fsr0h	equ	0xFEA
  4143                           fsr0l	equ	0xFE9
  4144                           wreg	equ	0xFE8
  4145                           fsr1h	equ	0xFE2
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _TMR1_ISR *****************
  4155 ;; Defined at:
  4156 ;;		line 147 in file "mcc_generated_files/tmr1.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    1
  4177 ;; This function calls:
  4178 ;;		_TMR1_CallBack
  4179 ;; This function is called by:
  4180 ;;		_INTERRUPT_InterruptManager
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text30
  4185  001BBA                     __ptext30:
  4186                           	opt stack 0
  4187  001BBA                     _TMR1_ISR:
  4188                           	opt stack 22
  4189                           
  4190                           ;tmr1.c: 148: static volatile unsigned int CountCallBack = 0;
  4191                           ;tmr1.c: 151: PIR1bits.TMR1IF = 0;
  4192                           
  4193                           ;incstack = 0
  4194  001BBA  909E               	bcf	3998,0,c	;volatile
  4195                           
  4196                           ;tmr1.c: 154: TMR1H = (timer1ReloadVal >> 8);
  4197  001BBC  504B               	movf	_timer1ReloadVal+1,w,c	;volatile
  4198  001BBE  6ECF               	movwf	4047,c	;volatile
  4199                           
  4200                           ;tmr1.c: 155: TMR1L = (uint8_t) timer1ReloadVal;
  4201  001BC0  C04A  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4202                           
  4203                           ;tmr1.c: 158: if (++CountCallBack >= 1) {
  4204  001BC4  0100               	movlb	0	; () banked
  4205  001BC6  4BBE               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  4206  001BC8  2BBF               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  4207  001BCA  0100               	movlb	0	; () banked
  4208  001BCC  51BE               	movf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  4209  001BCE  0100               	movlb	0	; () banked
  4210  001BD0  11BF               	iorwf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  4211  001BD2  B4D8               	btfsc	status,2,c
  4212  001BD4  0012               	return	
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;tmr1.c: 160: TMR1_CallBack();
  4216  001BD6  ECD8  F00E         	call	_TMR1_CallBack	;wreg free
  4217                           
  4218                           ;tmr1.c: 163: CountCallBack = 0;
  4219  001BDA  0E00               	movlw	0
  4220  001BDC  0100               	movlb	0	; () banked
  4221  001BDE  6FBF               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  4222  001BE0  0E00               	movlw	0
  4223  001BE2  6FBE               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  4224  001BE4  0012               	return	
  4225  001BE6                     __end_of_TMR1_ISR:
  4226                           	opt stack 0
  4227                           pclatu	equ	0xFFB
  4228                           pclath	equ	0xFFA
  4229                           tblptru	equ	0xFF8
  4230                           tblptrh	equ	0xFF7
  4231                           tblptrl	equ	0xFF6
  4232                           tablat	equ	0xFF5
  4233                           prodh	equ	0xFF4
  4234                           prodl	equ	0xFF3
  4235                           intcon	equ	0xFF2
  4236                           intcon2	equ	0xFF1
  4237                           postinc0	equ	0xFEE
  4238                           fsr0h	equ	0xFEA
  4239                           fsr0l	equ	0xFE9
  4240                           wreg	equ	0xFE8
  4241                           fsr1h	equ	0xFE2
  4242                           fsr1l	equ	0xFE1
  4243                           indf2	equ	0xFDF
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function _TMR1_CallBack *****************
  4251 ;; Defined at:
  4252 ;;		line 168 in file "mcc_generated_files/tmr1.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_TMR1_ISR
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text31
  4280  001DB0                     __ptext31:
  4281                           	opt stack 0
  4282  001DB0                     _TMR1_CallBack:
  4283                           	opt stack 22
  4284                           
  4285                           ;tmr1.c: 170: tmrFlag = 1;
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;incstack = 0
  4289  001DB0  0E01               	movlw	1
  4290  001DB2  6E41               	movwf	_tmrFlag,c
  4291  001DB4  0012               	return		;funcret
  4292  001DB6                     __end_of_TMR1_CallBack:
  4293                           	opt stack 0
  4294                           pclatu	equ	0xFFB
  4295                           pclath	equ	0xFFA
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodh	equ	0xFF4
  4301                           prodl	equ	0xFF3
  4302                           intcon	equ	0xFF2
  4303                           intcon2	equ	0xFF1
  4304                           postinc0	equ	0xFEE
  4305                           fsr0h	equ	0xFEA
  4306                           fsr0l	equ	0xFE9
  4307                           wreg	equ	0xFE8
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function _TMR0_ISR *****************
  4318 ;; Defined at:
  4319 ;;		line 143 in file "mcc_generated_files/tmr0.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    1
  4340 ;; This function calls:
  4341 ;;		_TMR0_CallBack
  4342 ;; This function is called by:
  4343 ;;		_INTERRUPT_InterruptManager
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text32
  4348  001DA4                     __ptext32:
  4349                           	opt stack 0
  4350  001DA4                     _TMR0_ISR:
  4351                           	opt stack 22
  4352                           
  4353                           ;tmr0.c: 146: INTCONbits.TMR0IF = 0;
  4354                           
  4355                           ;incstack = 0
  4356  001DA4  94F2               	bcf	intcon,2,c	;volatile
  4357                           
  4358                           ;tmr0.c: 149: TMR0L = timer0ReloadVal8bit;
  4359  001DA6  C0E9  FFD6         	movff	_timer0ReloadVal8bit,4054	;volatile
  4360                           
  4361                           ;tmr0.c: 153: TMR0_CallBack();
  4362  001DAA  EC7B  F00E         	call	_TMR0_CallBack	;wreg free
  4363  001DAE  0012               	return		;funcret
  4364  001DB0                     __end_of_TMR0_ISR:
  4365                           	opt stack 0
  4366                           pclatu	equ	0xFFB
  4367                           pclath	equ	0xFFA
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           prodh	equ	0xFF4
  4373                           prodl	equ	0xFF3
  4374                           intcon	equ	0xFF2
  4375                           intcon2	equ	0xFF1
  4376                           postinc0	equ	0xFEE
  4377                           fsr0h	equ	0xFEA
  4378                           fsr0l	equ	0xFE9
  4379                           wreg	equ	0xFE8
  4380                           fsr1h	equ	0xFE2
  4381                           fsr1l	equ	0xFE1
  4382                           indf2	equ	0xFDF
  4383                           postinc2	equ	0xFDE
  4384                           postdec2	equ	0xFDD
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _TMR0_CallBack *****************
  4390 ;; Defined at:
  4391 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        0 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_TMR0_ISR
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text33
  4419  001CF6                     __ptext33:
  4420                           	opt stack 0
  4421  001CF6                     _TMR0_CallBack:
  4422                           	opt stack 22
  4423                           
  4424                           ;tmr0.c: 161: if (waitCTS == 1) {
  4425                           
  4426                           ;incstack = 0
  4427  001CF6  0442               	decf	_waitCTS,w,c
  4428  001CF8  A4D8               	btfss	status,2,c
  4429  001CFA  0012               	return	
  4430                           
  4431                           ;tmr0.c: 162: if (PORTAbits.RA7 == 0) {
  4432  001CFC  BE80               	btfsc	3968,7,c	;volatile
  4433  001CFE  0012               	return	
  4434                           
  4435                           ;tmr0.c: 163: subdata.IO_LED = waitCTS = 0;
  4436  001D00  0E00               	movlw	0
  4437  001D02  6E42               	movwf	_waitCTS,c
  4438  001D04  B042               	btfsc	_waitCTS,0,c
  4439  001D06  D002               	bra	i2u144_45
  4440  001D08  9E40               	bcf	_subdata,7,c
  4441  001D0A  D001               	bra	i2u144_46
  4442  001D0C                     i2u144_45:
  4443  001D0C  8E40               	bsf	_subdata,7,c
  4444  001D0E                     i2u144_46:
  4445                           
  4446                           ;tmr0.c: 164: PIE1bits.TXIE = 1;
  4447  001D0E  889D               	bsf	3997,4,c	;volatile
  4448  001D10  0012               	return	
  4449  001D12                     __end_of_TMR0_CallBack:
  4450                           	opt stack 0
  4451                           pclatu	equ	0xFFB
  4452                           pclath	equ	0xFFA
  4453                           tblptru	equ	0xFF8
  4454                           tblptrh	equ	0xFF7
  4455                           tblptrl	equ	0xFF6
  4456                           tablat	equ	0xFF5
  4457                           prodh	equ	0xFF4
  4458                           prodl	equ	0xFF3
  4459                           intcon	equ	0xFF2
  4460                           intcon2	equ	0xFF1
  4461                           postinc0	equ	0xFEE
  4462                           fsr0h	equ	0xFEA
  4463                           fsr0l	equ	0xFE9
  4464                           wreg	equ	0xFE8
  4465                           fsr1h	equ	0xFE2
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           postdec2	equ	0xFDD
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function _I2C1_ISR *****************
  4475 ;; Defined at:
  4476 ;;		line 226 in file "mcc_generated_files/i2c1.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    1
  4497 ;; This function calls:
  4498 ;;		_I2C1_FunctionComplete
  4499 ;;		_I2C1_Stop
  4500 ;; This function is called by:
  4501 ;;		_INTERRUPT_InterruptManager
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text34
  4506  0013F2                     __ptext34:
  4507                           	opt stack 0
  4508  0013F2                     _I2C1_ISR:
  4509                           	opt stack 22
  4510                           
  4511                           ;i2c1.c: 228: static uint8_t *pi2c_buf_ptr;
  4512                           ;i2c1.c: 229: static uint16_t i2c_address = 0;
  4513                           ;i2c1.c: 230: static uint8_t i2c_bytes_left = 0;
  4514                           ;i2c1.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  4515                           ;i2c1.c: 233: PIR1bits.SSP1IF = 0;
  4516                           
  4517                           ;incstack = 0
  4518  0013F2  969E               	bcf	3998,3,c	;volatile
  4519                           
  4520                           ;i2c1.c: 237: if (SSP1CON1bits.WCOL) {
  4521  0013F4  AEC6               	btfss	4038,7,c	;volatile
  4522  0013F6  D0FB               	goto	i2l2388
  4523                           
  4524                           ;i2c1.c: 239: SSP1CON1bits.WCOL = 0;
  4525  0013F8  9EC6               	bcf	4038,7,c	;volatile
  4526                           
  4527                           ;i2c1.c: 240: i2c1_state = S_MASTER_IDLE;
  4528  0013FA  0E00               	movlw	0
  4529  0013FC  6E3E               	movwf	_i2c1_state,c
  4530                           
  4531                           ;i2c1.c: 241: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  4532  0013FE  EE20 F003          	lfsr	2,3
  4533  001402  502E               	movf	_p_i2c1_current,w,c
  4534  001404  26D9               	addwf	fsr2l,f,c
  4535  001406  502F               	movf	_p_i2c1_current+1,w,c
  4536  001408  22DA               	addwfc	fsr2h,f,c
  4537  00140A  CFDE F004          	movff	postinc2,??_I2C1_ISR
  4538  00140E  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
  4539  001412  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
  4540  001416  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  4541  00141A  0E01               	movlw	1
  4542  00141C  6EDF               	movwf	indf2,c
  4543                           
  4544                           ;i2c1.c: 244: p_i2c1_current = (0);
  4545  00141E  0E00               	movlw	0
  4546  001420  6E2E               	movwf	_p_i2c1_current,c
  4547  001422  0E00               	movlw	0
  4548  001424  6E2F               	movwf	_p_i2c1_current+1,c
  4549                           
  4550                           ;i2c1.c: 246: return;
  4551  001426  0012               	return	
  4552  001428                     i2l330:
  4553                           
  4554                           ;i2c1.c: 253: if (i2c1_object.trStatus.s.empty != 1) {
  4555  001428  B22B               	btfsc	_i2c1_object+4,1,c
  4556  00142A  0012               	return	
  4557                           
  4558                           ;i2c1.c: 255: p_i2c1_current = i2c1_object.pTrHead;
  4559  00142C  C029  F02E         	movff	_i2c1_object+2,_p_i2c1_current
  4560  001430  C02A  F02F         	movff	_i2c1_object+3,_p_i2c1_current+1
  4561                           
  4562                           ;i2c1.c: 256: i2c1_trb_count = i2c1_object.pTrHead->count;
  4563  001434  C029  FFD9         	movff	_i2c1_object+2,fsr2l
  4564  001438  C02A  FFDA         	movff	_i2c1_object+3,fsr2h
  4565  00143C  50DF               	movf	indf2,w,c
  4566  00143E  6E3F               	movwf	_i2c1_trb_count,c
  4567                           
  4568                           ;i2c1.c: 257: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  4569  001440  EE20 F001          	lfsr	2,1
  4570  001444  5029               	movf	_i2c1_object+2,w,c
  4571  001446  26D9               	addwf	fsr2l,f,c
  4572  001448  502A               	movf	_i2c1_object+3,w,c
  4573  00144A  22DA               	addwfc	fsr2h,f,c
  4574  00144C  CFDE F030          	movff	postinc2,_p_i2c1_trb_current
  4575  001450  CFDD F031          	movff	postdec2,_p_i2c1_trb_current+1
  4576                           
  4577                           ;i2c1.c: 259: i2c1_object.pTrHead++;
  4578  001454  0E05               	movlw	5
  4579  001456  2629               	addwf	_i2c1_object+2,f,c
  4580  001458  0E00               	movlw	0
  4581  00145A  222A               	addwfc	_i2c1_object+3,f,c
  4582                           
  4583                           ;i2c1.c: 262: if (i2c1_object.pTrHead == (i2c1_tr_queue + 1)) {
  4584  00145C  0ED0               	movlw	low (_i2c1_tr_queue+5)
  4585  00145E  1829               	xorwf	_i2c1_object+2,w,c
  4586  001460  E108               	bnz	i2l2280
  4587  001462  0E00               	movlw	high (_i2c1_tr_queue+5)
  4588  001464  182A               	xorwf	_i2c1_object+3,w,c
  4589  001466  A4D8               	btfss	status,2,c
  4590  001468  D004               	goto	i2l2280
  4591                           
  4592                           ;i2c1.c: 264: i2c1_object.pTrHead = i2c1_tr_queue;
  4593  00146A  0ECB               	movlw	low _i2c1_tr_queue
  4594  00146C  6E29               	movwf	_i2c1_object+2,c
  4595  00146E  0E00               	movlw	high _i2c1_tr_queue
  4596  001470  6E2A               	movwf	_i2c1_object+3,c
  4597  001472                     i2l2280:
  4598                           
  4599                           ;i2c1.c: 265: }
  4600                           ;i2c1.c: 269: i2c1_object.trStatus.s.full = 0;
  4601  001472  902B               	bcf	_i2c1_object+4,0,c
  4602                           
  4603                           ;i2c1.c: 272: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  4604  001474  5027               	movf	_i2c1_object,w,c
  4605  001476  1829               	xorwf	_i2c1_object+2,w,c
  4606  001478  E104               	bnz	i2l333
  4607  00147A  5028               	movf	_i2c1_object+1,w,c
  4608  00147C  182A               	xorwf	_i2c1_object+3,w,c
  4609  00147E  B4D8               	btfsc	status,2,c
  4610                           
  4611                           ;i2c1.c: 274: i2c1_object.trStatus.s.empty = 1;
  4612  001480  822B               	bsf	_i2c1_object+4,1,c
  4613  001482                     i2l333:
  4614                           
  4615                           ;i2c1.c: 275: }
  4616                           ;i2c1.c: 278: SSP1CON2bits.SEN = 1;
  4617  001482  80C5               	bsf	4037,0,c	;volatile
  4618                           
  4619                           ;i2c1.c: 281: i2c1_state = S_MASTER_SEND_ADDR;
  4620  001484  0E02               	movlw	2
  4621  001486  6E3E               	movwf	_i2c1_state,c
  4622                           
  4623                           ;i2c1.c: 282: }
  4624                           ;i2c1.c: 284: break;
  4625  001488  0012               	return	
  4626  00148A                     i2l335:
  4627                           
  4628                           ;i2c1.c: 291: SSP1CON2bits.RSEN = 1;
  4629  00148A  82C5               	bsf	4037,1,c	;volatile
  4630                           
  4631                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  4632  00148C  0E02               	movlw	2
  4633  00148E  6E3E               	movwf	_i2c1_state,c
  4634                           
  4635                           ;i2c1.c: 296: break;
  4636  001490  0012               	return	
  4637  001492                     i2l336:
  4638                           
  4639                           ;i2c1.c: 300: if (SSP1CON2bits.ACKSTAT) {
  4640  001492  ACC5               	btfss	4037,6,c	;volatile
  4641  001494  D005               	goto	i2l2292
  4642                           
  4643                           ;i2c1.c: 301: i2c1_object.i2cErrors++;
  4644  001496  2A2D               	incf	_i2c1_object+6,f,c
  4645                           
  4646                           ;i2c1.c: 302: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4647  001498  0E04               	movlw	4
  4648  00149A  ECB8  F00C         	call	_I2C1_Stop
  4649                           
  4650                           ;i2c1.c: 303: } else {
  4651  00149E  0012               	return	
  4652  0014A0                     i2l2292:
  4653                           
  4654                           ;i2c1.c: 305: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  4655  0014A0  90D8               	bcf	status,0,c
  4656  0014A2  3048               	rrcf	I2C1_ISR@i2c_address+1,w,c
  4657  0014A4  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  4658  0014A6  3047               	rrcf	I2C1_ISR@i2c_address,w,c
  4659  0014A8  6E04               	movwf	??_I2C1_ISR& (0+255),c
  4660  0014AA  5004               	movf	??_I2C1_ISR,w,c
  4661  0014AC  6EC9               	movwf	4041,c	;volatile
  4662                           
  4663                           ;i2c1.c: 308: if (i2c_address & 0x01) {
  4664  0014AE  A047               	btfss	I2C1_ISR@i2c_address,0,c
  4665  0014B0  D003               	goto	i2l2298
  4666                           
  4667                           ;i2c1.c: 311: i2c1_state = S_MASTER_10BIT_RESTART;
  4668  0014B2  0E0B               	movlw	11
  4669  0014B4  6E3E               	movwf	_i2c1_state,c
  4670                           
  4671                           ;i2c1.c: 312: } else {
  4672  0014B6  0012               	return	
  4673  0014B8                     i2l2298:
  4674                           
  4675                           ;i2c1.c: 314: i2c1_state = S_MASTER_SEND_DATA;
  4676  0014B8  0E03               	movlw	3
  4677  0014BA  6E3E               	movwf	_i2c1_state,c
  4678                           
  4679                           ;i2c1.c: 315: }
  4680                           ;i2c1.c: 316: }
  4681                           ;i2c1.c: 318: break;
  4682  0014BC  0012               	return	
  4683  0014BE                     i2l341:
  4684                           
  4685                           ;i2c1.c: 322: if (SSP1CON2bits.ACKSTAT) {
  4686  0014BE  ACC5               	btfss	4037,6,c	;volatile
  4687  0014C0  D005               	goto	i2l342
  4688                           
  4689                           ;i2c1.c: 323: i2c1_object.i2cErrors++;
  4690  0014C2  2A2D               	incf	_i2c1_object+6,f,c
  4691                           
  4692                           ;i2c1.c: 324: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4693  0014C4  0E04               	movlw	4
  4694  0014C6  ECB8  F00C         	call	_I2C1_Stop
  4695                           
  4696                           ;i2c1.c: 325: } else {
  4697  0014CA  0012               	return	
  4698  0014CC                     i2l342:
  4699                           
  4700                           ;i2c1.c: 328: SSP1CON2bits.RSEN = 1;
  4701  0014CC  82C5               	bsf	4037,1,c	;volatile
  4702                           
  4703                           ;i2c1.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4704  0014CE  C047  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  4705  0014D2  C048  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  4706  0014D6  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  4707  0014DA  6A05               	clrf	??_I2C1_ISR+1,c
  4708  0014DC  0E06               	movlw	6
  4709  0014DE  1604               	andwf	??_I2C1_ISR,f,c
  4710  0014E0  0E00               	movlw	0
  4711  0014E2  1605               	andwf	??_I2C1_ISR+1,f,c
  4712  0014E4  0EF0               	movlw	240
  4713  0014E6  1004               	iorwf	??_I2C1_ISR,w,c
  4714  0014E8  6E47               	movwf	I2C1_ISR@i2c_address,c
  4715  0014EA  5005               	movf	??_I2C1_ISR+1,w,c
  4716  0014EC  6E48               	movwf	I2C1_ISR@i2c_address+1,c
  4717                           
  4718                           ;i2c1.c: 335: i2c_address |= 0x0001;
  4719  0014EE  8047               	bsf	I2C1_ISR@i2c_address,0,c
  4720                           
  4721                           ;i2c1.c: 338: i2c_10bit_address_restart = 1;
  4722  0014F0  0E01               	movlw	1
  4723  0014F2  6E32               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  4724                           
  4725                           ;i2c1.c: 341: i2c1_state = S_MASTER_SEND_ADDR;
  4726  0014F4  0E02               	movlw	2
  4727  0014F6  6E3E               	movwf	_i2c1_state,c
  4728                           
  4729                           ;i2c1.c: 342: }
  4730                           ;i2c1.c: 344: break;
  4731  0014F8  0012               	return	
  4732  0014FA                     i2l2312:
  4733                           
  4734                           ;i2c1.c: 359: if (i2c_10bit_address_restart != 1) {
  4735  0014FA  0432               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  4736  0014FC  B4D8               	btfsc	status,2,c
  4737  0014FE  D01A               	goto	i2l346
  4738                           
  4739                           ;i2c1.c: 361: i2c_address = p_i2c1_trb_current->address;
  4740  001500  C030  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  4741  001504  C031  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  4742  001508  CFDE F047          	movff	postinc2,I2C1_ISR@i2c_address
  4743  00150C  CFDD F048          	movff	postdec2,I2C1_ISR@i2c_address+1
  4744                           
  4745                           ;i2c1.c: 362: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  4746  001510  EE20 F003          	lfsr	2,3
  4747  001514  5030               	movf	_p_i2c1_trb_current,w,c
  4748  001516  26D9               	addwf	fsr2l,f,c
  4749  001518  5031               	movf	_p_i2c1_trb_current+1,w,c
  4750  00151A  22DA               	addwfc	fsr2h,f,c
  4751  00151C  CFDE F0B8          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  4752  001520  CFDD F0B9          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  4753                           
  4754                           ;i2c1.c: 363: i2c_bytes_left = p_i2c1_trb_current->length;
  4755  001524  EE20 F002          	lfsr	2,2
  4756  001528  5030               	movf	_p_i2c1_trb_current,w,c
  4757  00152A  26D9               	addwf	fsr2l,f,c
  4758  00152C  5031               	movf	_p_i2c1_trb_current+1,w,c
  4759  00152E  22DA               	addwfc	fsr2h,f,c
  4760  001530  50DF               	movf	indf2,w,c
  4761  001532  6E33               	movwf	I2C1_ISR@i2c_bytes_left,c
  4762  001534                     i2l346:
  4763                           
  4764                           ;i2c1.c: 383: SSP1BUF = i2c_address;
  4765  001534  C047  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  4766                           
  4767                           ;i2c1.c: 384: if (i2c_address & 0x01) {
  4768  001538  A047               	btfss	I2C1_ISR@i2c_address,0,c
  4769  00153A  D003               	goto	i2l2332
  4770                           
  4771                           ;i2c1.c: 386: i2c1_state = S_MASTER_ACK_ADDR;
  4772  00153C  0E05               	movlw	5
  4773  00153E  6E3E               	movwf	_i2c1_state,c
  4774                           
  4775                           ;i2c1.c: 387: } else {
  4776  001540  0012               	return	
  4777  001542                     i2l2332:
  4778                           
  4779                           ;i2c1.c: 389: i2c1_state = S_MASTER_SEND_DATA;
  4780  001542  0E03               	movlw	3
  4781  001544  6E3E               	movwf	_i2c1_state,c
  4782                           
  4783                           ;i2c1.c: 390: }
  4784                           ;i2c1.c: 391: }
  4785                           ;i2c1.c: 392: break;
  4786  001546  0012               	return	
  4787  001548                     i2l352:
  4788                           
  4789                           ;i2c1.c: 397: if (SSP1CON2bits.ACKSTAT) {
  4790  001548  ACC5               	btfss	4037,6,c	;volatile
  4791  00154A  D006               	goto	i2l2340
  4792                           
  4793                           ;i2c1.c: 399: i2c1_object.i2cErrors++;
  4794  00154C  2A2D               	incf	_i2c1_object+6,f,c
  4795                           
  4796                           ;i2c1.c: 402: SSP1CON2bits.ACKSTAT = 0;
  4797  00154E  9CC5               	bcf	4037,6,c	;volatile
  4798                           
  4799                           ;i2c1.c: 405: I2C1_Stop(I2C1_DATA_NO_ACK);
  4800  001550  0E05               	movlw	5
  4801  001552  ECB8  F00C         	call	_I2C1_Stop
  4802                           
  4803                           ;i2c1.c: 407: } else {
  4804  001556  0012               	return	
  4805  001558                     i2l2340:
  4806                           
  4807                           ;i2c1.c: 409: if (i2c_bytes_left-- == 0U) {
  4808  001558  0633               	decf	I2C1_ISR@i2c_bytes_left,f,c
  4809  00155A  2833               	incf	I2C1_ISR@i2c_bytes_left,w,c
  4810  00155C  A4D8               	btfss	status,2,c
  4811  00155E  D00E               	goto	i2l2350
  4812                           
  4813                           ;i2c1.c: 413: p_i2c1_trb_current++;
  4814  001560  0E05               	movlw	5
  4815  001562  2630               	addwf	_p_i2c1_trb_current,f,c
  4816  001564  0E00               	movlw	0
  4817  001566  2231               	addwfc	_p_i2c1_trb_current+1,f,c
  4818                           
  4819                           ;i2c1.c: 416: if (--i2c1_trb_count == 0) {
  4820  001568  2E3F               	decfsz	_i2c1_trb_count,f,c
  4821  00156A  D004               	goto	i2l356
  4822                           
  4823                           ;i2c1.c: 417: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4824  00156C  0E00               	movlw	0
  4825  00156E  ECB8  F00C         	call	_I2C1_Stop
  4826                           
  4827                           ;i2c1.c: 418: } else {
  4828  001572  0012               	return	
  4829  001574                     i2l356:
  4830                           
  4831                           ;i2c1.c: 425: SSP1CON2bits.RSEN = 1;
  4832  001574  82C5               	bsf	4037,1,c	;volatile
  4833                           
  4834                           ;i2c1.c: 428: i2c1_state = S_MASTER_SEND_ADDR;
  4835  001576  0E02               	movlw	2
  4836  001578  6E3E               	movwf	_i2c1_state,c
  4837                           
  4838                           ;i2c1.c: 430: }
  4839                           ;i2c1.c: 431: } else {
  4840  00157A  0012               	return	
  4841  00157C                     i2l2350:
  4842                           
  4843                           ;i2c1.c: 433: SSP1BUF = *pi2c_buf_ptr++;
  4844  00157C  C0B8  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4845  001580  C0B9  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4846  001584  50DF               	movf	indf2,w,c
  4847  001586  6EC9               	movwf	4041,c	;volatile
  4848  001588  0100               	movlb	0	; () banked
  4849  00158A  4BB8               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
  4850  00158C  2BB9               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;i2c1.c: 434: }
  4854                           ;i2c1.c: 435: }
  4855                           ;i2c1.c: 436: break;
  4856                           
  4857                           ; BSR set to: 0
  4858  00158E  0012               	return	
  4859  001590                     i2l359:
  4860                           
  4861                           ;i2c1.c: 441: if (SSP1CON2bits.ACKSTAT) {
  4862  001590  ACC5               	btfss	4037,6,c	;volatile
  4863  001592  D006               	goto	i2l360
  4864                           
  4865                           ;i2c1.c: 444: i2c1_object.i2cErrors++;
  4866  001594  2A2D               	incf	_i2c1_object+6,f,c
  4867                           
  4868                           ;i2c1.c: 447: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4869  001596  0E04               	movlw	4
  4870  001598  ECB8  F00C         	call	_I2C1_Stop
  4871                           
  4872                           ;i2c1.c: 450: SSP1CON2bits.ACKSTAT = 0;
  4873  00159C  9CC5               	bcf	4037,6,c	;volatile
  4874                           
  4875                           ;i2c1.c: 451: } else {
  4876  00159E  0012               	return	
  4877  0015A0                     i2l360:
  4878                           
  4879                           ;i2c1.c: 452: SSP1CON2bits.RCEN = 1;
  4880  0015A0  86C5               	bsf	4037,3,c	;volatile
  4881                           
  4882                           ;i2c1.c: 453: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4883  0015A2  0E08               	movlw	8
  4884  0015A4  6E3E               	movwf	_i2c1_state,c
  4885                           
  4886                           ;i2c1.c: 454: }
  4887                           ;i2c1.c: 455: break;
  4888  0015A6  0012               	return	
  4889  0015A8                     i2l2362:
  4890                           
  4891                           ;i2c1.c: 462: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4892  0015A8  0E08               	movlw	8
  4893  0015AA  6E3E               	movwf	_i2c1_state,c
  4894                           
  4895                           ;i2c1.c: 465: SSP1CON2bits.RCEN = 1;
  4896  0015AC  86C5               	bsf	4037,3,c	;volatile
  4897                           
  4898                           ;i2c1.c: 467: break;
  4899  0015AE  0012               	return	
  4900  0015B0                     i2l2366:
  4901                           
  4902                           ;i2c1.c: 472: *pi2c_buf_ptr++ = SSP1BUF;
  4903  0015B0  C0B8  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4904  0015B4  C0B9  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4905  0015B8  CFC9 FFDF          	movff	4041,indf2	;volatile
  4906  0015BC  0100               	movlb	0	; () banked
  4907  0015BE  4BB8               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
  4908  0015C0  2BB9               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;i2c1.c: 475: if (--i2c_bytes_left) {
  4912  0015C2  0E01               	movlw	1
  4913  0015C4  5E33               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  4914  0015C6  B4D8               	btfsc	status,2,c
  4915  0015C8  D004               	goto	i2l364
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;i2c1.c: 481: SSP1CON2bits.ACKDT = 0;
  4919  0015CA  9AC5               	bcf	4037,5,c	;volatile
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;i2c1.c: 484: i2c1_state = S_MASTER_RCV_DATA;
  4923  0015CC  0E06               	movlw	6
  4924  0015CE  6E3E               	movwf	_i2c1_state,c
  4925                           
  4926                           ;i2c1.c: 485: } else {
  4927  0015D0  D003               	goto	i2l2378
  4928  0015D2                     i2l364:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  4932  0015D2  8AC5               	bsf	4037,5,c	;volatile
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;i2c1.c: 491: I2C1_FunctionComplete();
  4936  0015D4  ECA1  F00E         	call	_I2C1_FunctionComplete	;wreg free
  4937  0015D8                     i2l2378:
  4938                           
  4939                           ;i2c1.c: 492: }
  4940                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  4941  0015D8  88C5               	bsf	4037,4,c	;volatile
  4942                           
  4943                           ;i2c1.c: 496: break;
  4944  0015DA  0012               	return	
  4945  0015DC                     i2l2380:
  4946                           
  4947                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  4948                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4949  0015DC  0E00               	movlw	0
  4950  0015DE  ECB8  F00C         	call	_I2C1_Stop
  4951                           
  4952                           ;i2c1.c: 503: break;
  4953  0015E2  0012               	return	
  4954  0015E4                     i2l2382:
  4955                           
  4956                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  4957  0015E4  2A2D               	incf	_i2c1_object+6,f,c
  4958                           
  4959                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  4960  0015E6  0E06               	movlw	6
  4961  0015E8  ECB8  F00C         	call	_I2C1_Stop
  4962                           
  4963                           ;i2c1.c: 513: }
  4964                           
  4965                           ;i2c1.c: 511: break;
  4966  0015EC  0012               	return	
  4967  0015EE                     i2l2388:
  4968  0015EE  503E               	movf	_i2c1_state,w,c
  4969                           
  4970                           ; Switch size 1, requested type "space"
  4971                           ; Number of cases is 11, Range of values is 0 to 11
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte           34    18 (average)
  4975                           ;	Chosen strategy is simple_byte
  4976  0015F0  0A00               	xorlw	0	; case 0
  4977  0015F2  B4D8               	btfsc	status,2,c
  4978  0015F4  D719               	goto	i2l330
  4979  0015F6  0A01               	xorlw	1	; case 1
  4980  0015F8  B4D8               	btfsc	status,2,c
  4981  0015FA  D747               	goto	i2l335
  4982  0015FC  0A03               	xorlw	3	; case 2
  4983  0015FE  B4D8               	btfsc	status,2,c
  4984  001600  D77C               	goto	i2l2312
  4985  001602  0A01               	xorlw	1	; case 3
  4986  001604  B4D8               	btfsc	status,2,c
  4987  001606  D7A0               	goto	i2l352
  4988  001608  0A07               	xorlw	7	; case 4
  4989  00160A  B4D8               	btfsc	status,2,c
  4990  00160C  D7E7               	goto	i2l2380
  4991  00160E  0A01               	xorlw	1	; case 5
  4992  001610  B4D8               	btfsc	status,2,c
  4993  001612  D7BE               	goto	i2l359
  4994  001614  0A03               	xorlw	3	; case 6
  4995  001616  B4D8               	btfsc	status,2,c
  4996  001618  D7C7               	goto	i2l2362
  4997  00161A  0A01               	xorlw	1	; case 7
  4998  00161C  B4D8               	btfsc	status,2,c
  4999  00161E  D7DE               	goto	i2l2380
  5000  001620  0A0F               	xorlw	15	; case 8
  5001  001622  B4D8               	btfsc	status,2,c
  5002  001624  D7C5               	goto	i2l2366
  5003  001626  0A02               	xorlw	2	; case 10
  5004  001628  B4D8               	btfsc	status,2,c
  5005  00162A  D733               	goto	i2l336
  5006  00162C  0A01               	xorlw	1	; case 11
  5007  00162E  B4D8               	btfsc	status,2,c
  5008  001630  D746               	goto	i2l341
  5009  001632  D7D8               	goto	i2l2382
  5010  001634                     __end_of_I2C1_ISR:
  5011                           	opt stack 0
  5012                           pclatu	equ	0xFFB
  5013                           pclath	equ	0xFFA
  5014                           tblptru	equ	0xFF8
  5015                           tblptrh	equ	0xFF7
  5016                           tblptrl	equ	0xFF6
  5017                           tablat	equ	0xFF5
  5018                           prodh	equ	0xFF4
  5019                           prodl	equ	0xFF3
  5020                           intcon	equ	0xFF2
  5021                           intcon2	equ	0xFF1
  5022                           postinc0	equ	0xFEE
  5023                           fsr0h	equ	0xFEA
  5024                           fsr0l	equ	0xFE9
  5025                           wreg	equ	0xFE8
  5026                           fsr1h	equ	0xFE2
  5027                           fsr1l	equ	0xFE1
  5028                           indf2	equ	0xFDF
  5029                           postinc2	equ	0xFDE
  5030                           postdec2	equ	0xFDD
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8
  5034                           
  5035 ;; *************** function _I2C1_Stop *****************
  5036 ;; Defined at:
  5037 ;;		line 530 in file "mcc_generated_files/i2c1.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  completion_c    1    wreg     enum E7754
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  completion_c    1    2[COMRAM] enum E7754
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;Total ram usage:        3 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_I2C1_ISR
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text35
  5065  001970                     __ptext35:
  5066                           	opt stack 0
  5067  001970                     _I2C1_Stop:
  5068                           	opt stack 22
  5069                           
  5070                           ;incstack = 0
  5071                           ;I2C1_Stop@completion_code stored from wreg
  5072  001970  6E03               	movwf	I2C1_Stop@completion_code,c
  5073                           
  5074                           ;i2c1.c: 532: SSP1CON2bits.PEN = 1;
  5075  001972  84C5               	bsf	4037,2,c	;volatile
  5076                           
  5077                           ;i2c1.c: 535: if (p_i2c1_current->pTrFlag != (0)) {
  5078  001974  EE20 F003          	lfsr	2,3
  5079  001978  502E               	movf	_p_i2c1_current,w,c
  5080  00197A  26D9               	addwf	fsr2l,f,c
  5081  00197C  502F               	movf	_p_i2c1_current+1,w,c
  5082  00197E  22DA               	addwfc	fsr2h,f,c
  5083  001980  50DE               	movf	postinc2,w,c
  5084  001982  10DE               	iorwf	postinc2,w,c
  5085  001984  B4D8               	btfsc	status,2,c
  5086  001986  D010               	goto	i2l2204
  5087                           
  5088                           ;i2c1.c: 537: *(p_i2c1_current->pTrFlag) = completion_code;
  5089  001988  EE20 F003          	lfsr	2,3
  5090  00198C  502E               	movf	_p_i2c1_current,w,c
  5091  00198E  26D9               	addwf	fsr2l,f,c
  5092  001990  502F               	movf	_p_i2c1_current+1,w,c
  5093  001992  22DA               	addwfc	fsr2h,f,c
  5094  001994  CFDE F001          	movff	postinc2,??_I2C1_Stop
  5095  001998  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
  5096  00199C  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
  5097  0019A0  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  5098  0019A4  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
  5099  0019A8                     i2l2204:
  5100                           
  5101                           ;i2c1.c: 538: }
  5102                           ;i2c1.c: 541: i2c1_state = S_MASTER_IDLE;
  5103  0019A8  0E00               	movlw	0
  5104  0019AA  6E3E               	movwf	_i2c1_state,c
  5105  0019AC  0012               	return		;funcret
  5106  0019AE                     __end_of_I2C1_Stop:
  5107                           	opt stack 0
  5108                           pclatu	equ	0xFFB
  5109                           pclath	equ	0xFFA
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           intcon	equ	0xFF2
  5117                           intcon2	equ	0xFF1
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           fsr1h	equ	0xFE2
  5123                           fsr1l	equ	0xFE1
  5124                           indf2	equ	0xFDF
  5125                           postinc2	equ	0xFDE
  5126                           postdec2	equ	0xFDD
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _I2C1_FunctionComplete *****************
  5132 ;; Defined at:
  5133 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_I2C1_ISR
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text36
  5161  001D42                     __ptext36:
  5162                           	opt stack 0
  5163  001D42                     _I2C1_FunctionComplete:
  5164                           	opt stack 22
  5165                           
  5166                           ;i2c1.c: 519: p_i2c1_trb_current++;
  5167                           
  5168                           ;incstack = 0
  5169  001D42  0E05               	movlw	5
  5170  001D44  2630               	addwf	_p_i2c1_trb_current,f,c
  5171  001D46  0E00               	movlw	0
  5172  001D48  2231               	addwfc	_p_i2c1_trb_current+1,f,c
  5173                           
  5174                           ;i2c1.c: 522: if (--i2c1_trb_count == 0) {
  5175  001D4A  2E3F               	decfsz	_i2c1_trb_count,f,c
  5176  001D4C  D003               	goto	i2l2212
  5177                           
  5178                           ;i2c1.c: 523: i2c1_state = S_MASTER_SEND_STOP;
  5179  001D4E  0E04               	movlw	4
  5180  001D50  6E3E               	movwf	_i2c1_state,c
  5181                           
  5182                           ;i2c1.c: 524: } else {
  5183  001D52  0012               	return	
  5184  001D54                     i2l2212:
  5185                           
  5186                           ;i2c1.c: 525: i2c1_state = S_MASTER_RESTART;
  5187  001D54  0E01               	movlw	1
  5188  001D56  6E3E               	movwf	_i2c1_state,c
  5189  001D58  0012               	return	
  5190  001D5A                     __end_of_I2C1_FunctionComplete:
  5191                           	opt stack 0
  5192                           pclatu	equ	0xFFB
  5193                           pclath	equ	0xFFA
  5194                           tblptru	equ	0xFF8
  5195                           tblptrh	equ	0xFF7
  5196                           tblptrl	equ	0xFF6
  5197                           tablat	equ	0xFF5
  5198                           prodh	equ	0xFF4
  5199                           prodl	equ	0xFF3
  5200                           intcon	equ	0xFF2
  5201                           intcon2	equ	0xFF1
  5202                           postinc0	equ	0xFEE
  5203                           fsr0h	equ	0xFEA
  5204                           fsr0l	equ	0xFE9
  5205                           wreg	equ	0xFE8
  5206                           fsr1h	equ	0xFE2
  5207                           fsr1l	equ	0xFE1
  5208                           indf2	equ	0xFDF
  5209                           postinc2	equ	0xFDE
  5210                           postdec2	equ	0xFDD
  5211                           fsr2h	equ	0xFDA
  5212                           fsr2l	equ	0xFD9
  5213                           status	equ	0xFD8
  5214                           
  5215 ;; *************** function _I2C1_BusCollisionISR *****************
  5216 ;; Defined at:
  5217 ;;		line 656 in file "mcc_generated_files/i2c1.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		None
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;Total ram usage:        0 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_INTERRUPT_InterruptManager
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text37
  5245  001DBE                     __ptext37:
  5246                           	opt stack 0
  5247  001DBE                     _I2C1_BusCollisionISR:
  5248                           	opt stack 23
  5249                           
  5250                           ;incstack = 0
  5251  001DBE  0012               	return		;funcret
  5252  001DC0                     __end_of_I2C1_BusCollisionISR:
  5253                           	opt stack 0
  5254                           pclatu	equ	0xFFB
  5255                           pclath	equ	0xFFA
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           intcon2	equ	0xFF1
  5264                           postinc0	equ	0xFEE
  5265                           fsr0h	equ	0xFEA
  5266                           fsr0l	equ	0xFE9
  5267                           wreg	equ	0xFE8
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           indf2	equ	0xFDF
  5271                           postinc2	equ	0xFDE
  5272                           postdec2	equ	0xFDD
  5273                           fsr2h	equ	0xFDA
  5274                           fsr2l	equ	0xFD9
  5275                           status	equ	0xFD8
  5276                           
  5277 ;; *************** function _EUSART2_Transmit_ISR *****************
  5278 ;; Defined at:
  5279 ;;		line 147 in file "mcc_generated_files/eusart2.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_INTERRUPT_InterruptManager
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text38
  5307  001B2A                     __ptext38:
  5308                           	opt stack 0
  5309  001B2A                     _EUSART2_Transmit_ISR:
  5310                           	opt stack 23
  5311                           
  5312                           ;eusart2.c: 150: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  5313                           
  5314                           ;incstack = 0
  5315  001B2A  0E08               	movlw	8
  5316  001B2C  0100               	movlb	0	; () banked
  5317  001B2E  61E8               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  5318  001B30  D013               	goto	i2l473
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;eusart2.c: 151: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
  5322  001B32  503D               	movf	_eusart2TxTail,w,c
  5323  001B34  0D01               	mullw	1
  5324  001B36  0EB0               	movlw	low _eusart2TxBuffer
  5325  001B38  24F3               	addwf	prodl,w,c
  5326  001B3A  6ED9               	movwf	fsr2l,c
  5327  001B3C  0E00               	movlw	high _eusart2TxBuffer
  5328  001B3E  20F4               	addwfc	prodh,w,c
  5329  001B40  6EDA               	movwf	fsr2h,c
  5330  001B42  50DF               	movf	indf2,w,c
  5331  001B44  6E73               	movwf	3955,c	;volatile
  5332                           
  5333                           ; BSR set to: 0
  5334  001B46  2A3D               	incf	_eusart2TxTail,f,c
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;eusart2.c: 152: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  5338  001B48  0E07               	movlw	7
  5339  001B4A  643D               	cpfsgt	_eusart2TxTail,c
  5340  001B4C  D002               	goto	i2l2444
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;eusart2.c: 153: eusart2TxTail = 0;
  5344  001B4E  0E00               	movlw	0
  5345  001B50  6E3D               	movwf	_eusart2TxTail,c
  5346  001B52                     i2l2444:
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;eusart2.c: 154: }
  5350                           ;eusart2.c: 155: eusart2TxBufferRemaining++;
  5351  001B52  0100               	movlb	0	; () banked
  5352  001B54  2BE8               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  5353                           
  5354                           ;eusart2.c: 156: } else {
  5355  001B56  0012               	return	
  5356  001B58                     i2l473:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;eusart2.c: 157: PIE3bits.TX2IE = 0;
  5360  001B58  98A3               	bcf	4003,4,c	;volatile
  5361  001B5A  0012               	return	
  5362  001B5C                     __end_of_EUSART2_Transmit_ISR:
  5363                           	opt stack 0
  5364                           pclatu	equ	0xFFB
  5365                           pclath	equ	0xFFA
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           intcon	equ	0xFF2
  5373                           intcon2	equ	0xFF1
  5374                           postinc0	equ	0xFEE
  5375                           fsr0h	equ	0xFEA
  5376                           fsr0l	equ	0xFE9
  5377                           wreg	equ	0xFE8
  5378                           fsr1h	equ	0xFE2
  5379                           fsr1l	equ	0xFE1
  5380                           indf2	equ	0xFDF
  5381                           postinc2	equ	0xFDE
  5382                           postdec2	equ	0xFDD
  5383                           fsr2h	equ	0xFDA
  5384                           fsr2l	equ	0xFD9
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function _EUSART2_Receive_ISR *****************
  5388 ;; Defined at:
  5389 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_INTERRUPT_InterruptManager
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text39
  5417  001BE6                     __ptext39:
  5418                           	opt stack 0
  5419  001BE6                     _EUSART2_Receive_ISR:
  5420                           	opt stack 23
  5421                           
  5422                           ;eusart2.c: 162: if (1 == RC2STAbits.OERR) {
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;incstack = 0
  5426  001BE6  A271               	btfss	3953,1,c	;volatile
  5427  001BE8  D002               	goto	i2l2424
  5428                           
  5429                           ;eusart2.c: 165: RC2STAbits.CREN = 0;
  5430  001BEA  9871               	bcf	3953,4,c	;volatile
  5431                           
  5432                           ;eusart2.c: 166: RC2STAbits.CREN = 1;
  5433  001BEC  8871               	bsf	3953,4,c	;volatile
  5434  001BEE                     i2l2424:
  5435                           
  5436                           ;eusart2.c: 167: }
  5437                           ;eusart2.c: 170: eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  5438  001BEE  503A               	movf	_eusart2RxHead,w,c
  5439  001BF0  0D01               	mullw	1
  5440  001BF2  0E60               	movlw	low _eusart2RxBuffer
  5441  001BF4  24F3               	addwf	prodl,w,c
  5442  001BF6  6ED9               	movwf	fsr2l,c
  5443  001BF8  0E00               	movlw	high _eusart2RxBuffer
  5444  001BFA  20F4               	addwfc	prodh,w,c
  5445  001BFC  6EDA               	movwf	fsr2h,c
  5446  001BFE  CF74 FFDF          	movff	3956,indf2	;volatile
  5447  001C02  2A3A               	incf	_eusart2RxHead,f,c
  5448                           
  5449                           ;eusart2.c: 171: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  5450  001C04  0E3F               	movlw	63
  5451  001C06  643A               	cpfsgt	_eusart2RxHead,c
  5452  001C08  D002               	goto	i2l2432
  5453                           
  5454                           ;eusart2.c: 172: eusart2RxHead = 0;
  5455  001C0A  0E00               	movlw	0
  5456  001C0C  6E3A               	movwf	_eusart2RxHead,c
  5457  001C0E                     i2l2432:
  5458                           
  5459                           ;eusart2.c: 173: }
  5460                           ;eusart2.c: 174: eusart2RxCount++;
  5461  001C0E  2A39               	incf	_eusart2RxCount,f,c	;volatile
  5462  001C10  0012               	return		;funcret
  5463  001C12                     __end_of_EUSART2_Receive_ISR:
  5464                           	opt stack 0
  5465                           pclatu	equ	0xFFB
  5466                           pclath	equ	0xFFA
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           prodh	equ	0xFF4
  5472                           prodl	equ	0xFF3
  5473                           intcon	equ	0xFF2
  5474                           intcon2	equ	0xFF1
  5475                           postinc0	equ	0xFEE
  5476                           fsr0h	equ	0xFEA
  5477                           fsr0l	equ	0xFE9
  5478                           wreg	equ	0xFE8
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           indf2	equ	0xFDF
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8
  5487                           
  5488 ;; *************** function _EUSART1_Transmit_ISR *****************
  5489 ;; Defined at:
  5490 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_INTERRUPT_InterruptManager
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text40
  5518  00189E                     __ptext40:
  5519                           	opt stack 0
  5520  00189E                     _EUSART1_Transmit_ISR:
  5521                           	opt stack 23
  5522                           
  5523                           ;eusart1.c: 176: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  5524                           
  5525                           ;incstack = 0
  5526  00189E  0E40               	movlw	64
  5527  0018A0  0100               	movlb	0	; () banked
  5528  0018A2  61E7               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5529  0018A4  D01E               	goto	i2l544
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;eusart1.c: 177: if (PORTAbits.RA7 == 0) {
  5533  0018A6  BE80               	btfsc	3968,7,c	;volatile
  5534  0018A8  D013               	goto	i2l545
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;eusart1.c: 178: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  5538  0018AA  5038               	movf	_eusart1TxTail,w,c
  5539  0018AC  0D01               	mullw	1
  5540  0018AE  0E40               	movlw	low _eusart1TxBuffer
  5541  0018B0  24F3               	addwf	prodl,w,c
  5542  0018B2  6ED9               	movwf	fsr2l,c
  5543  0018B4  0E01               	movlw	high _eusart1TxBuffer
  5544  0018B6  20F4               	addwfc	prodh,w,c
  5545  0018B8  6EDA               	movwf	fsr2h,c
  5546  0018BA  50DF               	movf	indf2,w,c
  5547  0018BC  6EAD               	movwf	4013,c	;volatile
  5548                           
  5549                           ; BSR set to: 0
  5550  0018BE  2A38               	incf	_eusart1TxTail,f,c
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;eusart1.c: 179: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  5554  0018C0  0E3F               	movlw	63
  5555  0018C2  6438               	cpfsgt	_eusart1TxTail,c
  5556  0018C4  D002               	goto	i2l2416
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;eusart1.c: 180: eusart1TxTail = 0;
  5560  0018C6  0E00               	movlw	0
  5561  0018C8  6E38               	movwf	_eusart1TxTail,c
  5562  0018CA                     i2l2416:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;eusart1.c: 181: }
  5566                           ;eusart1.c: 182: eusart1TxBufferRemaining++;
  5567  0018CA  0100               	movlb	0	; () banked
  5568  0018CC  2BE7               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5569                           
  5570                           ;eusart1.c: 183: } else {
  5571  0018CE  0012               	return	
  5572  0018D0                     i2l545:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;eusart1.c: 184: PIE1bits.TX1IE = 0;
  5576  0018D0  989D               	bcf	3997,4,c	;volatile
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;eusart1.c: 185: subdata.IO_LED = waitCTS = 1;
  5580  0018D2  0E01               	movlw	1
  5581  0018D4  6E42               	movwf	_waitCTS,c	;volatile
  5582  0018D6  B042               	btfsc	_waitCTS,0,c	;volatile
  5583  0018D8  D002               	bra	i2u172_45
  5584  0018DA  9E40               	bcf	_subdata,7,c
  5585  0018DC  D001               	bra	i2u172_46
  5586  0018DE                     i2u172_45:
  5587  0018DE  8E40               	bsf	_subdata,7,c
  5588  0018E0                     i2u172_46:
  5589                           
  5590                           ;eusart1.c: 186: }
  5591                           ;eusart1.c: 187: } else {
  5592  0018E0  0012               	return	
  5593  0018E2                     i2l544:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;eusart1.c: 188: PIE1bits.TXIE = 0;
  5597  0018E2  989D               	bcf	3997,4,c	;volatile
  5598  0018E4  0012               	return	
  5599  0018E6                     __end_of_EUSART1_Transmit_ISR:
  5600                           	opt stack 0
  5601                           pclatu	equ	0xFFB
  5602                           pclath	equ	0xFFA
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           intcon2	equ	0xFF1
  5611                           postinc0	equ	0xFEE
  5612                           fsr0h	equ	0xFEA
  5613                           fsr0l	equ	0xFE9
  5614                           wreg	equ	0xFE8
  5615                           fsr1h	equ	0xFE2
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function _EUSART1_Receive_ISR *****************
  5625 ;; Defined at:
  5626 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;Total ram usage:        0 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_INTERRUPT_InterruptManager
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text41
  5654  001C12                     __ptext41:
  5655                           	opt stack 0
  5656  001C12                     _EUSART1_Receive_ISR:
  5657                           	opt stack 23
  5658                           
  5659                           ;eusart1.c: 193: if (1 == RC1STAbits.OERR) {
  5660                           
  5661                           ;incstack = 0
  5662  001C12  A2AB               	btfss	4011,1,c	;volatile
  5663  001C14  D002               	goto	i2l2394
  5664                           
  5665                           ;eusart1.c: 196: RC1STAbits.CREN = 0;
  5666  001C16  98AB               	bcf	4011,4,c	;volatile
  5667                           
  5668                           ;eusart1.c: 197: RC1STAbits.CREN = 1;
  5669  001C18  88AB               	bsf	4011,4,c	;volatile
  5670  001C1A                     i2l2394:
  5671                           
  5672                           ;eusart1.c: 198: }
  5673                           ;eusart1.c: 201: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5674  001C1A  5035               	movf	_eusart1RxHead,w,c
  5675  001C1C  0D01               	mullw	1
  5676  001C1E  0E00               	movlw	low _eusart1RxBuffer
  5677  001C20  24F3               	addwf	prodl,w,c
  5678  001C22  6ED9               	movwf	fsr2l,c
  5679  001C24  0E01               	movlw	high _eusart1RxBuffer
  5680  001C26  20F4               	addwfc	prodh,w,c
  5681  001C28  6EDA               	movwf	fsr2h,c
  5682  001C2A  CFAE FFDF          	movff	4014,indf2	;volatile
  5683  001C2E  2A35               	incf	_eusart1RxHead,f,c
  5684                           
  5685                           ;eusart1.c: 202: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  5686  001C30  0E3F               	movlw	63
  5687  001C32  6435               	cpfsgt	_eusart1RxHead,c
  5688  001C34  D002               	goto	i2l2402
  5689                           
  5690                           ;eusart1.c: 203: eusart1RxHead = 0;
  5691  001C36  0E00               	movlw	0
  5692  001C38  6E35               	movwf	_eusart1RxHead,c
  5693  001C3A                     i2l2402:
  5694                           
  5695                           ;eusart1.c: 204: }
  5696                           ;eusart1.c: 205: eusart1RxCount++;
  5697  001C3A  2A34               	incf	_eusart1RxCount,f,c	;volatile
  5698  001C3C  0012               	return		;funcret
  5699  001C3E                     __end_of_EUSART1_Receive_ISR:
  5700                           	opt stack 0
  5701                           pclatu	equ	0xFFB
  5702                           pclath	equ	0xFFA
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           intcon2	equ	0xFF1
  5711                           postinc0	equ	0xFEE
  5712                           fsr0h	equ	0xFEA
  5713                           fsr0l	equ	0xFE9
  5714                           wreg	equ	0xFE8
  5715                           fsr1h	equ	0xFE2
  5716                           fsr1l	equ	0xFE1
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           pclatu	equ	0xFFB
  5724                           pclath	equ	0xFFA
  5725                           tblptru	equ	0xFF8
  5726                           tblptrh	equ	0xFF7
  5727                           tblptrl	equ	0xFF6
  5728                           tablat	equ	0xFF5
  5729                           prodh	equ	0xFF4
  5730                           prodl	equ	0xFF3
  5731                           intcon	equ	0xFF2
  5732                           intcon2	equ	0xFF1
  5733                           postinc0	equ	0xFEE
  5734                           fsr0h	equ	0xFEA
  5735                           fsr0l	equ	0xFE9
  5736                           wreg	equ	0xFE8
  5737                           fsr1h	equ	0xFE2
  5738                           fsr1l	equ	0xFE1
  5739                           indf2	equ	0xFDF
  5740                           postinc2	equ	0xFDE
  5741                           postdec2	equ	0xFDD
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8
  5745                           
  5746                           	psect	rparam
  5747  0000                     pclatu	equ	0xFFB
  5748                           pclath	equ	0xFFA
  5749                           tblptru	equ	0xFF8
  5750                           tblptrh	equ	0xFF7
  5751                           tblptrl	equ	0xFF6
  5752                           tablat	equ	0xFF5
  5753                           prodh	equ	0xFF4
  5754                           prodl	equ	0xFF3
  5755                           intcon	equ	0xFF2
  5756                           intcon2	equ	0xFF1
  5757                           postinc0	equ	0xFEE
  5758                           fsr0h	equ	0xFEA
  5759                           fsr0l	equ	0xFE9
  5760                           wreg	equ	0xFE8
  5761                           fsr1h	equ	0xFE2
  5762                           fsr1l	equ	0xFE1
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           fsr2h	equ	0xFDA
  5767                           fsr2l	equ	0xFD9
  5768                           status	equ	0xFD8
  5769                           
  5770                           	psect	temp
  5771  00004C                     btemp:
  5772                           	opt stack 0
  5773  00004C                     	ds	1
  5774  0000                     int$flags	set	btemp
  5775                           pclatu	equ	0xFFB
  5776                           pclath	equ	0xFFA
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           intcon2	equ	0xFF1
  5785                           postinc0	equ	0xFEE
  5786                           fsr0h	equ	0xFEA
  5787                           fsr0l	equ	0xFE9
  5788                           wreg	equ	0xFE8
  5789                           fsr1h	equ	0xFE2
  5790                           fsr1l	equ	0xFE1
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         279
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      75
    BANK0           160     19     138
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7754 size(2) Largest target is 0
		 -> I2C_M_write@status(COMRAM[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    oled_str_disp@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    I2C_M_write@wr	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7754 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E7754 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    F7866.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E7754 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    F7861.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S1275$pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7754 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S1287$pTrFlag	PTR enum E7754 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7754 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    S1287$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S1298$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S1298$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _oled_data->_I2C_M_write
    _oled_cmd->_I2C_M_write
    _I2C_M_write->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _EUSART_CompWrite->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_oled_str_disp
    _oled_str_disp->_oled_position
    _oled_position->_oled_cmd
    _oled_data->_I2C_M_write
    _oled_init->_oled_cmd
    _oled_contrast->_oled_cmd
    _oled_clear->_oled_cmd
    _oled_cmd->_I2C_M_write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   14870
                                             11 BANK0      8     8      0
                  _ADC_GetConversion
                       _EUSART1_Read
                      _EUSART1_Write
                       _EUSART2_Read
                   _EUSART_CompWrite
                  _SYSTEM_Initialize
                         _oled_clear
                      _oled_contrast
                          _oled_data
                          _oled_init
                      _oled_position
                      _oled_str_disp
 ---------------------------------------------------------------------------------
 (1) _oled_str_disp                                        7     4      3    4698
                                              4 BANK0      7     4      3
                          _oled_data
                      _oled_position
 ---------------------------------------------------------------------------------
 (2) _oled_position                                        2     1      1    2407
                                              2 BANK0      2     1      1
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (2) _oled_data                                            1     1      0    1883
                                              1 BANK0      1     1      0
                        _I2C_M_write
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            1     1      0    1883
                                              2 BANK0      1     1      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (1) _oled_contrast                                        2     2      0    1914
                                              2 BANK0      2     2      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (1) _oled_clear                                           1     1      0    1883
                                              2 BANK0      1     1      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (3) _oled_cmd                                             1     1      0    1883
                                              1 BANK0      1     1      0
                        _I2C_M_write
 ---------------------------------------------------------------------------------
 (4) _I2C_M_write                                          4     1      3    1852
                                             35 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     7     0      7    1451
                                             28 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             19 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_CompWrite                                     1     1      0      88
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      44
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         1     1      0      24
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0      22
                                              5 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART1_Read
   _EUSART1_Write
   _EUSART2_Read
   _EUSART_CompWrite
     _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
   _oled_clear
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_contrast
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_data
     _I2C_M_write
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _oled_init
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_position
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_str_disp
     _oled_data
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oled_position
       _oled_cmd
         _I2C_M_write
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _TMR0_CallBack
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      8A       5       86.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     155      12        0.0%
DATA                 0      0     155       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 31 18:54:18 2016

              __end_of_oled_str_disp 16D4             _eusart1TxBufferRemaining 00E7  
                                 l27 1B74                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l537 186E  
                                l653 131A                                  l638 16D2  
                                l673 1394                                  l674 13EC  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    _timer1ReloadVal 004A                 __size_of_I2C_M_write 0098  
                                _str 00A0                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                   __end_of_I2C1_ISR 1634                          main@escaped 0043  
                               l2230 1890                                 l2232 1894  
                               l2216 1856                                 l2500 1AC8  
                               l2510 1AF0                                 l2480 1A94  
                               l2490 1ABC                                 l2730 1738  
                               l2740 1768                                 l2820 16A4  
                               l2900 1378                                 l2734 174C  
                               l2750 1790                                 l2814 164C  
                               l2736 1758                                 l2752 17B0  
                               l2912 139C                                 l2746 1846  
                               l2762 17D2                                 l2818 167A  
                               l2906 137C                                 l2764 17DA  
                               l2924 13CC                                 l2908 1390  
                               l2918 13C0                                 l2854 104C  
                               l2776 1802                                 l2892 133A  
                               l2884 1326                                 l2894 1354  
                               l2898 136A                          main@columun 00C0  
                               STR_1 1001                                 u3000 1172  
                               u3100 129E                                 u3020 1182  
                               _LATA 000F89                                 u3110 12AE  
                               _LATB 000F8A                                 u3015 1176  
                               _LATC 000F8B                                 u3040 123E  
                               _LATD 000F8C                                 _LATE 000F8D  
                               u3130 12BE                                 u3050 124E  
                               u3035 1186                                 u3108 12A2  
                               u3205 12F2                                 u3125 12B2  
                               u3150 12CE                                 u3070 125E  
                               u3048 1242                                 u3145 12C2  
                               u3065 1252                                 u3170 12DE  
                               u3090 1276                                 u3307 1A1A  
                               u3317 19E0                                 u3165 12D2  
                               u3085 1262                                 u3190 12EE  
                               u3327 1D38                                 u3096 1278  
                               u3337 1C8A                                 u3185 12E2  
                               u2810 10AE                                 u3347 17B2  
                               u2900 1122                                 u2740 106E  
                               u2805 10A2                                 u3277 1020  
                               u2830 10BE                                 u2750 107E  
                               u3287 1C60                                 u2920 1132  
                               u3297 19F8                                 u2825 10B2  
                               u2850 10CE                                 u2770 108E  
                               u2915 1126                                 u2940 1142  
                               u2748 1072                                 u2845 10C2  
                               u2765 1082                                 u2870 10DE  
                               u2790 109E                                 u2935 1136  
                               u2960 1152                                 u2865 10D2  
                               u2785 1092                                 u2890 1112  
                               u2955 1146                                 u2980 1162  
                               u2885 10E2                                 u2975 1156  
                               u2898 1116                                 u2995 1166  
                               _TMR1 000FCE                                 _WPUB 000F61  
              ??_EUSART2_Receive_ISR 0001                        _EUSART1_Write 1854  
                               _main 100C                        ?_EUSART1_Read 0001  
                    _TMR0_StartTimer 1DBA                        ?_EUSART2_Read 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9               ??_I2C1_MasterTRBInsert 0018  
                               btemp 004C                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00DC  
                      __CFG_IESO$OFF 000000         __end_of_EUSART2_Transmit_ISR 1B5C  
                       ___param_bank 000010       I2C1_MasterWriteTRBBuild@length 0018  
            __end_of_TMR0_Initialize 1CF6                           _i2c1_state 003E  
     __size_of_OSCILLATOR_Initialize 000E            I2C1_MasterTRBInsert@count 0019  
      __end_of_OSCILLATOR_Initialize 1DA4            I2C1_MasterTRBInsert@pflag 0016  
                              ?_main 0001                    __end_of_I2C1_Stop 19AE  
                    _TMR1_StartTimer 1DB6                                _T0CON 000FD5  
                              _T1CON 000FCD                       __CFG_DEBUG$OFF 000000  
                              i2l121 007E                                i2l113 004E  
                              i2l123 008A                                i2l115 005A  
                              i2l125 0096                                i2l117 0066  
                              i2l119 0072                                i2l129 00A0  
                              i2l330 1428                                i2l341 14BE  
                              i2l333 1482                                i2l342 14CC  
                              i2l335 148A                                i2l360 15A0  
                              i2l352 1548                                i2l336 1492  
                              i2l346 1534                                i2l364 15D2  
                              i2l356 1574                                i2l359 1590  
                              i2l544 18E2                                i2l545 18D0  
                              i2l473 1B58                                _TMR0H 000FD7  
                              _TMR1H 000FCF                                _TMR0L 000FD6  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
       __end_of_I2C1_BusCollisionISR 1DC0                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 189E  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                    ??_I2C1_Initialize 0014  
                   __end_of_TMR0_ISR 1DB0                     __end_of_TMR1_ISR 1BE6  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                        oled_data@work 00D5  
                      oled_cmd@write 00D0                       ?_EUSART1_Write 0001  
            __end_of_TMR1_Initialize 1CDA                                tablat 000FF5  
                     ??_EUSART1_Read 0014                       ??_EUSART2_Read 0014  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000      I2C1_MasterWriteTRBBuild@address 0019  
                    __initialization 1AF8                I2C1_MasterWrite@pdata 001D  
              I2C1_MasterWrite@pflag 0022           __end_of_EUSART1_Initialize 1A90  
                       __end_of_main 13F2                    EUSART_CompWrite@c 0015  
        ?_INTERRUPT_InterruptManager 0001                          _i2c1_object 0027  
                             ??_main 00DF                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0001              __end_of_TMR0_StartTimer 1DBE  
         __end_of_EUSART2_Initialize 1A5A                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
           _eusart2TxBufferRemaining 00E8                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                               _RC1STA 000FAB  
                             _RC2STA 000F71                               i2l2212 1D54  
                             i2l2204 19A8                               i2l2312 14FA  
                             i2l2402 1C3A                               i2l2340 1558  
                             i2l2332 1542                               i2l2350 157C  
                             i2l2416 18CA                               i2l2432 1C0E  
                             i2l2424 1BEE                               i2l2280 1472  
                             i2l2362 15A8                               i2l2444 1B52  
                             i2l2380 15DC                               i2l2292 14A0  
                             i2l2382 15E4                               i2l2366 15B0  
                     __CFG_WDTEN$OFF 000000                               i2l2394 1C1A  
                             i2l2378 15D8                               i2l2298 14B8  
                             i2l2388 15EE                               _RCREG1 000FAE  
                             _RCREG2 000F74                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _SPBRG2 000F75  
                             _TX1STA 000FAC                               _TX2STA 000F72  
                             _TXREG1 000FAD                               _TXREG2 000F73  
                  ?_I2C1_MasterWrite 001D                       __CFG_XINST$OFF 000000  
                 ??_I2C1_MasterWrite 0024                       _p_i2c1_current 002E  
            __end_of_TMR1_StartTimer 1DBA                       __CFG_STVREN$ON 000000  
                  ?_EUSART_CompWrite 0001           ??_I2C1_MasterWriteTRBBuild 001B  
                   ?_TMR0_Initialize 0001                            ?_I2C1_ISR 0001  
                             clear_0 1AFE                               clear_1 1B0A  
                             clear_2 1B16                     __end_of_oled_cmd 1C92  
                 ??_EUSART_CompWrite 0015                       oled_data@write 00D2  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
               _EUSART2_Transmit_ISR 1B2A             ADC_GetConversion@channel 0018  
              __end_of_TMR0_CallBack 1D12                      ??_EUSART1_Write 0014  
      I2C1_MasterWriteTRBBuild@pdata 0016                      _eusart1RxBuffer 0100  
      __size_of_INTERRUPT_Initialize 0014                __end_of_TMR1_CallBack 1DB6  
                    _eusart1TxBuffer 0140                      _eusart2RxBuffer 0060  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 1C92  
                    _eusart2TxBuffer 00B0                           __accesstop 0060  
            __end_of__initialization 1B1C                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                       _i2c1_trb_count 003F  
              _I2C1_FunctionComplete 1D42                 _I2C1_BusCollisionISR 1DBE  
                     __pcstackCOMRAM 0001               I2C1_MasterWrite@length 001F  
                _timer0ReloadVal8bit 00E9                  ??_SYSTEM_Initialize 0014  
                          ?_TMR0_ISR 0001                            ?_TMR1_ISR 0001  
                         ??_I2C1_ISR 0004                 __end_of_EUSART1_Read 1AF8  
               __end_of_EUSART2_Read 1AC4               ??_EUSART1_Transmit_ISR 0001  
              ?_EUSART2_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 1C3E  
                   ?_TMR0_StartTimer 0001            __end_of_SYSTEM_Initialize 1CB8  
                      _eusart1RxHead 0035                        _eusart2RxHead 003A  
                      _eusart1TxHead 0037                        _eusart1RxTail 0036  
                      _eusart2TxHead 003C                           __pbssBANK0 0060  
                         __pbssBANK1 0100                        _eusart2RxTail 003B  
                      _eusart1TxTail 0038                        _eusart2TxTail 003D  
                    __CFG_PLLCFG$OFF 000000              I2C_M_write@slaveTimeOut 00BA  
                         __pnvCOMRAM 004A                EUSART2_Read@readValue 0014  
              ?_I2C1_BusCollisionISR 0001                   __CFG_CCP2MX$PORTC1 000000  
                 __size_of_oled_data 002A                   __size_of_oled_init 003A  
                   ?_TMR1_StartTimer 0001                           ??_TMR0_ISR 0001  
                         ??_TMR1_ISR 0001                   __CFG_CCP3MX$PORTB5 000000  
             __size_of_oled_contrast 003C                      _I2C1_Initialize 1B8C  
                      ??_I2C_M_write 0027              __size_of_ADC_Initialize 0016  
                            _OSCCON2 000FD2          __end_of_EUSART2_Receive_ISR 1C12  
                          _I2C1_Stop 1970                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SPBRGH2 000F76               __size_of_oled_position 0018  
                            _SSP1ADD 000FC8                              _SSP1BUF 000FC9  
             __size_of_oled_str_disp 00A0                   main@recievedbefore 0045  
      I2C1_MasterTRBInsert@ptrb_list 0014                    oled_contrast@cont 00D7  
                          ?_oled_cmd 0001                      __CFG_PWRTEN$OFF 000000  
             ?_I2C1_FunctionComplete 0001                              __Hparam 0000  
      __size_of_I2C1_MasterTRBInsert 009E                              __Lparam 0000  
                 _p_i2c1_trb_current 0030                         __psmallconst 1000  
                            __pcinit 1AF8                              __ramtop 1000  
                            __ptext0 100C                              __ptext1 1634  
                            __ptext2 1D12                              __ptext3 1C3E  
                            __ptext4 19EA                              __ptext5 19AE  
                            __ptext6 1D2A                              __ptext7 1C68  
                            __ptext8 1772                              __ptext9 180A  
                          _T0CONbits 000FD5                            _T1CONbits 000FCD  
              _OSCILLATOR_Initialize 1D96               ??_EUSART2_Transmit_ISR 0001  
                         _oled_clear 1D2A                   _EUSART1_Initialize 1A5A  
           ??_PIN_MANAGER_Initialize 0014                              _waitCTS 0042  
                         ?_I2C1_Stop 0001                  __end_of_I2C_M_write 180A  
                  __end_of_oled_data 1C68                              _tmrFlag 0041  
                     oled_str_disp@i 00DE                    __end_of_oled_init 1A24  
                            _subdata 0040                        _oled_contrast 19AE  
         __size_of_SYSTEM_Initialize 0026                 I2C1_ISR@pi2c_buf_ptr 00B8  
               end_of_initialization 1B1C                  ?_EUSART1_Initialize 0001  
                      __Lmediumconst 0000                           ??_oled_cmd 0027  
             ??_I2C1_BusCollisionISR 0001              __end_of_I2C1_Initialize 1BBA  
                 _EUSART2_Initialize 1A24                        _oled_position 1D12  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                __size_of_EUSART1_Read 0034  
              __size_of_EUSART2_Read 0034                        _oled_str_disp 1634  
               ??_EUSART1_Initialize 0014                  ?_EUSART2_Initialize 0001  
                          _PORTAbits 000F80                            _PORTBbits 000F81  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
          __size_of_I2C1_MasterWrite 004A                    __size_of_I2C1_ISR 0242  
                     ?_oled_contrast 0001            __size_of_EUSART_CompWrite 0012  
                EUSART1_Write@txData 0014    I2C1_ISR@i2c_10bit_address_restart 0032  
               ??_EUSART2_Initialize 0014                         _EUSART1_Read 1AC4  
                       _EUSART2_Read 1A90              I2C1_MasterWrite@address 0020  
                     ?_oled_position 00D6                       ?_oled_str_disp 00D8  
       __end_of_INTERRUPT_Initialize 1D84              I2C1_MasterWrite@trBlock 00C6  
                  __size_of_TMR0_ISR 000C                    __size_of_TMR1_ISR 002C  
           I2C1_Stop@completion_code 0003                       _ADC_Initialize 1D5A  
                        _I2C_M_write 1772               ?_OSCILLATOR_Initialize 0001  
                       oled_cmd@work 00D5                          ?_oled_clear 0001  
                start_initialization 1AF8                          ??_I2C1_Stop 0001  
           __size_of_TMR0_Initialize 001C      __size_of_PIN_MANAGER_Initialize 0046  
  __size_of_I2C1_MasterWriteTRBBuild 0044            ?_I2C1_MasterWriteTRBBuild 0014  
              __end_of_EUSART1_Write 189E                     main@recieveddata 0046  
                   ?_I2C1_Initialize 0001             __size_of_TMR1_Initialize 0022  
             __size_of_TMR0_CallBack 001C               __end_of_ADC_Initialize 1D70  
             __size_of_TMR1_CallBack 0006         I2C1_MasterWriteTRBBuild@ptrb 0014  
                     _eusart1RxCount 0034                       _eusart2RxCount 0039  
              TMR1_ISR@CountCallBack 00BE                      ??_oled_contrast 00D6  
                        __pbssCOMRAM 0027        __size_of_EUSART1_Transmit_ISR 0048  
                      __pcstackBANK0 00D4                        _i2c1_tr_queue 00CB  
                   oled_position@col 00D6              ??_I2C1_FunctionComplete 0001  
       __size_of_EUSART1_Receive_ISR 002C                      ??_oled_position 0027  
                          __pnvBANK0 00E7             __size_of_TMR0_StartTimer 0004  
                    ??_oled_str_disp 00DB               _PIN_MANAGER_Initialize 18E6  
                __size_of_oled_clear 0018                    __size_of_oled_cmd 002A  
                          __pintcode 0008                      ?_ADC_Initialize 0001  
                           _I2C1_ISR 13F2         ??_INTERRUPT_InterruptManager 0006  
                      I2C_M_write@wr 0024                     _I2C1_MasterWrite 180A  
                           _BAUD1CON 000FB8                             _BAUD2CON 000F70  
                        __smallconst 1000         __end_of_I2C1_MasterTRBInsert 1772  
           __size_of_TMR1_StartTimer 0004                     _EUSART_CompWrite 1D84  
                      _TMR0_CallBack 1CF6                 _INTERRUPT_Initialize 1D70  
                          _oled_data 1C3E                            _oled_init 19EA  
                      _TMR1_CallBack 1DB0               I2C1_MasterRead@trBlock 00C1  
                  ??_TMR0_Initialize 0014         __size_of_EUSART2_Receive_ISR 002C  
                           _LATEbits 000F8D                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _IPR3bits 000FA5                             _PIE2bits 000FA0  
                           _PIE3bits 000FA3  __size_of_INTERRUPT_InterruptManager 00D4  
                           i2u144_45 1D0C                             i2u144_46 1D0E  
                           i2u172_45 18DE                             i2u172_46 18E0  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                           _PIR3bits 000FA4                             _RCONbits 000FD0  
                    I2C_M_write@addr 00D4                     __CFG_WDTPS$32768 000000  
                           _SSP1CON1 000FC6                             _SSP1CON3 000FCB  
                           _TMR0_ISR 1DA4                             _TMR1_ISR 1BBA  
                           _SSP1STAT 000FC7                     oled_str_disp@col 00D8  
                  ??_TMR1_Initialize 0014                           _ADCON0bits 000FC2  
      __size_of_EUSART2_Transmit_ISR 0032                       ?_TMR0_CallBack 0001  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                     ?_TMR1_CallBack 0001                           ?_oled_data 0001  
                         ?_oled_init 0001                EUSART1_Read@readValue 0014  
                           __Hrparam 0000        __size_of_I2C1_BusCollisionISR 0002  
                           __Lrparam 0000                    _ADC_GetConversion 1B5C  
                 __CFG_BOREN$SBORDIS 000000               I2C1_ISR@i2c_bytes_left 0033  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0014  
                 ?_ADC_GetConversion 0014                    ??_TMR0_StartTimer 0014  
        __size_of_EUSART1_Initialize 0036                         ?_I2C_M_write 0024  
   __end_of_I2C1_MasterWriteTRBBuild 1970                      oled_position@li 00D7  
                ??_ADC_GetConversion 0016                         ??_oled_clear 00D6  
                I2C1_ISR@i2c_address 0047                             __ptext10 192C  
                           __ptext11 16D4                             __ptext20 1B8C  
                           __ptext12 1C92                             __ptext21 1A24  
                           __ptext13 1CB8                           _T1GCONbits 000FCC  
                           __ptext30 1BBA                             __ptext22 1A5A  
                           __ptext14 1DB6                             __ptext31 1DB0  
                           __ptext23 1D5A                             __ptext15 1CDA  
                           __ptext40 189E                             __ptext32 1DA4  
                           __ptext24 1D84                             __ptext16 1DBA  
                           __ptext41 1C12                             __ptext33 1CF6  
                           __ptext25 1854                             __ptext17 18E6  
                           __ptext34 13F2                             __ptext26 1A90  
                           __ptext18 1D96                             __ptext35 1970  
                           __ptext27 1AC4                             __ptext19 1D70  
                           __ptext36 1D42                             __ptext28 1B5C  
                           __ptext37 1DBE                             __ptext38 1B2A  
                           __ptext39 1BE6                         _SSP1CON1bits 000FC6  
                       _SSP1CON2bits 000FC5                    ??_TMR1_StartTimer 0014  
        __size_of_EUSART2_Initialize 0036                        __size_of_main 03E6  
                           _oled_cmd 1C68            __end_of_ADC_GetConversion 1B8C  
               _I2C1_MasterTRBInsert 16D4                           _RC1STAbits 000FAB  
                         _RC2STAbits 000F71                   __end_of_oled_clear 1D42  
                    oled_str_disp@li 00DD                             int$flags 004C  
 __end_of_INTERRUPT_InterruptManager 00DC           _INTERRUPT_InterruptManager 0008  
                           main@line 0044                  _EUSART1_Receive_ISR 1C12  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 0001  
             ??_INTERRUPT_Initialize 0014                      ??_TMR1_CallBack 0001  
                           intlevel2 0000                          ??_oled_data 0027  
                        ??_oled_init 00D6                 ?_EUSART1_Receive_ISR 0001  
                 I2C_M_write@timeOut 00BC              ?_PIN_MANAGER_Initialize 0001  
           __end_of_I2C1_MasterWrite 1854       __size_of_I2C1_FunctionComplete 0018  
      __end_of_I2C1_FunctionComplete 1D5A                ?_I2C1_MasterTRBInsert 0014  
       __end_of_EUSART1_Transmit_ISR 18E6                     ??_ADC_Initialize 0014  
           __end_of_EUSART_CompWrite 1D96             __size_of_I2C1_Initialize 002E  
             __size_of_EUSART1_Write 004A                  _EUSART2_Receive_ISR 1BE6  
                  I2C_M_write@length 0026                    I2C_M_write@status 0049  
                    _TMR0_Initialize 1CDA                  oled_str_disp@string 00D9  
           _I2C1_MasterWriteTRBBuild 192C                    __CFG_T3CMX$PORTC0 000000  
              __end_of_oled_contrast 19EA                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 192C                 ?_EUSART2_Receive_ISR 0001  
                 __size_of_I2C1_Stop 003E                    __CFG_FOSC$INTIO67 000000  
         __size_of_ADC_GetConversion 0030                      _TMR1_Initialize 1CB8  
              __end_of_oled_position 1D2A  
