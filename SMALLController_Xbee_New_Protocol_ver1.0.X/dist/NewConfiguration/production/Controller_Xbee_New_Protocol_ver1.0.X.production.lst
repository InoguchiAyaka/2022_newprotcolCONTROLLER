

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Aug 09 15:57:52 2022

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 1.42
    61                           ; Generated 13/04/2017 GMT
    62                           ; 
    63                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F46K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	nvCOMRAM
    96  000049                     __pnvCOMRAM:
    97                           	opt stack 0
    98  000049                     _timer1ReloadVal:
    99                           	opt stack 0
   100  000049                     	ds	2
   101  00004B                     _timer0ReloadVal8bit:
   102                           	opt stack 0
   103  00004B                     	ds	1
   104                           
   105                           	psect	nvBANK0
   106  0000E9                     __pnvBANK0:
   107                           	opt stack 0
   108  0000E9                     _eusart1TxBufferRemaining:
   109                           	opt stack 0
   110  0000E9                     	ds	1
   111  0000EA                     _eusart2TxBufferRemaining:
   112                           	opt stack 0
   113  0000EA                     	ds	1
   114  0000                     _ANSELE	set	3900
   115  0000                     _ANSELD	set	3899
   116  0000                     _ANSELC	set	3898
   117  0000                     _ANSELB	set	3897
   118  0000                     _ANSELA	set	3896
   119  0000                     _TMR1	set	4046
   120  0000                     _PORTCbits	set	3970
   121  0000                     _PORTDbits	set	3971
   122  0000                     _PORTBbits	set	3969
   123  0000                     _LATEbits	set	3981
   124  0000                     _RCREG1	set	4014
   125  0000                     _RC1STAbits	set	4011
   126  0000                     _TXREG1	set	4013
   127  0000                     _SPBRGH1	set	4016
   128  0000                     _SPBRG1	set	4015
   129  0000                     _TX1STA	set	4012
   130  0000                     _RC1STA	set	4011
   131  0000                     _BAUD1CON	set	4024
   132  0000                     _RCREG2	set	3956
   133  0000                     _RC2STAbits	set	3953
   134  0000                     _TXREG2	set	3955
   135  0000                     _SPBRGH2	set	3958
   136  0000                     _SPBRG2	set	3957
   137  0000                     _TX2STA	set	3954
   138  0000                     _RC2STA	set	3953
   139  0000                     _BAUD2CON	set	3952
   140  0000                     _SSP1BUF	set	4041
   141  0000                     _SSP1CON2bits	set	4037
   142  0000                     _SSP1CON1bits	set	4038
   143  0000                     _SSP1ADD	set	4040
   144  0000                     _SSP1CON3	set	4043
   145  0000                     _SSP1CON1	set	4038
   146  0000                     _SSP1STAT	set	4039
   147  0000                     _PORTAbits	set	3968
   148  0000                     _T0CONbits	set	4053
   149  0000                     _TMR0L	set	4054
   150  0000                     _TMR0H	set	4055
   151  0000                     _T0CON	set	4053
   152  0000                     _T1GCONbits	set	4044
   153  0000                     _T1CONbits	set	4045
   154  0000                     _TMR1L	set	4046
   155  0000                     _TMR1H	set	4047
   156  0000                     _T1GCON	set	4044
   157  0000                     _T1CON	set	4045
   158  0000                     _OSCTUNE	set	3995
   159  0000                     _OSCCON2	set	4050
   160  0000                     _OSCCON	set	4051
   161  0000                     _INTCONbits	set	4082
   162  0000                     _PIR3bits	set	4004
   163  0000                     _PIE3bits	set	4003
   164  0000                     _PIR2bits	set	4001
   165  0000                     _PIE2bits	set	4000
   166  0000                     _PIR1bits	set	3998
   167  0000                     _PIE1bits	set	3997
   168  0000                     _IPR3bits	set	4005
   169  0000                     _IPR2bits	set	4002
   170  0000                     _IPR1bits	set	3999
   171  0000                     _RCONbits	set	4048
   172  0000                     _INTCON2bits	set	4081
   173  0000                     _TRISE	set	3990
   174  0000                     _LATE	set	3981
   175  0000                     _TRISD	set	3989
   176  0000                     _LATD	set	3980
   177  0000                     _TRISC	set	3988
   178  0000                     _LATC	set	3979
   179  0000                     _WPUB	set	3937
   180  0000                     _TRISB	set	3987
   181  0000                     _LATB	set	3978
   182  0000                     _TRISA	set	3986
   183  0000                     _LATA	set	3977
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADRESH	set	4036
   186  0000                     _ADRESL	set	4035
   187  0000                     _ADCON2	set	4032
   188  0000                     _ADCON1	set	4033
   189  0000                     _ADCON0	set	4034
   190                           
   191                           	psect	smallconst
   192  001000                     __psmallconst:
   193                           	opt stack 0
   194  001000  00                 	db	0
   195  001001                     STR_1:
   196  001001  4F                 	db	79	;'O'
   197  001002  4C                 	db	76	;'L'
   198  001003  45                 	db	69	;'E'
   199  001004  44                 	db	68	;'D'
   200  001005  20                 	db	32
   201  001006  54                 	db	84	;'T'
   202  001007  45                 	db	69	;'E'
   203  001008  53                 	db	83	;'S'
   204  001009  54                 	db	84	;'T'
   205  00100A  00                 	db	0
   206                           
   207                           ; #config settings
   208  00100B  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  001B76                     __pcinit:
   212                           	opt stack 0
   213  001B76                     start_initialization:
   214                           	opt stack 0
   215  001B76                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Clear objects allocated to BANK1 (128 bytes)
   219  001B76  EE01  F000         	lfsr	0,__pbssBANK1
   220  001B7A  0E80               	movlw	128
   221  001B7C                     clear_0:
   222  001B7C  6AEE               	clrf	postinc0,c
   223  001B7E  06E8               	decf	wreg,f,c
   224  001B80  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK0 (118 bytes)
   227  001B82  EE00  F060         	lfsr	0,__pbssBANK0
   228  001B86  0E76               	movlw	118
   229  001B88                     clear_1:
   230  001B88  6AEE               	clrf	postinc0,c
   231  001B8A  06E8               	decf	wreg,f,c
   232  001B8C  E1FD               	bnz	clear_1
   233                           
   234                           ; Clear objects allocated to COMRAM (34 bytes)
   235  001B8E  EE00  F027         	lfsr	0,__pbssCOMRAM
   236  001B92  0E22               	movlw	34
   237  001B94                     clear_2:
   238  001B94  6AEE               	clrf	postinc0,c
   239  001B96  06E8               	decf	wreg,f,c
   240  001B98  E1FD               	bnz	clear_2
   241  001B9A                     end_of_initialization:
   242                           	opt stack 0
   243  001B9A                     __end_of__initialization:
   244                           	opt stack 0
   245  001B9A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246  001B9C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247  001B9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248  001BA0  6EF8               	movwf	tblptru,c
   249  001BA2  0100               	movlb	0
   250  001BA4  EF06  F008         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	bssCOMRAM
   256  000027                     __pbssCOMRAM:
   257                           	opt stack 0
   258  000027                     I2C1_ISR@pi2c_buf_ptr:
   259                           	opt stack 0
   260  000027                     	ds	2
   261  000029                     _p_i2c1_current:
   262                           	opt stack 0
   263  000029                     	ds	2
   264  00002B                     _p_i2c1_trb_current:
   265                           	opt stack 0
   266  00002B                     	ds	2
   267  00002D                     TMR1_ISR@CountCallBack:
   268                           	opt stack 0
   269  00002D                     	ds	2
   270  00002F                     main@escaped:
   271                           	opt stack 0
   272  00002F                     	ds	1
   273  000030                     main@line:
   274                           	opt stack 0
   275  000030                     	ds	1
   276  000031                     main@columun:
   277                           	opt stack 0
   278  000031                     	ds	1
   279  000032                     main@recievedbefore:
   280                           	opt stack 0
   281  000032                     	ds	1
   282  000033                     main@recieveddata:
   283                           	opt stack 0
   284  000033                     	ds	1
   285  000034                     _not_of_before_data:
   286                           	opt stack 0
   287  000034                     	ds	1
   288  000035                     _eusart1RxCount:
   289                           	opt stack 0
   290  000035                     	ds	1
   291  000036                     _eusart1RxTail:
   292                           	opt stack 0
   293  000036                     	ds	1
   294  000037                     _eusart1RxHead:
   295                           	opt stack 0
   296  000037                     	ds	1
   297  000038                     _eusart1TxTail:
   298                           	opt stack 0
   299  000038                     	ds	1
   300  000039                     _eusart1TxHead:
   301                           	opt stack 0
   302  000039                     	ds	1
   303  00003A                     _eusart2RxCount:
   304                           	opt stack 0
   305  00003A                     	ds	1
   306  00003B                     _eusart2RxTail:
   307                           	opt stack 0
   308  00003B                     	ds	1
   309  00003C                     _eusart2RxHead:
   310                           	opt stack 0
   311  00003C                     	ds	1
   312  00003D                     _eusart2TxTail:
   313                           	opt stack 0
   314  00003D                     	ds	1
   315  00003E                     _eusart2TxHead:
   316                           	opt stack 0
   317  00003E                     	ds	1
   318  00003F                     I2C1_ISR@i2c_10bit_address_restart:
   319                           	opt stack 0
   320  00003F                     	ds	1
   321  000040                     I2C1_ISR@i2c_bytes_left:
   322                           	opt stack 0
   323  000040                     	ds	1
   324  000041                     _i2c1_trb_count:
   325                           	opt stack 0
   326  000041                     	ds	1
   327  000042                     _i2c1_state:
   328                           	opt stack 0
   329  000042                     	ds	1
   330  000043                     _subdata:
   331                           	opt stack 0
   332  000043                     	ds	1
   333  000044                     _waitCTS:
   334                           	opt stack 0
   335  000044                     	ds	1
   336  000045                     _tmrFlag:
   337                           	opt stack 0
   338  000045                     	ds	1
   339  000046                     I2C1_ISR@i2c_address:
   340                           	opt stack 0
   341  000046                     	ds	2
   342  000048                     I2C_M_write@status:
   343                           	opt stack 0
   344  000048                     	ds	1
   345                           tblptru	equ	0xFF8
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           
   349                           	psect	bssBANK0
   350  000060                     __pbssBANK0:
   351                           	opt stack 0
   352  000060                     _eusart2RxBuffer:
   353                           	opt stack 0
   354  000060                     	ds	64
   355  0000A0                     _str:
   356                           	opt stack 0
   357  0000A0                     	ds	16
   358  0000B0                     _eusart2TxBuffer:
   359                           	opt stack 0
   360  0000B0                     	ds	8
   361  0000B8                     _i2c1_object:
   362                           	opt stack 0
   363  0000B8                     	ds	7
   364  0000BF                     I2C_M_write@slaveTimeOut:
   365                           	opt stack 0
   366  0000BF                     	ds	2
   367  0000C1                     I2C_M_write@timeOut:
   368                           	opt stack 0
   369  0000C1                     	ds	2
   370  0000C3                     I2C1_MasterRead@trBlock:
   371                           	opt stack 0
   372  0000C3                     	ds	5
   373  0000C8                     I2C1_MasterWrite@trBlock:
   374                           	opt stack 0
   375  0000C8                     	ds	5
   376  0000CD                     _i2c1_tr_queue:
   377                           	opt stack 0
   378  0000CD                     	ds	5
   379  0000D2                     oled_data@write:
   380                           	opt stack 0
   381  0000D2                     	ds	2
   382  0000D4                     oled_cmd@write:
   383                           	opt stack 0
   384  0000D4                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           
   389                           	psect	bssBANK1
   390  000100                     __pbssBANK1:
   391                           	opt stack 0
   392  000100                     _eusart1RxBuffer:
   393                           	opt stack 0
   394  000100                     	ds	64
   395  000140                     _eusart1TxBuffer:
   396                           	opt stack 0
   397  000140                     	ds	64
   398                           tblptru	equ	0xFF8
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           	psect	cstackBANK0
   403  0000D6                     __pcstackBANK0:
   404                           	opt stack 0
   405  0000D6                     I2C_M_write@addr:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x0
   409  0000D6                     	ds	1
   410  0000D7                     oled_cmd@work:
   411                           	opt stack 0
   412  0000D7                     oled_data@work:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416  0000D7                     	ds	1
   417  0000D8                     ??_oled_init:
   418  0000D8                     ??_oled_contrast:
   419  0000D8                     ??_oled_clear:
   420  0000D8                     oled_position@col:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x2
   424  0000D8                     	ds	1
   425  0000D9                     oled_position@li:
   426                           	opt stack 0
   427  0000D9                     oled_contrast@cont:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x3
   431  0000D9                     	ds	1
   432  0000DA                     oled_str_disp@col:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x4
   436  0000DA                     	ds	1
   437  0000DB                     oled_str_disp@string:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x5
   441  0000DB                     	ds	2
   442  0000DD                     ??_oled_str_disp:
   443                           
   444                           ; 1 bytes @ 0x7
   445  0000DD                     	ds	2
   446  0000DF                     oled_str_disp@li:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x9
   450  0000DF                     	ds	1
   451  0000E0                     oled_str_disp@i:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0xA
   455  0000E0                     	ds	1
   456  0000E1                     ??_main:
   457                           
   458                           ; 1 bytes @ 0xB
   459  0000E1                     	ds	8
   460                           tblptru	equ	0xFF8
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           
   464                           	psect	cstackCOMRAM
   465  000001                     __pcstackCOMRAM:
   466                           	opt stack 0
   467  000001                     ??_I2C1_Stop:
   468  000001                     
   469                           ; 1 bytes @ 0x0
   470  000001                     	ds	2
   471  000003                     I2C1_Stop@completion_code:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x2
   475  000003                     	ds	1
   476  000004                     ??_I2C1_ISR:
   477                           
   478                           ; 1 bytes @ 0x3
   479  000004                     	ds	2
   480  000006                     ??_INTERRUPT_InterruptManager:
   481                           
   482                           ; 1 bytes @ 0x5
   483  000006                     	ds	14
   484  000014                     ?_ADC_GetConversion:
   485                           	opt stack 0
   486  000014                     EUSART2_Read@readValue:
   487                           	opt stack 0
   488  000014                     EUSART1_Read@readValue:
   489                           	opt stack 0
   490  000014                     EUSART1_Write@txData:
   491                           	opt stack 0
   492  000014                     I2C1_MasterTRBInsert@ptrb_list:
   493                           	opt stack 0
   494  000014                     I2C1_MasterWriteTRBBuild@ptrb:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x13
   498  000014                     	ds	1
   499  000015                     ??_EUSART_CompWrite:
   500                           
   501                           ; 1 bytes @ 0x14
   502  000015                     	ds	1
   503  000016                     ??_ADC_GetConversion:
   504  000016                     EUSART_CompWrite@data:
   505                           	opt stack 0
   506  000016                     I2C1_MasterTRBInsert@pflag:
   507                           	opt stack 0
   508  000016                     I2C1_MasterWriteTRBBuild@pdata:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x15
   512  000016                     	ds	2
   513  000018                     ADC_GetConversion@channel:
   514                           	opt stack 0
   515  000018                     I2C1_MasterWriteTRBBuild@length:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x17
   519  000018                     	ds	1
   520  000019                     I2C1_MasterTRBInsert@count:
   521                           	opt stack 0
   522  000019                     I2C1_MasterWriteTRBBuild@address:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x18
   526  000019                     	ds	2
   527  00001B                     ??_I2C1_MasterWriteTRBBuild:
   528                           
   529                           ; 1 bytes @ 0x1A
   530  00001B                     	ds	2
   531  00001D                     I2C1_MasterWrite@pdata:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x1C
   535  00001D                     	ds	2
   536  00001F                     I2C1_MasterWrite@length:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x1E
   540  00001F                     	ds	1
   541  000020                     I2C1_MasterWrite@address:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1F
   545  000020                     	ds	2
   546  000022                     I2C1_MasterWrite@pflag:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x21
   550  000022                     	ds	2
   551  000024                     I2C_M_write@wr:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x23
   555  000024                     	ds	2
   556  000026                     I2C_M_write@length:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x25
   560  000026                     	ds	1
   561  000027                     tblptru	equ	0xFF8
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           
   565                           ; 1 bytes @ 0x26
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   568 ;;
   569 ;; *************** function _main *****************
   570 ;; Defined at:
   571 ;;		line 263 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        8 bytes
   590 ;; Hardware stack levels required when called:    9
   591 ;; This function calls:
   592 ;;		_ADC_GetConversion
   593 ;;		_EUSART1_Read
   594 ;;		_EUSART1_Write
   595 ;;		_EUSART2_Read
   596 ;;		_EUSART_CompWrite
   597 ;;		_SYSTEM_Initialize
   598 ;;		_oled_clear
   599 ;;		_oled_contrast
   600 ;;		_oled_data
   601 ;;		_oled_init
   602 ;;		_oled_position
   603 ;;		_oled_str_disp
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text0
   610  00100C                     __ptext0:
   611                           	opt stack 0
   612  00100C                     _main:
   613                           	opt stack 22
   614                           
   615                           ;main.c: 266: SYSTEM_Initialize();
   616                           
   617                           ;incstack = 0
   618  00100C  EC73  F00E         	call	_SYSTEM_Initialize	;wreg free
   619                           
   620                           ;main.c: 271: (INTCONbits.GIE = 1);
   621  001010  8EF2               	bsf	intcon,7,c	;volatile
   622                           
   623                           ;main.c: 274: (INTCONbits.PEIE = 1);
   624  001012  8CF2               	bsf	intcon,6,c	;volatile
   625                           
   626                           ;main.c: 283: LATEbits.LATE2=0;
   627  001014  948D               	bcf	3981,2,c	;volatile
   628                           
   629                           ;main.c: 285: PORTAbits.RA4=0;
   630  001016  9880               	bcf	3968,4,c	;volatile
   631                           
   632                           ;main.c: 287: _delay((unsigned long)((5)*(64000000/4000.0)));
   633  001018  0E68               	movlw	104
   634  00101A  0100               	movlb	0	; () banked
   635  00101C  6FE1               	movwf	??_main& (0+255),b
   636  00101E  0EE4               	movlw	228
   637  001020                     u3257:
   638  001020  2EE8               	decfsz	wreg,f,c
   639  001022  D7FE               	bra	u3257
   640  001024  2FE1               	decfsz	??_main& (0+255),f,b
   641  001026  D7FC               	bra	u3257
   642  001028  F000               	nop	
   643                           
   644                           ;main.c: 288: oled_init();
   645  00102A  ECD6  F00C         	call	_oled_init	;wreg free
   646                           
   647                           ;main.c: 289: oled_contrast(0xFF);
   648  00102E  0EFF               	movlw	255
   649  001030  ECF5  F00C         	call	_oled_contrast
   650                           
   651                           ;main.c: 290: oled_str_disp(0, 0, "OLED TEST");
   652  001034  0E00               	movlw	0
   653  001036  0100               	movlb	0	; () banked
   654  001038  6FDA               	movwf	oled_str_disp@col& (0+255),b
   655  00103A  0E01               	movlw	low STR_1
   656  00103C  0100               	movlb	0	; () banked
   657  00103E  6FDB               	movwf	oled_str_disp@string& (0+255),b
   658  001040  0E10               	movlw	high STR_1
   659  001042  0100               	movlb	0	; () banked
   660  001044  6FDC               	movwf	(oled_str_disp@string+1)& (0+255),b
   661  001046  0E00               	movlw	0
   662  001048  EC85  F00B         	call	_oled_str_disp
   663  00104C                     l2856:
   664                           
   665                           ;main.c: 292: if (tmrFlag) {
   666  00104C  5045               	movf	_tmrFlag,w,c
   667  00104E  B4D8               	btfsc	status,2,c
   668  001050  D165               	goto	l2864
   669                           
   670                           ;main.c: 293: tmrFlag = 0;
   671  001052  0E00               	movlw	0
   672  001054  6E45               	movwf	_tmrFlag,c
   673                           
   674                           ;main.c: 294: EUSART1_Write('S');
   675  001056  0E53               	movlw	83
   676  001058  EC47  F00C         	call	_EUSART1_Write
   677                           
   678                           ;main.c: 295: not_of_before_data = 0x05;
   679  00105C  0E05               	movlw	5
   680  00105E  6E34               	movwf	_not_of_before_data,c
   681                           
   682                           ;main.c: 296: EUSART_CompWrite((PORTBbits.RB0 << 7) | (PORTDbits.RD3 << 6) | (PORTCbits.
      +                          RC0 << 5) | (PORTDbits.RD4 << 4)
   683                           ;main.c: 297: | ((subdata.IO_LCrossD) << 3) | ((subdata.IO_LCrossU) << 2) | ((subdata.IO
      +                          _LCrossR) << 1) | ((subdata.IO_LCrossL) << 0));
   684  001060  A643               	btfss	_subdata,3,c
   685  001062  D004               	goto	u2720
   686  001064  0100               	movlb	0	; () banked
   687  001066  6BE1               	clrf	??_main& (0+255),b
   688  001068  2BE1               	incf	??_main& (0+255),f,b
   689  00106A  D002               	goto	u2728
   690  00106C                     u2720:
   691  00106C  0100               	movlb	0	; () banked
   692  00106E  6BE1               	clrf	??_main& (0+255),b
   693  001070                     u2728:
   694  001070  A443               	btfss	_subdata,2,c
   695  001072  D004               	goto	u2730
   696  001074  0E02               	movlw	2
   697  001076  0100               	movlb	0	; () banked
   698  001078  6FE2               	movwf	(??_main+1)& (0+255),b
   699  00107A  D002               	goto	u2745
   700  00107C                     u2730:
   701  00107C  0100               	movlb	0	; () banked
   702  00107E  6BE2               	clrf	(??_main+1)& (0+255),b
   703  001080                     u2745:
   704  001080  A043               	btfss	_subdata,0,c
   705  001082  D004               	goto	u2750
   706  001084  0E04               	movlw	4
   707  001086  0100               	movlb	0	; () banked
   708  001088  6FE3               	movwf	(??_main+2)& (0+255),b
   709  00108A  D002               	goto	u2765
   710  00108C                     u2750:
   711  00108C  0100               	movlb	0	; () banked
   712  00108E  6BE3               	clrf	(??_main+2)& (0+255),b
   713  001090                     u2765:
   714  001090  A243               	btfss	_subdata,1,c
   715  001092  D004               	goto	u2770
   716  001094  0E08               	movlw	8
   717  001096  0100               	movlb	0	; () banked
   718  001098  6FE4               	movwf	(??_main+3)& (0+255),b
   719  00109A  D002               	goto	u2785
   720  00109C                     u2770:
   721  00109C  0100               	movlb	0	; () banked
   722  00109E  6BE4               	clrf	(??_main+3)& (0+255),b
   723  0010A0                     u2785:
   724  0010A0  A883               	btfss	3971,4,c	;volatile
   725  0010A2  D004               	goto	u2790
   726  0010A4  0E10               	movlw	16
   727  0010A6  0100               	movlb	0	; () banked
   728  0010A8  6FE5               	movwf	(??_main+4)& (0+255),b
   729  0010AA  D002               	goto	u2805
   730  0010AC                     u2790:
   731  0010AC  0100               	movlb	0	; () banked
   732  0010AE  6BE5               	clrf	(??_main+4)& (0+255),b
   733  0010B0                     u2805:
   734  0010B0  A082               	btfss	3970,0,c	;volatile
   735  0010B2  D004               	goto	u2810
   736  0010B4  0E20               	movlw	32
   737  0010B6  0100               	movlb	0	; () banked
   738  0010B8  6FE6               	movwf	(??_main+5)& (0+255),b
   739  0010BA  D002               	goto	u2825
   740  0010BC                     u2810:
   741  0010BC  0100               	movlb	0	; () banked
   742  0010BE  6BE6               	clrf	(??_main+5)& (0+255),b
   743  0010C0                     u2825:
   744  0010C0  A683               	btfss	3971,3,c	;volatile
   745  0010C2  D004               	goto	u2830
   746  0010C4  0E40               	movlw	64
   747  0010C6  0100               	movlb	0	; () banked
   748  0010C8  6FE7               	movwf	(??_main+6)& (0+255),b
   749  0010CA  D002               	goto	u2845
   750  0010CC                     u2830:
   751  0010CC  0100               	movlb	0	; () banked
   752  0010CE  6BE7               	clrf	(??_main+6)& (0+255),b
   753  0010D0                     u2845:
   754  0010D0  A081               	btfss	3969,0,c	;volatile
   755  0010D2  D004               	goto	u2850
   756  0010D4  0E80               	movlw	128
   757  0010D6  0100               	movlb	0	; () banked
   758  0010D8  6FE8               	movwf	(??_main+7)& (0+255),b
   759  0010DA  D002               	goto	u2865
   760  0010DC                     u2850:
   761  0010DC  0100               	movlb	0	; () banked
   762  0010DE  6BE8               	clrf	(??_main+7)& (0+255),b
   763  0010E0                     u2865:
   764  0010E0  0100               	movlb	0	; () banked
   765  0010E2  51E8               	movf	(??_main+7)& (0+255),w,b
   766  0010E4  0100               	movlb	0	; () banked
   767  0010E6  11E7               	iorwf	(??_main+6)& (0+255),w,b
   768  0010E8  0100               	movlb	0	; () banked
   769  0010EA  11E6               	iorwf	(??_main+5)& (0+255),w,b
   770  0010EC  0100               	movlb	0	; () banked
   771  0010EE  11E5               	iorwf	(??_main+4)& (0+255),w,b
   772  0010F0  0100               	movlb	0	; () banked
   773  0010F2  11E4               	iorwf	(??_main+3)& (0+255),w,b
   774  0010F4  0100               	movlb	0	; () banked
   775  0010F6  11E3               	iorwf	(??_main+2)& (0+255),w,b
   776  0010F8  0100               	movlb	0	; () banked
   777  0010FA  11E2               	iorwf	(??_main+1)& (0+255),w,b
   778  0010FC  0100               	movlb	0	; () banked
   779  0010FE  11E1               	iorwf	??_main& (0+255),w,b
   780  001100  ECED  F00D         	call	_EUSART_CompWrite
   781                           
   782                           ;main.c: 298: EUSART_CompWrite((PORTAbits.RA0 << 7) | (PORTAbits.RA1 << 6) | (PORTDbits.
      +                          RD0 << 5) | (PORTDbits.RD1 << 4)
   783                           ;main.c: 299: | (PORTBbits.RB4 << 3) | (PORTBbits.RB2 << 2) | ((subdata.IO_LMid) << 1) |
      +                           ((subdata.IO_LDown) << 0));
   784  001104  AA43               	btfss	_subdata,5,c
   785  001106  D004               	goto	u2870
   786  001108  0100               	movlb	0	; () banked
   787  00110A  6BE1               	clrf	??_main& (0+255),b
   788  00110C  2BE1               	incf	??_main& (0+255),f,b
   789  00110E  D002               	goto	u2878
   790  001110                     u2870:
   791  001110  0100               	movlb	0	; () banked
   792  001112  6BE1               	clrf	??_main& (0+255),b
   793  001114                     u2878:
   794  001114  A843               	btfss	_subdata,4,c
   795  001116  D004               	goto	u2880
   796  001118  0E02               	movlw	2
   797  00111A  0100               	movlb	0	; () banked
   798  00111C  6FE2               	movwf	(??_main+1)& (0+255),b
   799  00111E  D002               	goto	u2895
   800  001120                     u2880:
   801  001120  0100               	movlb	0	; () banked
   802  001122  6BE2               	clrf	(??_main+1)& (0+255),b
   803  001124                     u2895:
   804  001124  A481               	btfss	3969,2,c	;volatile
   805  001126  D004               	goto	u2900
   806  001128  0E04               	movlw	4
   807  00112A  0100               	movlb	0	; () banked
   808  00112C  6FE3               	movwf	(??_main+2)& (0+255),b
   809  00112E  D002               	goto	u2915
   810  001130                     u2900:
   811  001130  0100               	movlb	0	; () banked
   812  001132  6BE3               	clrf	(??_main+2)& (0+255),b
   813  001134                     u2915:
   814  001134  A881               	btfss	3969,4,c	;volatile
   815  001136  D004               	goto	u2920
   816  001138  0E08               	movlw	8
   817  00113A  0100               	movlb	0	; () banked
   818  00113C  6FE4               	movwf	(??_main+3)& (0+255),b
   819  00113E  D002               	goto	u2935
   820  001140                     u2920:
   821  001140  0100               	movlb	0	; () banked
   822  001142  6BE4               	clrf	(??_main+3)& (0+255),b
   823  001144                     u2935:
   824  001144  A283               	btfss	3971,1,c	;volatile
   825  001146  D004               	goto	u2940
   826  001148  0E10               	movlw	16
   827  00114A  0100               	movlb	0	; () banked
   828  00114C  6FE5               	movwf	(??_main+4)& (0+255),b
   829  00114E  D002               	goto	u2955
   830  001150                     u2940:
   831  001150  0100               	movlb	0	; () banked
   832  001152  6BE5               	clrf	(??_main+4)& (0+255),b
   833  001154                     u2955:
   834  001154  A083               	btfss	3971,0,c	;volatile
   835  001156  D004               	goto	u2960
   836  001158  0E20               	movlw	32
   837  00115A  0100               	movlb	0	; () banked
   838  00115C  6FE6               	movwf	(??_main+5)& (0+255),b
   839  00115E  D002               	goto	u2975
   840  001160                     u2960:
   841  001160  0100               	movlb	0	; () banked
   842  001162  6BE6               	clrf	(??_main+5)& (0+255),b
   843  001164                     u2975:
   844  001164  A280               	btfss	3968,1,c	;volatile
   845  001166  D004               	goto	u2980
   846  001168  0E40               	movlw	64
   847  00116A  0100               	movlb	0	; () banked
   848  00116C  6FE7               	movwf	(??_main+6)& (0+255),b
   849  00116E  D002               	goto	u2995
   850  001170                     u2980:
   851  001170  0100               	movlb	0	; () banked
   852  001172  6BE7               	clrf	(??_main+6)& (0+255),b
   853  001174                     u2995:
   854  001174  A080               	btfss	3968,0,c	;volatile
   855  001176  D004               	goto	u3000
   856  001178  0E80               	movlw	128
   857  00117A  0100               	movlb	0	; () banked
   858  00117C  6FE8               	movwf	(??_main+7)& (0+255),b
   859  00117E  D002               	goto	u3015
   860  001180                     u3000:
   861  001180  0100               	movlb	0	; () banked
   862  001182  6BE8               	clrf	(??_main+7)& (0+255),b
   863  001184                     u3015:
   864  001184  0100               	movlb	0	; () banked
   865  001186  51E8               	movf	(??_main+7)& (0+255),w,b
   866  001188  0100               	movlb	0	; () banked
   867  00118A  11E7               	iorwf	(??_main+6)& (0+255),w,b
   868  00118C  0100               	movlb	0	; () banked
   869  00118E  11E6               	iorwf	(??_main+5)& (0+255),w,b
   870  001190  0100               	movlb	0	; () banked
   871  001192  11E5               	iorwf	(??_main+4)& (0+255),w,b
   872  001194  0100               	movlb	0	; () banked
   873  001196  11E4               	iorwf	(??_main+3)& (0+255),w,b
   874  001198  0100               	movlb	0	; () banked
   875  00119A  11E3               	iorwf	(??_main+2)& (0+255),w,b
   876  00119C  0100               	movlb	0	; () banked
   877  00119E  11E2               	iorwf	(??_main+1)& (0+255),w,b
   878  0011A0  0100               	movlb	0	; () banked
   879  0011A2  11E1               	iorwf	??_main& (0+255),w,b
   880  0011A4  ECED  F00D         	call	_EUSART_CompWrite
   881                           
   882                           ;main.c: 301: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_LHorizon) >> 2));
   883  0011A8  0E02               	movlw	2
   884  0011AA  EC05  F00E         	call	_ADC_GetConversion
   885  0011AE  90D8               	bcf	status,0,c
   886  0011B0  3215               	rrcf	?_ADC_GetConversion+1,f,c
   887  0011B2  3214               	rrcf	?_ADC_GetConversion,f,c
   888  0011B4  90D8               	bcf	status,0,c
   889  0011B6  3215               	rrcf	?_ADC_GetConversion+1,f,c
   890  0011B8  3214               	rrcf	?_ADC_GetConversion,f,c
   891  0011BA  5014               	movf	?_ADC_GetConversion,w,c
   892  0011BC  0800               	sublw	0
   893  0011BE  0100               	movlb	0	; () banked
   894  0011C0  6FE1               	movwf	??_main& (0+255),b
   895  0011C2  0100               	movlb	0	; () banked
   896  0011C4  05E1               	decf	??_main& (0+255),w,b
   897  0011C6  ECED  F00D         	call	_EUSART_CompWrite
   898                           
   899                           ;main.c: 302: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_LVertical) >> 2));
   900  0011CA  0E03               	movlw	3
   901  0011CC  EC05  F00E         	call	_ADC_GetConversion
   902  0011D0  90D8               	bcf	status,0,c
   903  0011D2  3215               	rrcf	?_ADC_GetConversion+1,f,c
   904  0011D4  3214               	rrcf	?_ADC_GetConversion,f,c
   905  0011D6  90D8               	bcf	status,0,c
   906  0011D8  3215               	rrcf	?_ADC_GetConversion+1,f,c
   907  0011DA  3214               	rrcf	?_ADC_GetConversion,f,c
   908  0011DC  5014               	movf	?_ADC_GetConversion,w,c
   909  0011DE  0800               	sublw	0
   910  0011E0  0100               	movlb	0	; () banked
   911  0011E2  6FE1               	movwf	??_main& (0+255),b
   912  0011E4  0100               	movlb	0	; () banked
   913  0011E6  05E1               	decf	??_main& (0+255),w,b
   914  0011E8  ECED  F00D         	call	_EUSART_CompWrite
   915                           
   916                           ;main.c: 304: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_RHorizon) >> 2));
   917  0011EC  0E05               	movlw	5
   918  0011EE  EC05  F00E         	call	_ADC_GetConversion
   919  0011F2  90D8               	bcf	status,0,c
   920  0011F4  3215               	rrcf	?_ADC_GetConversion+1,f,c
   921  0011F6  3214               	rrcf	?_ADC_GetConversion,f,c
   922  0011F8  90D8               	bcf	status,0,c
   923  0011FA  3215               	rrcf	?_ADC_GetConversion+1,f,c
   924  0011FC  3214               	rrcf	?_ADC_GetConversion,f,c
   925  0011FE  5014               	movf	?_ADC_GetConversion,w,c
   926  001200  0800               	sublw	0
   927  001202  0100               	movlb	0	; () banked
   928  001204  6FE1               	movwf	??_main& (0+255),b
   929  001206  0100               	movlb	0	; () banked
   930  001208  05E1               	decf	??_main& (0+255),w,b
   931  00120A  ECED  F00D         	call	_EUSART_CompWrite
   932                           
   933                           ;main.c: 305: EUSART_CompWrite(0xff - (ADC_GetConversion(channel_RVertical) >> 2));
   934  00120E  0E06               	movlw	6
   935  001210  EC05  F00E         	call	_ADC_GetConversion
   936  001214  90D8               	bcf	status,0,c
   937  001216  3215               	rrcf	?_ADC_GetConversion+1,f,c
   938  001218  3214               	rrcf	?_ADC_GetConversion,f,c
   939  00121A  90D8               	bcf	status,0,c
   940  00121C  3215               	rrcf	?_ADC_GetConversion+1,f,c
   941  00121E  3214               	rrcf	?_ADC_GetConversion,f,c
   942  001220  5014               	movf	?_ADC_GetConversion,w,c
   943  001222  0800               	sublw	0
   944  001224  0100               	movlb	0	; () banked
   945  001226  6FE1               	movwf	??_main& (0+255),b
   946  001228  0100               	movlb	0	; () banked
   947  00122A  05E1               	decf	??_main& (0+255),w,b
   948  00122C  ECED  F00D         	call	_EUSART_CompWrite
   949                           
   950                           ;main.c: 307: EUSART_CompWrite((PORTAbits.RA5 << 7) | (PORTBbits.RB1 << 6) | ((1 - PORTB
      +                          bits.RB5) << 1) | (PORTBbits.RB3 << 0));
   951  001230  A681               	btfss	3969,3,c	;volatile
   952  001232  D004               	goto	u3020
   953  001234  0100               	movlb	0	; () banked
   954  001236  6BE1               	clrf	??_main& (0+255),b
   955  001238  2BE1               	incf	??_main& (0+255),f,b
   956  00123A  D002               	goto	u3028
   957  00123C                     u3020:
   958  00123C  0100               	movlb	0	; () banked
   959  00123E  6BE1               	clrf	??_main& (0+255),b
   960  001240                     u3028:
   961  001240  A281               	btfss	3969,1,c	;volatile
   962  001242  D004               	goto	u3030
   963  001244  0E40               	movlw	64
   964  001246  0100               	movlb	0	; () banked
   965  001248  6FE2               	movwf	(??_main+1)& (0+255),b
   966  00124A  D002               	goto	u3045
   967  00124C                     u3030:
   968  00124C  0100               	movlb	0	; () banked
   969  00124E  6BE2               	clrf	(??_main+1)& (0+255),b
   970  001250                     u3045:
   971  001250  AA80               	btfss	3968,5,c	;volatile
   972  001252  D004               	goto	u3050
   973  001254  0E80               	movlw	128
   974  001256  0100               	movlb	0	; () banked
   975  001258  6FE3               	movwf	(??_main+2)& (0+255),b
   976  00125A  D002               	goto	u3065
   977  00125C                     u3050:
   978  00125C  0100               	movlb	0	; () banked
   979  00125E  6BE3               	clrf	(??_main+2)& (0+255),b
   980  001260                     u3065:
   981  001260  0100               	movlb	0	; () banked
   982  001262  51E3               	movf	(??_main+2)& (0+255),w,b
   983  001264  0100               	movlb	0	; () banked
   984  001266  11E2               	iorwf	(??_main+1)& (0+255),w,b
   985  001268  0100               	movlb	0	; () banked
   986  00126A  6FE4               	movwf	(??_main+3)& (0+255),b
   987  00126C  AA81               	btfss	3969,5,c	;volatile
   988  00126E  D002               	goto	u3070
   989  001270  0E01               	movlw	1
   990  001272  D001               	goto	u3076
   991  001274                     u3070:
   992  001274  0E00               	movlw	0
   993  001276                     u3076:
   994  001276  0800               	sublw	0
   995  001278  0100               	movlb	0	; () banked
   996  00127A  6FE5               	movwf	(??_main+4)& (0+255),b
   997  00127C  0100               	movlb	0	; () banked
   998  00127E  90D8               	bcf	status,0,c
   999  001280  35E5               	rlcf	(??_main+4)& (0+255),w,b
  1000  001282  0F02               	addlw	2
  1001  001284  0100               	movlb	0	; () banked
  1002  001286  11E4               	iorwf	(??_main+3)& (0+255),w,b
  1003  001288  0100               	movlb	0	; () banked
  1004  00128A  11E1               	iorwf	??_main& (0+255),w,b
  1005  00128C  ECED  F00D         	call	_EUSART_CompWrite
  1006                           
  1007                           ;main.c: 308: EUSART_CompWrite((PORTCbits.RC2 << 5) | (PORTCbits.RC1 << 4) | (PORTDbits.
      +                          RD2 << 3) | (PORTCbits.RC5 << 2) | (PORTDbits.RD5 << 1) | ((subdata.IO_TactSw00) << 0));
  1008  001290  AC43               	btfss	_subdata,6,c
  1009  001292  D004               	goto	u3080
  1010  001294  0100               	movlb	0	; () banked
  1011  001296  6BE1               	clrf	??_main& (0+255),b
  1012  001298  2BE1               	incf	??_main& (0+255),f,b
  1013  00129A  D002               	goto	u3088
  1014  00129C                     u3080:
  1015  00129C  0100               	movlb	0	; () banked
  1016  00129E  6BE1               	clrf	??_main& (0+255),b
  1017  0012A0                     u3088:
  1018  0012A0  AA83               	btfss	3971,5,c	;volatile
  1019  0012A2  D004               	goto	u3090
  1020  0012A4  0E02               	movlw	2
  1021  0012A6  0100               	movlb	0	; () banked
  1022  0012A8  6FE2               	movwf	(??_main+1)& (0+255),b
  1023  0012AA  D002               	goto	u3105
  1024  0012AC                     u3090:
  1025  0012AC  0100               	movlb	0	; () banked
  1026  0012AE  6BE2               	clrf	(??_main+1)& (0+255),b
  1027  0012B0                     u3105:
  1028  0012B0  AA82               	btfss	3970,5,c	;volatile
  1029  0012B2  D004               	goto	u3110
  1030  0012B4  0E04               	movlw	4
  1031  0012B6  0100               	movlb	0	; () banked
  1032  0012B8  6FE3               	movwf	(??_main+2)& (0+255),b
  1033  0012BA  D002               	goto	u3125
  1034  0012BC                     u3110:
  1035  0012BC  0100               	movlb	0	; () banked
  1036  0012BE  6BE3               	clrf	(??_main+2)& (0+255),b
  1037  0012C0                     u3125:
  1038  0012C0  A483               	btfss	3971,2,c	;volatile
  1039  0012C2  D004               	goto	u3130
  1040  0012C4  0E08               	movlw	8
  1041  0012C6  0100               	movlb	0	; () banked
  1042  0012C8  6FE4               	movwf	(??_main+3)& (0+255),b
  1043  0012CA  D002               	goto	u3145
  1044  0012CC                     u3130:
  1045  0012CC  0100               	movlb	0	; () banked
  1046  0012CE  6BE4               	clrf	(??_main+3)& (0+255),b
  1047  0012D0                     u3145:
  1048  0012D0  A282               	btfss	3970,1,c	;volatile
  1049  0012D2  D004               	goto	u3150
  1050  0012D4  0E10               	movlw	16
  1051  0012D6  0100               	movlb	0	; () banked
  1052  0012D8  6FE5               	movwf	(??_main+4)& (0+255),b
  1053  0012DA  D002               	goto	u3165
  1054  0012DC                     u3150:
  1055  0012DC  0100               	movlb	0	; () banked
  1056  0012DE  6BE5               	clrf	(??_main+4)& (0+255),b
  1057  0012E0                     u3165:
  1058  0012E0  A482               	btfss	3970,2,c	;volatile
  1059  0012E2  D004               	goto	u3170
  1060  0012E4  0E20               	movlw	32
  1061  0012E6  0100               	movlb	0	; () banked
  1062  0012E8  6FE6               	movwf	(??_main+5)& (0+255),b
  1063  0012EA  D002               	goto	u3185
  1064  0012EC                     u3170:
  1065  0012EC  0100               	movlb	0	; () banked
  1066  0012EE  6BE6               	clrf	(??_main+5)& (0+255),b
  1067  0012F0                     u3185:
  1068  0012F0  0100               	movlb	0	; () banked
  1069  0012F2  51E6               	movf	(??_main+5)& (0+255),w,b
  1070  0012F4  0100               	movlb	0	; () banked
  1071  0012F6  11E5               	iorwf	(??_main+4)& (0+255),w,b
  1072  0012F8  0100               	movlb	0	; () banked
  1073  0012FA  11E4               	iorwf	(??_main+3)& (0+255),w,b
  1074  0012FC  0100               	movlb	0	; () banked
  1075  0012FE  11E3               	iorwf	(??_main+2)& (0+255),w,b
  1076  001300  0100               	movlb	0	; () banked
  1077  001302  11E2               	iorwf	(??_main+1)& (0+255),w,b
  1078  001304  0100               	movlb	0	; () banked
  1079  001306  11E1               	iorwf	??_main& (0+255),w,b
  1080  001308  ECED  F00D         	call	_EUSART_CompWrite
  1081                           
  1082                           ;main.c: 309: EUSART1_Write(0x30 | (not_of_before_data &0x0f));
  1083  00130C  5034               	movf	_not_of_before_data,w,c
  1084  00130E  0B0F               	andlw	15
  1085  001310  0930               	iorlw	48
  1086  001312  EC47  F00C         	call	_EUSART1_Write
  1087                           
  1088                           ;main.c: 310: EUSART1_Write('C');
  1089  001316  0E43               	movlw	67
  1090  001318  EC47  F00C         	call	_EUSART1_Write
  1091  00131C                     l2864:
  1092                           
  1093                           ;main.c: 314: }
  1094                           ;main.c: 315: if ((eusart2RxCount)) {
  1095  00131C  503A               	movf	_eusart2RxCount,w,c	;volatile
  1096  00131E  B4D8               	btfsc	status,2,c
  1097  001320  D003               	goto	l2868
  1098                           
  1099                           ;main.c: 316: subdata.byte = EUSART2_Read();
  1100  001322  EC87  F00D         	call	_EUSART2_Read	;wreg free
  1101  001326  6E43               	movwf	_subdata,c
  1102  001328                     l2868:
  1103                           
  1104                           ;main.c: 317: }
  1105                           ;main.c: 319: if ((eusart1RxCount)) {
  1106  001328  5035               	movf	_eusart1RxCount,w,c	;volatile
  1107  00132A  B4D8               	btfsc	status,2,c
  1108  00132C  D68F               	goto	l2856
  1109                           
  1110                           ;main.c: 320: static uint8_t recieveddata;
  1111                           ;main.c: 321: static uint8_t recievedbefore = '\0';
  1112                           ;main.c: 322: static uint8_t columun = 0;
  1113                           ;main.c: 323: static uint8_t line = 0;
  1114                           ;main.c: 324: static uint8_t escaped = 0;
  1115                           ;main.c: 325: recieveddata = EUSART1_Read();
  1116  00132E  ECA1  F00D         	call	_EUSART1_Read	;wreg free
  1117  001332  6E33               	movwf	main@recieveddata,c
  1118                           
  1119                           ;main.c: 326: if (!escaped) {
  1120  001334  502F               	movf	main@escaped,w,c
  1121  001336  B4D8               	btfsc	status,2,c
  1122  001338  D020               	goto	l2890
  1123  00133A  D029               	goto	l2892
  1124  00133C                     l2876:
  1125                           
  1126                           ;main.c: 329: oled_clear();
  1127  00133C  ECB7  F00E         	call	_oled_clear	;wreg free
  1128                           
  1129                           ;main.c: 330: oled_position(line = 0, columun = 0);
  1130  001340  0E00               	movlw	0
  1131  001342  6E31               	movwf	main@columun,c
  1132  001344  C031  F0D8         	movff	main@columun,oled_position@col
  1133  001348  0E00               	movlw	0
  1134  00134A  6E30               	movwf	main@line,c
  1135  00134C  5030               	movf	main@line,w,c
  1136  00134E  ECD1  F00E         	call	_oled_position
  1137                           
  1138                           ;main.c: 331: break;
  1139  001352  D01F               	goto	l679
  1140  001354                     l2878:
  1141                           
  1142                           ;main.c: 333: oled_position(line = recieveddata, columun = 0);
  1143  001354  0E00               	movlw	0
  1144  001356  6E31               	movwf	main@columun,c
  1145  001358  C031  F0D8         	movff	main@columun,oled_position@col
  1146  00135C  C033  F030         	movff	main@recieveddata,main@line
  1147  001360  5030               	movf	main@line,w,c
  1148  001362  ECD1  F00E         	call	_oled_position
  1149  001366  D007               	goto	l2884
  1150  001368                     l2882:
  1151                           
  1152                           ;main.c: 337: oled_position(line, columun = recieveddata);
  1153  001368  C033  F031         	movff	main@recieveddata,main@columun
  1154  00136C  C031  F0D8         	movff	main@columun,oled_position@col
  1155  001370  5030               	movf	main@line,w,c
  1156  001372  ECD1  F00E         	call	_oled_position
  1157  001376                     l2884:
  1158                           
  1159                           ;main.c: 338: escaped = 1;
  1160  001376  0E01               	movlw	1
  1161  001378  D00B               	goto	L1
  1162  00137A                     l2890:
  1163  00137A  5032               	movf	main@recievedbefore,w,c
  1164                           
  1165                           ; Switch size 1, requested type "space"
  1166                           ; Number of cases is 3, Range of values is 0 to 18
  1167                           ; switch strategies available:
  1168                           ; Name         Instructions Cycles
  1169                           ; simple_byte           10     6 (average)
  1170                           ;	Chosen strategy is simple_byte
  1171  00137C  0A00               	xorlw	0	; case 0
  1172  00137E  B4D8               	btfsc	status,2,c
  1173  001380  D7DD               	goto	l2876
  1174  001382  0A11               	xorlw	17	; case 17
  1175  001384  B4D8               	btfsc	status,2,c
  1176  001386  D7E6               	goto	l2878
  1177  001388  0A03               	xorlw	3	; case 18
  1178  00138A  B4D8               	btfsc	status,2,c
  1179  00138C  D7ED               	goto	l2882
  1180  00138E                     l2892:
  1181                           
  1182                           ;main.c: 345: escaped = 0;
  1183  00138E  0E00               	movlw	0
  1184  001390                     L1:
  1185  001390  6E2F               	movwf	main@escaped,c
  1186  001392                     l679:
  1187                           
  1188                           ;main.c: 346: }
  1189                           ;main.c: 347: if (!escaped) {
  1190  001392  502F               	movf	main@escaped,w,c
  1191  001394  B4D8               	btfsc	status,2,c
  1192  001396  D017               	goto	l2908
  1193  001398  D026               	goto	l680
  1194  00139A                     l2896:
  1195                           
  1196                           ;main.c: 355: if (recievedbefore == '\r' && line == 0) {
  1197  00139A  0E0D               	movlw	13
  1198  00139C  1832               	xorwf	main@recievedbefore,w,c
  1199  00139E  A4D8               	btfss	status,2,c
  1200  0013A0  D022               	goto	l680
  1201  0013A2  5030               	movf	main@line,w,c
  1202  0013A4  A4D8               	btfss	status,2,c
  1203  0013A6  D01F               	goto	l680
  1204                           
  1205                           ;main.c: 356: oled_position(line = 1, columun = 0);
  1206  0013A8  0E00               	movlw	0
  1207  0013AA  6E31               	movwf	main@columun,c
  1208  0013AC  C031  F0D8         	movff	main@columun,oled_position@col
  1209  0013B0  0E01               	movlw	1
  1210  0013B2  6E30               	movwf	main@line,c
  1211  0013B4  5030               	movf	main@line,w,c
  1212  0013B6  ECD1  F00E         	call	_oled_position
  1213                           
  1214                           ;main.c: 357: }
  1215                           ;main.c: 358: break;
  1216  0013BA  D015               	goto	l680
  1217  0013BC                     l2902:
  1218                           
  1219                           ;main.c: 360: oled_data(recieveddata);
  1220  0013BC  5033               	movf	main@recieveddata,w,c
  1221  0013BE  EC49  F00E         	call	_oled_data
  1222                           
  1223                           ;main.c: 361: columun++;
  1224  0013C2  2A31               	incf	main@columun,f,c
  1225                           
  1226                           ;main.c: 363: }
  1227                           
  1228                           ;main.c: 362: break;
  1229  0013C4  D010               	goto	l680
  1230  0013C6                     l2908:
  1231  0013C6  5033               	movf	main@recieveddata,w,c
  1232                           
  1233                           ; Switch size 1, requested type "space"
  1234                           ; Number of cases is 5, Range of values is 0 to 18
  1235                           ; switch strategies available:
  1236                           ; Name         Instructions Cycles
  1237                           ; simple_byte           16     9 (average)
  1238                           ;	Chosen strategy is simple_byte
  1239  0013C8  0A00               	xorlw	0	; case 0
  1240  0013CA  B4D8               	btfsc	status,2,c
  1241  0013CC  D00C               	goto	l680
  1242  0013CE  0A0A               	xorlw	10	; case 10
  1243  0013D0  B4D8               	btfsc	status,2,c
  1244  0013D2  D7E3               	goto	l2896
  1245  0013D4  0A07               	xorlw	7	; case 13
  1246  0013D6  B4D8               	btfsc	status,2,c
  1247  0013D8  D006               	goto	l680
  1248  0013DA  0A1C               	xorlw	28	; case 17
  1249  0013DC  B4D8               	btfsc	status,2,c
  1250  0013DE  D003               	goto	l680
  1251  0013E0  0A03               	xorlw	3	; case 18
  1252  0013E2  A4D8               	btfss	status,2,c
  1253  0013E4  D7EB               	goto	l2902
  1254  0013E6                     l680:
  1255                           
  1256                           ;main.c: 364: }
  1257                           ;main.c: 365: recievedbefore = recieveddata;
  1258  0013E6  C033  F032         	movff	main@recieveddata,main@recievedbefore
  1259  0013EA  D630               	goto	l2856
  1260  0013EC                     __end_of_main:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           intcon	equ	0xFF2
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _oled_str_disp *****************
  1269 ;; Defined at:
  1270 ;;		line 226 in file "main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  li              1    wreg     unsigned char 
  1273 ;;  col             1    4[BANK0 ] unsigned char 
  1274 ;;  string          2    5[BANK0 ] PTR const unsigned char 
  1275 ;;		 -> STR_1(10), 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;  li              1    9[BANK0 ] unsigned char 
  1278 ;;  i               1   10[BANK0 ] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1288 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;Total ram usage:        7 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    8
  1295 ;; This function calls:
  1296 ;;		_oled_data
  1297 ;;		_oled_position
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text1
  1304  00170A                     __ptext1:
  1305                           	opt stack 0
  1306  00170A                     _oled_str_disp:
  1307                           	opt stack 22
  1308                           
  1309                           ;incstack = 0
  1310                           ;oled_str_disp@li stored from wreg
  1311  00170A  0100               	movlb	0	; () banked
  1312  00170C  6FDF               	movwf	oled_str_disp@li& (0+255),b
  1313                           
  1314                           ;main.c: 227: uint8_t i = 0;
  1315  00170E  0E00               	movlw	0
  1316  001710  0100               	movlb	0	; () banked
  1317  001712  6FE0               	movwf	oled_str_disp@i& (0+255),b
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 228: oled_position(li, col);
  1321  001714  C0DA  F0D8         	movff	oled_str_disp@col,oled_position@col
  1322  001718  0100               	movlb	0	; () banked
  1323  00171A  51DF               	movf	oled_str_disp@li& (0+255),w,b
  1324  00171C  ECD1  F00E         	call	_oled_position
  1325                           
  1326                           ;main.c: 229: while (((col + i) < 16) && string[i]) {
  1327  001720  D017               	goto	l2820
  1328  001722                     l2816:
  1329                           
  1330                           ;main.c: 232: oled_data(string[i]);
  1331  001722  0100               	movlb	0	; () banked
  1332  001724  51E0               	movf	oled_str_disp@i& (0+255),w,b
  1333  001726  0D01               	mullw	1
  1334  001728  C0DB  F0DD         	movff	oled_str_disp@string,??_oled_str_disp
  1335  00172C  C0DC  F0DE         	movff	oled_str_disp@string+1,??_oled_str_disp+1
  1336  001730  50F3               	movf	prodl,w,c
  1337  001732  0100               	movlb	0	; () banked
  1338  001734  27DD               	addwf	??_oled_str_disp& (0+255),f,b
  1339  001736  50F4               	movf	prodh,w,c
  1340  001738  0100               	movlb	0	; () banked
  1341  00173A  23DE               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1342  00173C  C0DD  FFF6         	movff	??_oled_str_disp,tblptrl
  1343  001740  C0DE  FFF7         	movff	??_oled_str_disp+1,tblptrh
  1344  001744                     	if	0	;tblptru may be non-zero
  1345  001744                     	endif
  1346  001744                     	if	0	;tblptru may be non-zero
  1347  001744                     	endif
  1348  001744  0008               	tblrd		*
  1349  001746  50F5               	movf	tablat,w,c
  1350  001748  EC49  F00E         	call	_oled_data
  1351                           
  1352                           ;main.c: 234: i++;
  1353  00174C  0100               	movlb	0	; () banked
  1354  00174E  2BE0               	incf	oled_str_disp@i& (0+255),f,b
  1355  001750                     l2820:
  1356  001750  0100               	movlb	0	; () banked
  1357  001752  51E0               	movf	oled_str_disp@i& (0+255),w,b
  1358  001754  C0DA  F0DD         	movff	oled_str_disp@col,??_oled_str_disp
  1359  001758  0100               	movlb	0	; () banked
  1360  00175A  6BDE               	clrf	(??_oled_str_disp+1)& (0+255),b
  1361  00175C  0100               	movlb	0	; () banked
  1362  00175E  27DD               	addwf	??_oled_str_disp& (0+255),f,b
  1363  001760  0E00               	movlw	0
  1364  001762  23DE               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1365  001764  0100               	movlb	0	; () banked
  1366  001766  BFDE               	btfsc	(??_oled_str_disp+1)& (0+255),7,b
  1367  001768  D008               	goto	l2822
  1368  00176A  0100               	movlb	0	; () banked
  1369  00176C  51DE               	movf	(??_oled_str_disp+1)& (0+255),w,b
  1370  00176E  E11C               	bnz	l642
  1371  001770  0E10               	movlw	16
  1372  001772  0100               	movlb	0	; () banked
  1373  001774  5DDD               	subwf	??_oled_str_disp& (0+255),w,b
  1374  001776  B0D8               	btfsc	status,0,c
  1375  001778  0012               	return	
  1376  00177A                     l2822:
  1377                           
  1378                           ; BSR set to: 0
  1379  00177A  0100               	movlb	0	; () banked
  1380  00177C  51E0               	movf	oled_str_disp@i& (0+255),w,b
  1381  00177E  0D01               	mullw	1
  1382  001780  C0DB  F0DD         	movff	oled_str_disp@string,??_oled_str_disp
  1383  001784  C0DC  F0DE         	movff	oled_str_disp@string+1,??_oled_str_disp+1
  1384  001788  50F3               	movf	prodl,w,c
  1385  00178A  0100               	movlb	0	; () banked
  1386  00178C  27DD               	addwf	??_oled_str_disp& (0+255),f,b
  1387  00178E  50F4               	movf	prodh,w,c
  1388  001790  0100               	movlb	0	; () banked
  1389  001792  23DE               	addwfc	(??_oled_str_disp+1)& (0+255),f,b
  1390  001794  C0DD  FFF6         	movff	??_oled_str_disp,tblptrl
  1391  001798  C0DE  FFF7         	movff	??_oled_str_disp+1,tblptrh
  1392  00179C                     	if	0	;tblptru may be non-zero
  1393  00179C                     	endif
  1394  00179C                     	if	0	;tblptru may be non-zero
  1395  00179C                     	endif
  1396  00179C  0008               	tblrd		*
  1397  00179E  50F5               	movf	tablat,w,c
  1398  0017A0  0900               	iorlw	0
  1399  0017A2  B4D8               	btfsc	status,2,c
  1400  0017A4  0012               	return	
  1401  0017A6  D7BD               	goto	l2816
  1402  0017A8                     l642:
  1403                           
  1404                           ; BSR set to: 0
  1405  0017A8  0012               	return		;funcret
  1406  0017AA                     __end_of_oled_str_disp:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           intcon	equ	0xFF2
  1415                           postinc0	equ	0xFEE
  1416                           wreg	equ	0xFE8
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _oled_position *****************
  1420 ;; Defined at:
  1421 ;;		line 217 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  li              1    wreg     unsigned char 
  1424 ;;  col             1    2[BANK0 ] unsigned char 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  li              1    3[BANK0 ] unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1436 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;Total ram usage:        2 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    7
  1443 ;; This function calls:
  1444 ;;		_oled_cmd
  1445 ;; This function is called by:
  1446 ;;		_oled_str_disp
  1447 ;;		_main
  1448 ;;		_oled_char_disp
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text2
  1453  001DA2                     __ptext2:
  1454                           	opt stack 0
  1455  001DA2                     _oled_position:
  1456                           	opt stack 22
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;incstack = 0
  1460                           ;oled_position@li stored from wreg
  1461  001DA2  0100               	movlb	0	; () banked
  1462  001DA4  6FD9               	movwf	oled_position@li& (0+255),b
  1463                           
  1464                           ;main.c: 218: oled_cmd(0x80 | (li << 5) | col);
  1465  001DA6  0100               	movlb	0	; () banked
  1466  001DA8  39D9               	swapf	oled_position@li& (0+255),w,b
  1467  001DAA  46E8               	rlncf	wreg,f,c
  1468  001DAC  0BE0               	andlw	224
  1469  001DAE  0100               	movlb	0	; () banked
  1470  001DB0  11D8               	iorwf	oled_position@col& (0+255),w,b
  1471  001DB2  0980               	iorlw	128
  1472  001DB4  EC5E  F00E         	call	_oled_cmd
  1473  001DB8  0012               	return		;funcret
  1474  001DBA                     __end_of_oled_position:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           prodh	equ	0xFF4
  1481                           prodl	equ	0xFF3
  1482                           intcon	equ	0xFF2
  1483                           postinc0	equ	0xFEE
  1484                           wreg	equ	0xFE8
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _oled_data *****************
  1488 ;; Defined at:
  1489 ;;		line 200 in file "main.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  work            1    wreg     unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  work            1    1[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:        1 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    6
  1510 ;; This function calls:
  1511 ;;		_I2C_M_write
  1512 ;; This function is called by:
  1513 ;;		_oled_str_disp
  1514 ;;		_main
  1515 ;;		_oled_char_disp
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text3
  1520  001C92                     __ptext3:
  1521                           	opt stack 0
  1522  001C92                     _oled_data:
  1523                           	opt stack 23
  1524                           
  1525                           ;incstack = 0
  1526                           ;oled_data@work stored from wreg
  1527  001C92  0100               	movlb	0	; () banked
  1528  001C94  6FD7               	movwf	oled_data@work& (0+255),b
  1529                           
  1530                           ;main.c: 201: static char write[2];
  1531                           ;main.c: 202: write[0] = 0x40;
  1532  001C96  0E40               	movlw	64
  1533  001C98  0100               	movlb	0	; () banked
  1534  001C9A  6FD2               	movwf	oled_data@write& (0+255),b
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;main.c: 203: write[1] = work;
  1538  001C9C  C0D7  F0D3         	movff	oled_data@work,oled_data@write+1
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;main.c: 204: I2C_M_write((0x3c), (uint8_t*) write, 2);
  1542  001CA0  0ED2               	movlw	low oled_data@write
  1543  001CA2  6E24               	movwf	I2C_M_write@wr,c
  1544  001CA4  0E00               	movlw	high oled_data@write
  1545  001CA6  6E25               	movwf	I2C_M_write@wr+1,c
  1546  001CA8  0E02               	movlw	2
  1547  001CAA  6E26               	movwf	I2C_M_write@length,c
  1548  001CAC  0E3C               	movlw	60
  1549  001CAE  ECD5  F00B         	call	_I2C_M_write
  1550                           
  1551                           ;main.c: 205: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1552  001CB2  0ED5               	movlw	213
  1553  001CB4                     u3267:
  1554  001CB4  2EE8               	decfsz	wreg,f,c
  1555  001CB6  D7FE               	bra	u3267
  1556  001CB8  F000               	nop	
  1557  001CBA  0012               	return		;funcret
  1558  001CBC                     __end_of_oled_data:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _oled_init *****************
  1572 ;; Defined at:
  1573 ;;		line 208 in file "main.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;Total ram usage:        1 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    7
  1594 ;; This function calls:
  1595 ;;		_oled_cmd
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text4
  1602  0019AC                     __ptext4:
  1603                           	opt stack 0
  1604  0019AC                     _oled_init:
  1605                           	opt stack 23
  1606                           
  1607                           ;main.c: 209: oled_cmd(0x01);
  1608                           
  1609                           ;incstack = 0
  1610  0019AC  0E01               	movlw	1
  1611  0019AE  EC5E  F00E         	call	_oled_cmd
  1612                           
  1613                           ;main.c: 210: _delay((unsigned long)((2)*(64000000/4000.0)));
  1614  0019B2  0E2A               	movlw	42
  1615  0019B4  0100               	movlb	0	; () banked
  1616  0019B6  6FD8               	movwf	??_oled_init& (0+255),b
  1617  0019B8  0E8D               	movlw	141
  1618  0019BA                     u3277:
  1619  0019BA  2EE8               	decfsz	wreg,f,c
  1620  0019BC  D7FE               	bra	u3277
  1621  0019BE  2FD8               	decfsz	??_oled_init& (0+255),f,b
  1622  0019C0  D7FC               	bra	u3277
  1623  0019C2  D000               	nop2	
  1624                           
  1625                           ;main.c: 211: oled_cmd(0x03);
  1626  0019C4  0E03               	movlw	3
  1627  0019C6  EC5E  F00E         	call	_oled_cmd
  1628                           
  1629                           ;main.c: 212: oled_cmd(0x0f & 0x0f & 0x0d & 0x0e);
  1630  0019CA  0E0C               	movlw	12
  1631  0019CC  EC5E  F00E         	call	_oled_cmd
  1632                           
  1633                           ;main.c: 213: oled_cmd(0x01);
  1634  0019D0  0E01               	movlw	1
  1635  0019D2  EC5E  F00E         	call	_oled_cmd
  1636                           
  1637                           ;main.c: 214: _delay((unsigned long)((2)*(64000000/4000.0)));
  1638  0019D6  0E2A               	movlw	42
  1639  0019D8  0100               	movlb	0	; () banked
  1640  0019DA  6FD8               	movwf	??_oled_init& (0+255),b
  1641  0019DC  0E8D               	movlw	141
  1642  0019DE                     u3287:
  1643  0019DE  2EE8               	decfsz	wreg,f,c
  1644  0019E0  D7FE               	bra	u3287
  1645  0019E2  2FD8               	decfsz	??_oled_init& (0+255),f,b
  1646  0019E4  D7FC               	bra	u3287
  1647  0019E6  D000               	nop2	
  1648  0019E8  0012               	return		;funcret
  1649  0019EA                     __end_of_oled_init:
  1650                           	opt stack 0
  1651                           tblptru	equ	0xFF8
  1652                           tblptrh	equ	0xFF7
  1653                           tblptrl	equ	0xFF6
  1654                           tablat	equ	0xFF5
  1655                           prodh	equ	0xFF4
  1656                           prodl	equ	0xFF3
  1657                           intcon	equ	0xFF2
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function _oled_contrast *****************
  1663 ;; Defined at:
  1664 ;;		line 238 in file "main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  cont            1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  cont            1    3[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    7
  1685 ;; This function calls:
  1686 ;;		_oled_cmd
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text5
  1693  0019EA                     __ptext5:
  1694                           	opt stack 0
  1695  0019EA                     _oled_contrast:
  1696                           	opt stack 23
  1697                           
  1698                           ;incstack = 0
  1699                           ;oled_contrast@cont stored from wreg
  1700  0019EA  0100               	movlb	0	; () banked
  1701  0019EC  6FD9               	movwf	oled_contrast@cont& (0+255),b
  1702                           
  1703                           ;main.c: 239: oled_cmd(0x2A);
  1704  0019EE  0E2A               	movlw	42
  1705  0019F0  EC5E  F00E         	call	_oled_cmd
  1706                           
  1707                           ;main.c: 240: oled_cmd(0x79);
  1708  0019F4  0E79               	movlw	121
  1709  0019F6  EC5E  F00E         	call	_oled_cmd
  1710                           
  1711                           ;main.c: 241: oled_cmd(0x81);
  1712  0019FA  0E81               	movlw	129
  1713  0019FC  EC5E  F00E         	call	_oled_cmd
  1714                           
  1715                           ;main.c: 242: oled_cmd(cont);
  1716  001A00  0100               	movlb	0	; () banked
  1717  001A02  51D9               	movf	oled_contrast@cont& (0+255),w,b
  1718  001A04  EC5E  F00E         	call	_oled_cmd
  1719                           
  1720                           ;main.c: 243: oled_cmd(0x78);
  1721  001A08  0E78               	movlw	120
  1722  001A0A  EC5E  F00E         	call	_oled_cmd
  1723                           
  1724                           ;main.c: 244: oled_cmd(0x28);
  1725  001A0E  0E28               	movlw	40
  1726  001A10  EC5E  F00E         	call	_oled_cmd
  1727                           
  1728                           ;main.c: 245: _delay((unsigned long)((2)*(64000000/4000.0)));
  1729  001A14  0E2A               	movlw	42
  1730  001A16  0100               	movlb	0	; () banked
  1731  001A18  6FD8               	movwf	??_oled_contrast& (0+255),b
  1732  001A1A  0E8D               	movlw	141
  1733  001A1C                     u3297:
  1734  001A1C  2EE8               	decfsz	wreg,f,c
  1735  001A1E  D7FE               	bra	u3297
  1736  001A20  2FD8               	decfsz	??_oled_contrast& (0+255),f,b
  1737  001A22  D7FC               	bra	u3297
  1738  001A24  D000               	nop2	
  1739  001A26  0012               	return		;funcret
  1740  001A28                     __end_of_oled_contrast:
  1741                           	opt stack 0
  1742                           tblptru	equ	0xFF8
  1743                           tblptrh	equ	0xFF7
  1744                           tblptrl	equ	0xFF6
  1745                           tablat	equ	0xFF5
  1746                           prodh	equ	0xFF4
  1747                           prodl	equ	0xFF3
  1748                           intcon	equ	0xFF2
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _oled_clear *****************
  1754 ;; Defined at:
  1755 ;;		line 248 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    7
  1776 ;; This function calls:
  1777 ;;		_oled_cmd
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text6
  1784  001D6E                     __ptext6:
  1785                           	opt stack 0
  1786  001D6E                     _oled_clear:
  1787                           	opt stack 23
  1788                           
  1789                           ;main.c: 249: oled_cmd(0x01);
  1790                           
  1791                           ;incstack = 0
  1792  001D6E  0E01               	movlw	1
  1793  001D70  EC5E  F00E         	call	_oled_cmd
  1794                           
  1795                           ;main.c: 250: _delay((unsigned long)((2)*(64000000/4000.0)));
  1796  001D74  0E2A               	movlw	42
  1797  001D76  0100               	movlb	0	; () banked
  1798  001D78  6FD8               	movwf	??_oled_clear& (0+255),b
  1799  001D7A  0E8D               	movlw	141
  1800  001D7C                     u3307:
  1801  001D7C  2EE8               	decfsz	wreg,f,c
  1802  001D7E  D7FE               	bra	u3307
  1803  001D80  2FD8               	decfsz	??_oled_clear& (0+255),f,b
  1804  001D82  D7FC               	bra	u3307
  1805  001D84  D000               	nop2	
  1806  001D86  0012               	return		;funcret
  1807  001D88                     __end_of_oled_clear:
  1808                           	opt stack 0
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           prodh	equ	0xFF4
  1814                           prodl	equ	0xFF3
  1815                           intcon	equ	0xFF2
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function _oled_cmd *****************
  1821 ;; Defined at:
  1822 ;;		line 192 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  work            1    wreg     unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  work            1    1[BANK0 ] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:        1 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    6
  1843 ;; This function calls:
  1844 ;;		_I2C_M_write
  1845 ;; This function is called by:
  1846 ;;		_oled_init
  1847 ;;		_oled_position
  1848 ;;		_oled_contrast
  1849 ;;		_oled_clear
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text7
  1854  001CBC                     __ptext7:
  1855                           	opt stack 0
  1856  001CBC                     _oled_cmd:
  1857                           	opt stack 22
  1858                           
  1859                           ;incstack = 0
  1860                           ;oled_cmd@work stored from wreg
  1861  001CBC  0100               	movlb	0	; () banked
  1862  001CBE  6FD7               	movwf	oled_cmd@work& (0+255),b
  1863                           
  1864                           ;main.c: 193: static char write[2];
  1865                           ;main.c: 194: write[0] = 0x00;
  1866  001CC0  0E00               	movlw	0
  1867  001CC2  0100               	movlb	0	; () banked
  1868  001CC4  6FD4               	movwf	oled_cmd@write& (0+255),b
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;main.c: 195: write[1] = work;
  1872  001CC6  C0D7  F0D5         	movff	oled_cmd@work,oled_cmd@write+1
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main.c: 196: I2C_M_write((0x3c), (uint8_t*) write, 2);
  1876  001CCA  0ED4               	movlw	low oled_cmd@write
  1877  001CCC  6E24               	movwf	I2C_M_write@wr,c
  1878  001CCE  0E00               	movlw	high oled_cmd@write
  1879  001CD0  6E25               	movwf	I2C_M_write@wr+1,c
  1880  001CD2  0E02               	movlw	2
  1881  001CD4  6E26               	movwf	I2C_M_write@length,c
  1882  001CD6  0E3C               	movlw	60
  1883  001CD8  ECD5  F00B         	call	_I2C_M_write
  1884                           
  1885                           ;main.c: 197: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1886  001CDC  0ED5               	movlw	213
  1887  001CDE                     u3317:
  1888  001CDE  2EE8               	decfsz	wreg,f,c
  1889  001CE0  D7FE               	bra	u3317
  1890  001CE2  F000               	nop	
  1891  001CE4  0012               	return		;funcret
  1892  001CE6                     __end_of_oled_cmd:
  1893                           	opt stack 0
  1894                           tblptru	equ	0xFF8
  1895                           tblptrh	equ	0xFF7
  1896                           tblptrl	equ	0xFF6
  1897                           tablat	equ	0xFF5
  1898                           prodh	equ	0xFF4
  1899                           prodl	equ	0xFF3
  1900                           intcon	equ	0xFF2
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function _I2C_M_write *****************
  1906 ;; Defined at:
  1907 ;;		line 128 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  addr            1    wreg     unsigned char 
  1910 ;;  wr              2   35[COMRAM] PTR unsigned char 
  1911 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  1912 ;;  length          1   37[COMRAM] unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  addr            1    0[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        4 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    5
  1931 ;; This function calls:
  1932 ;;		_I2C1_MasterWrite
  1933 ;; This function is called by:
  1934 ;;		_oled_cmd
  1935 ;;		_oled_data
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text8
  1940  0017AA                     __ptext8:
  1941                           	opt stack 0
  1942  0017AA                     _I2C_M_write:
  1943                           	opt stack 22
  1944                           
  1945                           ;incstack = 0
  1946                           ;I2C_M_write@addr stored from wreg
  1947  0017AA  0100               	movlb	0	; () banked
  1948  0017AC  6FD6               	movwf	I2C_M_write@addr& (0+255),b
  1949                           
  1950                           ;main.c: 134: static uint16_t timeOut, slaveTimeOut;
  1951                           ;main.c: 136: static I2C1_MESSAGE_STATUS status;
  1952                           ;main.c: 137: status = I2C1_MESSAGE_PENDING;
  1953  0017AE  0E02               	movlw	2
  1954  0017B0  6E48               	movwf	I2C_M_write@status,c
  1955                           
  1956                           ;main.c: 145: timeOut = 0;
  1957  0017B2  0E00               	movlw	0
  1958  0017B4  0100               	movlb	0	; () banked
  1959  0017B6  6FC2               	movwf	(I2C_M_write@timeOut+1)& (0+255),b
  1960  0017B8  0E00               	movlw	0
  1961  0017BA  6FC1               	movwf	I2C_M_write@timeOut& (0+255),b
  1962                           
  1963                           ;main.c: 146: slaveTimeOut = 0;
  1964  0017BC  0E00               	movlw	0
  1965  0017BE  0100               	movlb	0	; () banked
  1966  0017C0  6FC0               	movwf	(I2C_M_write@slaveTimeOut+1)& (0+255),b
  1967  0017C2  0E00               	movlw	0
  1968  0017C4  6FBF               	movwf	I2C_M_write@slaveTimeOut& (0+255),b
  1969                           
  1970                           ;main.c: 148: while (status != I2C1_MESSAGE_FAIL) {
  1971  0017C6  D039               	goto	l2778
  1972  0017C8                     l2752:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 150: I2C1_MasterWrite(wr,
  1976                           ;main.c: 151: length,
  1977                           ;main.c: 152: addr,
  1978                           ;main.c: 153: &status);
  1979  0017C8  C024  F01D         	movff	I2C_M_write@wr,I2C1_MasterWrite@pdata
  1980  0017CC  C025  F01E         	movff	I2C_M_write@wr+1,I2C1_MasterWrite@pdata+1
  1981  0017D0  C026  F01F         	movff	I2C_M_write@length,I2C1_MasterWrite@length
  1982  0017D4  C0D6  F020         	movff	I2C_M_write@addr,I2C1_MasterWrite@address
  1983  0017D8  6A21               	clrf	I2C1_MasterWrite@address+1,c
  1984  0017DA  0E48               	movlw	low I2C_M_write@status
  1985  0017DC  6E22               	movwf	I2C1_MasterWrite@pflag,c
  1986  0017DE  0E00               	movlw	high I2C_M_write@status
  1987  0017E0  6E23               	movwf	I2C1_MasterWrite@pflag+1,c
  1988  0017E2  EC21  F00C         	call	_I2C1_MasterWrite	;wreg free
  1989                           
  1990                           ;main.c: 156: while (status == I2C1_MESSAGE_PENDING) {
  1991  0017E6  D011               	goto	l2764
  1992  0017E8                     l2754:
  1993                           
  1994                           ;main.c: 158: _delay((unsigned long)((100)*(64000000/4000000.0)));
  1995  0017E8  0EE4               	movlw	228
  1996  0017EA                     u3327:
  1997  0017EA  D000               	nop2	
  1998  0017EC  D000               	nop2	
  1999  0017EE  2EE8               	decfsz	wreg,f,c
  2000  0017F0  D7FC               	bra	u3327
  2001  0017F2  D000               	nop2	
  2002  0017F4  D000               	nop2	
  2003                           
  2004                           ;main.c: 161: if (slaveTimeOut == 20)
  2005  0017F6  0E14               	movlw	20
  2006  0017F8  0100               	movlb	0	; () banked
  2007  0017FA  19BF               	xorwf	I2C_M_write@slaveTimeOut& (0+255),w,b
  2008  0017FC  0100               	movlb	0	; () banked
  2009  0017FE  11C0               	iorwf	(I2C_M_write@slaveTimeOut+1)& (0+255),w,b
  2010  001800  B4D8               	btfsc	status,2,c
  2011  001802  D007               	goto	l2766
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;main.c: 163: else
  2015                           ;main.c: 164: slaveTimeOut++;
  2016                           
  2017                           ; BSR set to: 0
  2018                           
  2019                           ; BSR set to: 0
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;main.c: 162: break;
  2023  001804  0100               	movlb	0	; () banked
  2024  001806  4BBF               	infsnz	I2C_M_write@slaveTimeOut& (0+255),f,b
  2025  001808  2BC0               	incf	(I2C_M_write@slaveTimeOut+1)& (0+255),f,b
  2026  00180A                     l2764:
  2027  00180A  0E02               	movlw	2
  2028  00180C  1848               	xorwf	I2C_M_write@status,w,c
  2029  00180E  B4D8               	btfsc	status,2,c
  2030  001810  D7EB               	goto	l2754
  2031  001812                     l2766:
  2032                           
  2033                           ;main.c: 165: }
  2034                           ;main.c: 166: if ((slaveTimeOut == 20) ||
  2035                           ;main.c: 167: (status == I2C1_MESSAGE_COMPLETE))
  2036  001812  0E14               	movlw	20
  2037  001814  0100               	movlb	0	; () banked
  2038  001816  19BF               	xorwf	I2C_M_write@slaveTimeOut& (0+255),w,b
  2039  001818  0100               	movlb	0	; () banked
  2040  00181A  11C0               	iorwf	(I2C_M_write@slaveTimeOut+1)& (0+255),w,b
  2041  00181C  B4D8               	btfsc	status,2,c
  2042  00181E  0012               	return	
  2043                           
  2044                           ; BSR set to: 0
  2045  001820  5048               	movf	I2C_M_write@status,w,c
  2046  001822  B4D8               	btfsc	status,2,c
  2047  001824  0012               	return	
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 177: if (timeOut == 2)
  2051                           
  2052                           ; BSR set to: 0
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main.c: 168: break;
  2056  001826  0E02               	movlw	2
  2057  001828  0100               	movlb	0	; () banked
  2058  00182A  19C1               	xorwf	I2C_M_write@timeOut& (0+255),w,b
  2059  00182C  0100               	movlb	0	; () banked
  2060  00182E  11C2               	iorwf	(I2C_M_write@timeOut+1)& (0+255),w,b
  2061  001830  B4D8               	btfsc	status,2,c
  2062  001832  0012               	return	
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;main.c: 179: else
  2066                           ;main.c: 180: timeOut++;
  2067                           
  2068                           ; BSR set to: 0
  2069                           
  2070                           ; BSR set to: 0
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;main.c: 178: break;
  2074  001834  0100               	movlb	0	; () banked
  2075  001836  4BC1               	infsnz	I2C_M_write@timeOut& (0+255),f,b
  2076  001838  2BC2               	incf	(I2C_M_write@timeOut+1)& (0+255),f,b
  2077  00183A                     l2778:
  2078                           
  2079                           ; BSR set to: 0
  2080  00183A  0448               	decf	I2C_M_write@status,w,c
  2081  00183C  B4D8               	btfsc	status,2,c
  2082  00183E  0012               	return	
  2083  001840  D7C3               	goto	l2752
  2084  001842                     __end_of_I2C_M_write:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           prodh	equ	0xFF4
  2091                           prodl	equ	0xFF3
  2092                           intcon	equ	0xFF2
  2093                           postinc0	equ	0xFEE
  2094                           wreg	equ	0xFE8
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _I2C1_MasterWrite *****************
  2098 ;; Defined at:
  2099 ;;		line 545 in file "mcc_generated_files/i2c1.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  2102 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  2103 ;;  length          1   30[COMRAM] unsigned char 
  2104 ;;  address         2   31[COMRAM] unsigned int 
  2105 ;;  pflag           2   33[COMRAM] PTR enum E6981
  2106 ;;		 -> I2C_M_write@status(1), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        7 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    4
  2125 ;; This function calls:
  2126 ;;		_I2C1_MasterTRBInsert
  2127 ;;		_I2C1_MasterWriteTRBBuild
  2128 ;; This function is called by:
  2129 ;;		_I2C_M_write
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text9
  2134  001842                     __ptext9:
  2135                           	opt stack 0
  2136  001842                     _I2C1_MasterWrite:
  2137                           	opt stack 22
  2138                           
  2139                           ;i2c1.c: 550: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  2140                           ;i2c1.c: 553: if (i2c1_object.trStatus.s.full != 1) {
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;incstack = 0
  2144  001842  0100               	movlb	0	; () banked
  2145  001844  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
  2146  001846  D01C               	goto	l2748
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;i2c1.c: 554: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  2150  001848  0EC8               	movlw	low I2C1_MasterWrite@trBlock
  2151  00184A  6E14               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  2152  00184C  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2153  00184E  6E15               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  2154  001850  C01D  F016         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  2155  001854  C01E  F017         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  2156  001858  C01F  F018         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  2157  00185C  C020  F019         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  2158  001860  C021  F01A         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  2159  001864  ECB4  F00C         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  2160                           
  2161                           ;i2c1.c: 555: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  2162  001868  0EC8               	movlw	low I2C1_MasterWrite@trBlock
  2163  00186A  6E14               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  2164  00186C  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2165  00186E  6E15               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  2166  001870  C022  F016         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  2167  001874  C023  F017         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  2168  001878  0E01               	movlw	1
  2169  00187A  EC28  F00B         	call	_I2C1_MasterTRBInsert
  2170                           
  2171                           ;i2c1.c: 556: } else {
  2172  00187E  0012               	return	
  2173  001880                     l2748:
  2174                           
  2175                           ;i2c1.c: 557: *pflag = I2C1_MESSAGE_FAIL;
  2176  001880  C022  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  2177  001884  C023  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  2178  001888  0E01               	movlw	1
  2179  00188A  6EDF               	movwf	indf2,c
  2180  00188C  0012               	return	
  2181  00188E                     __end_of_I2C1_MasterWrite:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           prodh	equ	0xFF4
  2188                           prodl	equ	0xFF3
  2189                           intcon	equ	0xFF2
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           indf2	equ	0xFDF
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  2198 ;; Defined at:
  2199 ;;		line 638 in file "mcc_generated_files/i2c1.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  ptrb            2   19[COMRAM] PTR struct .
  2202 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  2203 ;;  pdata           2   21[COMRAM] PTR unsigned char 
  2204 ;;		 -> oled_data@write(2), oled_cmd@write(2), 
  2205 ;;  length          1   23[COMRAM] unsigned char 
  2206 ;;  address         2   24[COMRAM] unsigned int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2218 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;Total ram usage:        9 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    3
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_I2C1_MasterWrite
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text10
  2233  001968                     __ptext10:
  2234                           	opt stack 0
  2235  001968                     _I2C1_MasterWriteTRBBuild:
  2236                           	opt stack 22
  2237                           
  2238                           ;i2c1.c: 643: ptrb->address = address << 1;
  2239                           
  2240                           ;incstack = 0
  2241  001968  C019  F01B         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  2242  00196C  C01A  F01C         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  2243  001970  90D8               	bcf	status,0,c
  2244  001972  361B               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  2245  001974  361C               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  2246  001976  C014  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  2247  00197A  C015  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  2248  00197E  C01B  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  2249  001982  C01C  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  2250                           
  2251                           ;i2c1.c: 644: ptrb->length = length;
  2252  001986  EE20 F002          	lfsr	2,2
  2253  00198A  5014               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2254  00198C  26D9               	addwf	fsr2l,f,c
  2255  00198E  5015               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2256  001990  22DA               	addwfc	fsr2h,f,c
  2257  001992  C018  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  2258                           
  2259                           ;i2c1.c: 645: ptrb->pbuffer = pdata;
  2260  001996  EE20 F003          	lfsr	2,3
  2261  00199A  5014               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2262  00199C  26D9               	addwf	fsr2l,f,c
  2263  00199E  5015               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2264  0019A0  22DA               	addwfc	fsr2h,f,c
  2265  0019A2  C016  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  2266  0019A6  C017  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  2267  0019AA  0012               	return		;funcret
  2268  0019AC                     __end_of_I2C1_MasterWriteTRBBuild:
  2269                           	opt stack 0
  2270                           tblptru	equ	0xFF8
  2271                           tblptrh	equ	0xFF7
  2272                           tblptrl	equ	0xFF6
  2273                           tablat	equ	0xFF5
  2274                           prodh	equ	0xFF4
  2275                           prodl	equ	0xFF3
  2276                           intcon	equ	0xFF2
  2277                           postinc0	equ	0xFEE
  2278                           wreg	equ	0xFE8
  2279                           indf2	equ	0xFDF
  2280                           postinc2	equ	0xFDE
  2281                           postdec2	equ	0xFDD
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _I2C1_MasterTRBInsert *****************
  2287 ;; Defined at:
  2288 ;;		line 580 in file "mcc_generated_files/i2c1.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  count           1    wreg     unsigned char 
  2291 ;;  ptrb_list       2   19[COMRAM] PTR struct .
  2292 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  2293 ;;  pflag           2   21[COMRAM] PTR enum E6981
  2294 ;;		 -> I2C_M_write@status(1), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  count           1   24[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;Total ram usage:        6 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_I2C1_MasterWrite
  2317 ;;		_I2C1_MasterRead
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text11
  2322  001650                     __ptext11:
  2323                           	opt stack 0
  2324  001650                     _I2C1_MasterTRBInsert:
  2325                           	opt stack 22
  2326                           
  2327                           ;incstack = 0
  2328                           ;I2C1_MasterTRBInsert@count stored from wreg
  2329  001650  6E19               	movwf	I2C1_MasterTRBInsert@count,c
  2330                           
  2331                           ;i2c1.c: 586: if (i2c1_object.trStatus.s.full != 1) {
  2332  001652  0100               	movlb	0	; () banked
  2333  001654  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
  2334  001656  D046               	goto	l2736
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;i2c1.c: 587: *pflag = I2C1_MESSAGE_PENDING;
  2338  001658  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2339  00165C  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2340  001660  0E02               	movlw	2
  2341  001662  6EDF               	movwf	indf2,c
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;i2c1.c: 589: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  2345  001664  0100               	movlb	0	; () banked
  2346  001666  EE20 F001          	lfsr	2,1
  2347  00166A  51B8               	movf	_i2c1_object& (0+255),w,b
  2348  00166C  26D9               	addwf	fsr2l,f,c
  2349  00166E  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  2350  001670  22DA               	addwfc	fsr2h,f,c
  2351  001672  C014  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  2352  001676  C015  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;i2c1.c: 590: i2c1_object.pTrTail->count = count;
  2356  00167A  C0B8  FFD9         	movff	_i2c1_object,fsr2l
  2357  00167E  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
  2358  001682  C019  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;i2c1.c: 591: i2c1_object.pTrTail->pTrFlag = pflag;
  2362  001686  0100               	movlb	0	; () banked
  2363  001688  EE20 F003          	lfsr	2,3
  2364  00168C  51B8               	movf	_i2c1_object& (0+255),w,b
  2365  00168E  26D9               	addwf	fsr2l,f,c
  2366  001690  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  2367  001692  22DA               	addwfc	fsr2h,f,c
  2368  001694  C016  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  2369  001698  C017  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;i2c1.c: 592: i2c1_object.pTrTail++;
  2373  00169C  0E05               	movlw	5
  2374  00169E  0100               	movlb	0	; () banked
  2375  0016A0  27B8               	addwf	_i2c1_object& (0+255),f,b
  2376  0016A2  0E00               	movlw	0
  2377  0016A4  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;i2c1.c: 595: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)) {
  2381  0016A6  0ED2               	movlw	low (_i2c1_tr_queue+5)
  2382  0016A8  0100               	movlb	0	; () banked
  2383  0016AA  19B8               	xorwf	_i2c1_object& (0+255),w,b
  2384  0016AC  E10B               	bnz	l2732
  2385  0016AE  0E00               	movlw	high (_i2c1_tr_queue+5)
  2386  0016B0  0100               	movlb	0	; () banked
  2387  0016B2  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
  2388  0016B4  A4D8               	btfss	status,2,c
  2389  0016B6  D006               	goto	l2732
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;i2c1.c: 597: i2c1_object.pTrTail = i2c1_tr_queue;
  2393  0016B8  0ECD               	movlw	low _i2c1_tr_queue
  2394  0016BA  0100               	movlb	0	; () banked
  2395  0016BC  6FB8               	movwf	_i2c1_object& (0+255),b
  2396  0016BE  0E00               	movlw	high _i2c1_tr_queue
  2397  0016C0  0100               	movlb	0	; () banked
  2398  0016C2  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  2399  0016C4                     l2732:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;i2c1.c: 598: }
  2403                           ;i2c1.c: 602: i2c1_object.trStatus.s.empty = 0;
  2404  0016C4  0100               	movlb	0	; () banked
  2405  0016C6  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
  2406                           
  2407                           ;i2c1.c: 605: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  2408  0016C8  0100               	movlb	0	; () banked
  2409  0016CA  51B8               	movf	_i2c1_object& (0+255),w,b
  2410  0016CC  0100               	movlb	0	; () banked
  2411  0016CE  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
  2412  0016D0  E10F               	bnz	l2738
  2413  0016D2  0100               	movlb	0	; () banked
  2414  0016D4  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  2415  0016D6  0100               	movlb	0	; () banked
  2416  0016D8  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
  2417  0016DA  A4D8               	btfss	status,2,c
  2418  0016DC  D009               	goto	l2738
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;i2c1.c: 607: i2c1_object.trStatus.s.full = 1;
  2422  0016DE  0100               	movlb	0	; () banked
  2423  0016E0  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;i2c1.c: 608: }
  2427                           ;i2c1.c: 610: } else {
  2428  0016E2  D006               	goto	l2738
  2429  0016E4                     l2736:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;i2c1.c: 611: *pflag = I2C1_MESSAGE_FAIL;
  2433  0016E4  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2434  0016E8  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2435  0016EC  0E01               	movlw	1
  2436  0016EE  6EDF               	movwf	indf2,c
  2437  0016F0                     l2738:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;i2c1.c: 612: }
  2441                           ;i2c1.c: 615: if (*pflag == I2C1_MESSAGE_PENDING) {
  2442  0016F0  C016  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  2443  0016F4  C017  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  2444  0016F8  0E02               	movlw	2
  2445  0016FA  18DE               	xorwf	postinc2,w,c
  2446  0016FC  A4D8               	btfss	status,2,c
  2447  0016FE  0012               	return	
  2448  001700                     l2742:
  2449  001700  5042               	movf	_i2c1_state,w,c
  2450  001702  A4D8               	btfss	status,2,c
  2451  001704  D7FD               	goto	l2742
  2452                           
  2453                           ;i2c1.c: 617: {
  2454                           ;i2c1.c: 620: PIR1bits.SSP1IF = 1;
  2455  001706  869E               	bsf	3998,3,c	;volatile
  2456  001708  0012               	return	
  2457  00170A                     __end_of_I2C1_MasterTRBInsert:
  2458                           	opt stack 0
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           intcon	equ	0xFF2
  2466                           postinc0	equ	0xFEE
  2467                           wreg	equ	0xFE8
  2468                           indf2	equ	0xFDF
  2469                           postinc2	equ	0xFDE
  2470                           postdec2	equ	0xFDD
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function _SYSTEM_Initialize *****************
  2476 ;; Defined at:
  2477 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    5
  2498 ;; This function calls:
  2499 ;;		_ADC_Initialize
  2500 ;;		_EUSART1_Initialize
  2501 ;;		_EUSART2_Initialize
  2502 ;;		_I2C1_Initialize
  2503 ;;		_INTERRUPT_Initialize
  2504 ;;		_OSCILLATOR_Initialize
  2505 ;;		_PIN_MANAGER_Initialize
  2506 ;;		_TMR0_Initialize
  2507 ;;		_TMR1_Initialize
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text12
  2514  001CE6                     __ptext12:
  2515                           	opt stack 0
  2516  001CE6                     _SYSTEM_Initialize:
  2517                           	opt stack 25
  2518                           
  2519                           ;mcc.c: 113: OSCILLATOR_Initialize();
  2520                           
  2521                           ;incstack = 0
  2522  001CE6  ECFE  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  2523                           
  2524                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  2525  001CEA  EC6C  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2526                           
  2527                           ;mcc.c: 115: INTERRUPT_Initialize();
  2528  001CEE  ECF4  F00E         	call	_INTERRUPT_Initialize	;wreg free
  2529                           
  2530                           ;mcc.c: 116: ADC_Initialize();
  2531  001CF2  ECE9  F00E         	call	_ADC_Initialize	;wreg free
  2532                           
  2533                           ;mcc.c: 117: EUSART1_Initialize();
  2534  001CF6  EC6C  F00D         	call	_EUSART1_Initialize	;wreg free
  2535                           
  2536                           ;mcc.c: 118: EUSART2_Initialize();
  2537  001CFA  EC51  F00D         	call	_EUSART2_Initialize	;wreg free
  2538                           
  2539                           ;mcc.c: 119: I2C1_Initialize();
  2540  001CFE  EC33  F00D         	call	_I2C1_Initialize	;wreg free
  2541                           
  2542                           ;mcc.c: 120: TMR0_Initialize();
  2543  001D02  ECC4  F00E         	call	_TMR0_Initialize	;wreg free
  2544                           
  2545                           ;mcc.c: 121: TMR1_Initialize();
  2546  001D06  EC98  F00E         	call	_TMR1_Initialize	;wreg free
  2547  001D0A  0012               	return		;funcret
  2548  001D0C                     __end_of_SYSTEM_Initialize:
  2549                           	opt stack 0
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           prodh	equ	0xFF4
  2555                           prodl	equ	0xFF3
  2556                           intcon	equ	0xFF2
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           indf2	equ	0xFDF
  2560                           postinc2	equ	0xFDE
  2561                           postdec2	equ	0xFDD
  2562                           fsr2h	equ	0xFDA
  2563                           fsr2l	equ	0xFD9
  2564                           status	equ	0xFD8
  2565                           
  2566 ;; *************** function _TMR1_Initialize *****************
  2567 ;; Defined at:
  2568 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    4
  2589 ;; This function calls:
  2590 ;;		_TMR1_StartTimer
  2591 ;; This function is called by:
  2592 ;;		_SYSTEM_Initialize
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text13
  2597  001D30                     __ptext13:
  2598                           	opt stack 0
  2599  001D30                     _TMR1_Initialize:
  2600                           	opt stack 25
  2601                           
  2602                           ;tmr1.c: 68: T1CON = 0x30;
  2603                           
  2604                           ;incstack = 0
  2605  001D30  0E30               	movlw	48
  2606  001D32  6ECD               	movwf	4045,c	;volatile
  2607                           
  2608                           ;tmr1.c: 71: T1GCON = 0x00;
  2609  001D34  0E00               	movlw	0
  2610  001D36  6ECC               	movwf	4044,c	;volatile
  2611                           
  2612                           ;tmr1.c: 74: TMR1H = 0x3C;
  2613  001D38  0E3C               	movlw	60
  2614  001D3A  6ECF               	movwf	4047,c	;volatile
  2615                           
  2616                           ;tmr1.c: 77: TMR1L = 0xAF;
  2617  001D3C  0EAF               	movlw	175
  2618  001D3E  6ECE               	movwf	4046,c	;volatile
  2619                           
  2620                           ;tmr1.c: 80: timer1ReloadVal = TMR1;
  2621  001D40  CFCE F049          	movff	4046,_timer1ReloadVal	;volatile
  2622  001D44  CFCF F04A          	movff	4047,_timer1ReloadVal+1	;volatile
  2623                           
  2624                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2625  001D48  909E               	bcf	3998,0,c	;volatile
  2626                           
  2627                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2628  001D4A  809D               	bsf	3997,0,c	;volatile
  2629                           
  2630                           ;tmr1.c: 89: TMR1_StartTimer();
  2631  001D4C  EC0E  F00F         	call	_TMR1_StartTimer	;wreg free
  2632  001D50  0012               	return		;funcret
  2633  001D52                     __end_of_TMR1_Initialize:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           fsr2h	equ	0xFDA
  2648                           fsr2l	equ	0xFD9
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _TMR1_StartTimer *****************
  2652 ;; Defined at:
  2653 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		None
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    3
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_TMR1_Initialize
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text14
  2682  001E1C                     __ptext14:
  2683                           	opt stack 0
  2684  001E1C                     _TMR1_StartTimer:
  2685                           	opt stack 25
  2686                           
  2687                           ;tmr1.c: 94: T1CONbits.TMR1ON = 1;
  2688                           
  2689                           ;incstack = 0
  2690  001E1C  80CD               	bsf	4045,0,c	;volatile
  2691  001E1E  0012               	return		;funcret
  2692  001E20                     __end_of_TMR1_StartTimer:
  2693                           	opt stack 0
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           prodh	equ	0xFF4
  2699                           prodl	equ	0xFF3
  2700                           intcon	equ	0xFF2
  2701                           postinc0	equ	0xFEE
  2702                           wreg	equ	0xFE8
  2703                           indf2	equ	0xFDF
  2704                           postinc2	equ	0xFDE
  2705                           postdec2	equ	0xFDD
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _TMR0_Initialize *****************
  2711 ;; Defined at:
  2712 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    4
  2733 ;; This function calls:
  2734 ;;		_TMR0_StartTimer
  2735 ;; This function is called by:
  2736 ;;		_SYSTEM_Initialize
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text15
  2741  001D88                     __ptext15:
  2742                           	opt stack 0
  2743  001D88                     _TMR0_Initialize:
  2744                           	opt stack 25
  2745                           
  2746                           ;tmr0.c: 93: T0CON = 0xD5;
  2747                           
  2748                           ;incstack = 0
  2749  001D88  0ED5               	movlw	213
  2750  001D8A  6ED5               	movwf	4053,c	;volatile
  2751                           
  2752                           ;tmr0.c: 96: TMR0H = 0x80;
  2753  001D8C  0E80               	movlw	128
  2754  001D8E  6ED7               	movwf	4055,c	;volatile
  2755                           
  2756                           ;tmr0.c: 99: TMR0L = 0x00;
  2757  001D90  0E00               	movlw	0
  2758  001D92  6ED6               	movwf	4054,c	;volatile
  2759                           
  2760                           ;tmr0.c: 102: timer0ReloadVal8bit = 0x80;
  2761  001D94  0E80               	movlw	128
  2762  001D96  6E4B               	movwf	_timer0ReloadVal8bit,c	;volatile
  2763                           
  2764                           ;tmr0.c: 105: INTCONbits.TMR0IF = 0;
  2765  001D98  94F2               	bcf	intcon,2,c	;volatile
  2766                           
  2767                           ;tmr0.c: 108: INTCONbits.TMR0IE = 1;
  2768  001D9A  8AF2               	bsf	intcon,5,c	;volatile
  2769                           
  2770                           ;tmr0.c: 111: TMR0_StartTimer();
  2771  001D9C  EC10  F00F         	call	_TMR0_StartTimer	;wreg free
  2772  001DA0  0012               	return		;funcret
  2773  001DA2                     __end_of_TMR0_Initialize:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           prodh	equ	0xFF4
  2780                           prodl	equ	0xFF3
  2781                           intcon	equ	0xFF2
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           indf2	equ	0xFDF
  2785                           postinc2	equ	0xFDE
  2786                           postdec2	equ	0xFDD
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _TMR0_StartTimer *****************
  2792 ;; Defined at:
  2793 ;;		line 114 in file "mcc_generated_files/tmr0.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		None
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    3
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_TMR0_Initialize
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text16
  2822  001E20                     __ptext16:
  2823                           	opt stack 0
  2824  001E20                     _TMR0_StartTimer:
  2825                           	opt stack 25
  2826                           
  2827                           ;tmr0.c: 116: T0CONbits.TMR0ON = 1;
  2828                           
  2829                           ;incstack = 0
  2830  001E20  8ED5               	bsf	4053,7,c	;volatile
  2831  001E22  0012               	return		;funcret
  2832  001E24                     __end_of_TMR0_StartTimer:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           prodh	equ	0xFF4
  2839                           prodl	equ	0xFF3
  2840                           intcon	equ	0xFF2
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           indf2	equ	0xFDF
  2844                           postinc2	equ	0xFDE
  2845                           postdec2	equ	0xFDD
  2846                           fsr2h	equ	0xFDA
  2847                           fsr2l	equ	0xFD9
  2848                           status	equ	0xFD8
  2849                           
  2850 ;; *************** function _PIN_MANAGER_Initialize *****************
  2851 ;; Defined at:
  2852 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;Total ram usage:        0 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    3
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_SYSTEM_Initialize
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text17
  2881  0018D8                     __ptext17:
  2882                           	opt stack 0
  2883  0018D8                     _PIN_MANAGER_Initialize:
  2884                           	opt stack 26
  2885                           
  2886                           ;pin_manager.c: 51: LATA = 0x00;
  2887                           
  2888                           ;incstack = 0
  2889  0018D8  0E00               	movlw	0
  2890  0018DA  6E89               	movwf	3977,c	;volatile
  2891                           
  2892                           ;pin_manager.c: 52: TRISA = 0xEF;
  2893  0018DC  0EEF               	movlw	239
  2894  0018DE  6E92               	movwf	3986,c	;volatile
  2895                           
  2896                           ;pin_manager.c: 53: ANSELA = 0x0C;
  2897  0018E0  0E0C               	movlw	12
  2898  0018E2  010F               	movlb	15	; () banked
  2899  0018E4  6F38               	movwf	56,b	;volatile
  2900                           
  2901                           ;pin_manager.c: 55: LATB = 0x00;
  2902  0018E6  0E00               	movlw	0
  2903  0018E8  6E8A               	movwf	3978,c	;volatile
  2904                           
  2905                           ; BSR set to: 15
  2906                           ;pin_manager.c: 56: TRISB = 0xFF;
  2907  0018EA  6893               	setf	3987,c	;volatile
  2908                           
  2909                           ;pin_manager.c: 57: ANSELB = 0x00;
  2910  0018EC  0E00               	movlw	0
  2911  0018EE  010F               	movlb	15	; () banked
  2912  0018F0  6F39               	movwf	57,b	;volatile
  2913                           
  2914                           ;pin_manager.c: 58: WPUB = 0x00;
  2915  0018F2  0E00               	movlw	0
  2916  0018F4  6E61               	movwf	3937,c	;volatile
  2917                           
  2918                           ;pin_manager.c: 60: LATC = 0x18;
  2919  0018F6  0E18               	movlw	24
  2920  0018F8  6E8B               	movwf	3979,c	;volatile
  2921                           
  2922                           ; BSR set to: 15
  2923                           ;pin_manager.c: 61: TRISC = 0xFF;
  2924  0018FA  6894               	setf	3988,c	;volatile
  2925                           
  2926                           ;pin_manager.c: 62: ANSELC = 0x00;
  2927  0018FC  0E00               	movlw	0
  2928  0018FE  010F               	movlb	15	; () banked
  2929  001900  6F3A               	movwf	58,b	;volatile
  2930                           
  2931                           ;pin_manager.c: 64: LATD = 0x00;
  2932  001902  0E00               	movlw	0
  2933  001904  6E8C               	movwf	3980,c	;volatile
  2934                           
  2935                           ; BSR set to: 15
  2936                           ;pin_manager.c: 65: TRISD = 0xFF;
  2937  001906  6895               	setf	3989,c	;volatile
  2938                           
  2939                           ;pin_manager.c: 66: ANSELD = 0x00;
  2940  001908  0E00               	movlw	0
  2941  00190A  010F               	movlb	15	; () banked
  2942  00190C  6F3B               	movwf	59,b	;volatile
  2943                           
  2944                           ;pin_manager.c: 68: LATE = 0x00;
  2945  00190E  0E00               	movlw	0
  2946  001910  6E8D               	movwf	3981,c	;volatile
  2947                           
  2948                           ;pin_manager.c: 69: TRISE = 0x03;
  2949  001912  0E03               	movlw	3
  2950  001914  6E96               	movwf	3990,c	;volatile
  2951                           
  2952                           ;pin_manager.c: 70: ANSELE = 0x03;
  2953  001916  0E03               	movlw	3
  2954  001918  010F               	movlb	15	; () banked
  2955  00191A  6F3C               	movwf	60,b	;volatile
  2956                           
  2957                           ; BSR set to: 15
  2958                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 0x01;
  2959  00191C  8EF1               	bsf	intcon2,7,c	;volatile
  2960                           
  2961                           ; BSR set to: 15
  2962  00191E  0012               	return		;funcret
  2963  001920                     __end_of_PIN_MANAGER_Initialize:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           prodh	equ	0xFF4
  2970                           prodl	equ	0xFF3
  2971                           intcon	equ	0xFF2
  2972                           intcon2	equ	0xFF1
  2973                           postinc0	equ	0xFEE
  2974                           wreg	equ	0xFE8
  2975                           indf2	equ	0xFDF
  2976                           postinc2	equ	0xFDE
  2977                           postdec2	equ	0xFDD
  2978                           fsr2h	equ	0xFDA
  2979                           fsr2l	equ	0xFD9
  2980                           status	equ	0xFD8
  2981                           
  2982 ;; *************** function _OSCILLATOR_Initialize *****************
  2983 ;; Defined at:
  2984 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_SYSTEM_Initialize
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text18
  3013  001DFC                     __ptext18:
  3014                           	opt stack 0
  3015  001DFC                     _OSCILLATOR_Initialize:
  3016                           	opt stack 26
  3017                           
  3018                           ;mcc.c: 126: OSCCON = 0x60;
  3019                           
  3020                           ; BSR set to: 15
  3021                           ;incstack = 0
  3022  001DFC  0E60               	movlw	96
  3023  001DFE  6ED3               	movwf	4051,c	;volatile
  3024                           
  3025                           ;mcc.c: 128: OSCCON2 = 0x04;
  3026  001E00  0E04               	movlw	4
  3027  001E02  6ED2               	movwf	4050,c	;volatile
  3028                           
  3029                           ;mcc.c: 130: OSCTUNE = 0x40;
  3030  001E04  0E40               	movlw	64
  3031  001E06  6E9B               	movwf	3995,c	;volatile
  3032  001E08  0012               	return		;funcret
  3033  001E0A                     __end_of_OSCILLATOR_Initialize:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           intcon2	equ	0xFF1
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           indf2	equ	0xFDF
  3046                           postinc2	equ	0xFDE
  3047                           postdec2	equ	0xFDD
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _INTERRUPT_Initialize *****************
  3053 ;; Defined at:
  3054 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		None
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    3
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_SYSTEM_Initialize
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text19
  3083  001DE8                     __ptext19:
  3084                           	opt stack 0
  3085  001DE8                     _INTERRUPT_Initialize:
  3086                           	opt stack 26
  3087                           
  3088                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3089                           
  3090                           ;incstack = 0
  3091  001DE8  9ED0               	bcf	4048,7,c	;volatile
  3092                           
  3093                           ;interrupt_manager.c: 59: IPR1bits.SSP1IP = 0;
  3094  001DEA  969F               	bcf	3999,3,c	;volatile
  3095                           
  3096                           ;interrupt_manager.c: 61: IPR2bits.BCL1IP = 0;
  3097  001DEC  96A2               	bcf	4002,3,c	;volatile
  3098                           
  3099                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  3100  001DEE  9A9F               	bcf	3999,5,c	;volatile
  3101                           
  3102                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  3103  001DF0  989F               	bcf	3999,4,c	;volatile
  3104                           
  3105                           ;interrupt_manager.c: 67: IPR3bits.RC2IP = 0;
  3106  001DF2  9AA5               	bcf	4005,5,c	;volatile
  3107                           
  3108                           ;interrupt_manager.c: 69: IPR3bits.TX2IP = 0;
  3109  001DF4  98A5               	bcf	4005,4,c	;volatile
  3110                           
  3111                           ;interrupt_manager.c: 71: INTCON2bits.TMR0IP = 0;
  3112  001DF6  94F1               	bcf	intcon2,2,c	;volatile
  3113                           
  3114                           ;interrupt_manager.c: 73: IPR1bits.TMR1IP = 0;
  3115  001DF8  909F               	bcf	3999,0,c	;volatile
  3116  001DFA  0012               	return		;funcret
  3117  001DFC                     __end_of_INTERRUPT_Initialize:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           prodh	equ	0xFF4
  3124                           prodl	equ	0xFF3
  3125                           intcon	equ	0xFF2
  3126                           intcon2	equ	0xFF1
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           postdec2	equ	0xFDD
  3132                           fsr2h	equ	0xFDA
  3133                           fsr2l	equ	0xFD9
  3134                           status	equ	0xFD8
  3135                           
  3136 ;; *************** function _I2C1_Initialize *****************
  3137 ;; Defined at:
  3138 ;;		line 194 in file "mcc_generated_files/i2c1.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    3
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_SYSTEM_Initialize
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text20
  3167  001A66                     __ptext20:
  3168                           	opt stack 0
  3169  001A66                     _I2C1_Initialize:
  3170                           	opt stack 26
  3171                           
  3172                           ;i2c1.c: 195: i2c1_object.pTrHead = i2c1_tr_queue;
  3173                           
  3174                           ;incstack = 0
  3175  001A66  0ECD               	movlw	low _i2c1_tr_queue
  3176  001A68  0100               	movlb	0	; () banked
  3177  001A6A  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  3178  001A6C  0E00               	movlw	high _i2c1_tr_queue
  3179  001A6E  0100               	movlb	0	; () banked
  3180  001A70  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  3181                           
  3182                           ;i2c1.c: 196: i2c1_object.pTrTail = i2c1_tr_queue;
  3183  001A72  0ECD               	movlw	low _i2c1_tr_queue
  3184  001A74  0100               	movlb	0	; () banked
  3185  001A76  6FB8               	movwf	_i2c1_object& (0+255),b
  3186  001A78  0E00               	movlw	high _i2c1_tr_queue
  3187  001A7A  0100               	movlb	0	; () banked
  3188  001A7C  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;i2c1.c: 197: i2c1_object.trStatus.s.empty = 1;
  3192  001A7E  0100               	movlb	0	; () banked
  3193  001A80  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;i2c1.c: 198: i2c1_object.trStatus.s.full = 0;
  3197  001A82  0100               	movlb	0	; () banked
  3198  001A84  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;i2c1.c: 200: i2c1_object.i2cErrors = 0;
  3202  001A86  0E00               	movlw	0
  3203  001A88  0100               	movlb	0	; () banked
  3204  001A8A  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;i2c1.c: 203: SSP1STAT = 0x00;
  3208  001A8C  0E00               	movlw	0
  3209  001A8E  6EC7               	movwf	4039,c	;volatile
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;i2c1.c: 205: SSP1CON1 = 0x28;
  3213  001A90  0E28               	movlw	40
  3214  001A92  6EC6               	movwf	4038,c	;volatile
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;i2c1.c: 207: SSP1CON3 = 0x00;
  3218  001A94  0E00               	movlw	0
  3219  001A96  6ECB               	movwf	4043,c	;volatile
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;i2c1.c: 209: SSP1ADD = 0x4F;
  3223  001A98  0E4F               	movlw	79
  3224  001A9A  6EC8               	movwf	4040,c	;volatile
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;i2c1.c: 213: PIR1bits.SSP1IF = 0;
  3228  001A9C  969E               	bcf	3998,3,c	;volatile
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;i2c1.c: 215: PIE1bits.SSP1IE = 1;
  3232  001A9E  869D               	bsf	3997,3,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235  001AA0  0012               	return		;funcret
  3236  001AA2                     __end_of_I2C1_Initialize:
  3237                           	opt stack 0
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           prodh	equ	0xFF4
  3243                           prodl	equ	0xFF3
  3244                           intcon	equ	0xFF2
  3245                           intcon2	equ	0xFF1
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           indf2	equ	0xFDF
  3249                           postinc2	equ	0xFDE
  3250                           postdec2	equ	0xFDD
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           status	equ	0xFD8
  3254                           
  3255 ;; *************** function _EUSART2_Initialize *****************
  3256 ;; Defined at:
  3257 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    3
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_SYSTEM_Initialize
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text21
  3286  001AA2                     __ptext21:
  3287                           	opt stack 0
  3288  001AA2                     _EUSART2_Initialize:
  3289                           	opt stack 26
  3290                           
  3291                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;incstack = 0
  3295  001AA2  9AA3               	bcf	4003,5,c	;volatile
  3296                           
  3297                           ;eusart2.c: 79: PIE3bits.TX2IE = 0;
  3298  001AA4  98A3               	bcf	4003,4,c	;volatile
  3299                           
  3300                           ;eusart2.c: 84: BAUD2CON = 0x48;
  3301  001AA6  0E48               	movlw	72
  3302  001AA8  6E70               	movwf	3952,c	;volatile
  3303                           
  3304                           ;eusart2.c: 87: RC2STA = 0x90;
  3305  001AAA  0E90               	movlw	144
  3306  001AAC  6E71               	movwf	3953,c	;volatile
  3307                           
  3308                           ;eusart2.c: 90: TX2STA = 0x26;
  3309  001AAE  0E26               	movlw	38
  3310  001AB0  6E72               	movwf	3954,c	;volatile
  3311                           
  3312                           ;eusart2.c: 93: SPBRG2 = 0x44;
  3313  001AB2  0E44               	movlw	68
  3314  001AB4  6E75               	movwf	3957,c	;volatile
  3315                           
  3316                           ;eusart2.c: 96: SPBRGH2 = 0x00;
  3317  001AB6  0E00               	movlw	0
  3318  001AB8  6E76               	movwf	3958,c	;volatile
  3319                           
  3320                           ;eusart2.c: 100: eusart2TxHead = 0;
  3321  001ABA  0E00               	movlw	0
  3322  001ABC  6E3E               	movwf	_eusart2TxHead,c
  3323                           
  3324                           ;eusart2.c: 101: eusart2TxTail = 0;
  3325  001ABE  0E00               	movlw	0
  3326  001AC0  6E3D               	movwf	_eusart2TxTail,c
  3327                           
  3328                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  3329  001AC2  0E08               	movlw	8
  3330  001AC4  0100               	movlb	0	; () banked
  3331  001AC6  6FEA               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3332                           
  3333                           ;eusart2.c: 104: eusart2RxHead = 0;
  3334  001AC8  0E00               	movlw	0
  3335  001ACA  6E3C               	movwf	_eusart2RxHead,c
  3336                           
  3337                           ;eusart2.c: 105: eusart2RxTail = 0;
  3338  001ACC  0E00               	movlw	0
  3339  001ACE  6E3B               	movwf	_eusart2RxTail,c
  3340                           
  3341                           ;eusart2.c: 106: eusart2RxCount = 0;
  3342  001AD0  0E00               	movlw	0
  3343  001AD2  6E3A               	movwf	_eusart2RxCount,c	;volatile
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;eusart2.c: 109: PIE3bits.RC2IE = 1;
  3347  001AD4  8AA3               	bsf	4003,5,c	;volatile
  3348                           
  3349                           ; BSR set to: 0
  3350  001AD6  0012               	return		;funcret
  3351  001AD8                     __end_of_EUSART2_Initialize:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           intcon2	equ	0xFF1
  3361                           postinc0	equ	0xFEE
  3362                           wreg	equ	0xFE8
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _EUSART1_Initialize *****************
  3371 ;; Defined at:
  3372 ;;		line 101 in file "mcc_generated_files/eusart1.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    3
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_SYSTEM_Initialize
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text22
  3401  001AD8                     __ptext22:
  3402                           	opt stack 0
  3403  001AD8                     _EUSART1_Initialize:
  3404                           	opt stack 26
  3405                           
  3406                           ;eusart1.c: 103: PIE1bits.RC1IE = 0;
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;incstack = 0
  3410  001AD8  9A9D               	bcf	3997,5,c	;volatile
  3411                           
  3412                           ;eusart1.c: 104: PIE1bits.TX1IE = 0;
  3413  001ADA  989D               	bcf	3997,4,c	;volatile
  3414                           
  3415                           ;eusart1.c: 109: BAUD1CON = 0x48;
  3416  001ADC  0E48               	movlw	72
  3417  001ADE  6EB8               	movwf	4024,c	;volatile
  3418                           
  3419                           ;eusart1.c: 112: RC1STA = 0x90;
  3420  001AE0  0E90               	movlw	144
  3421  001AE2  6EAB               	movwf	4011,c	;volatile
  3422                           
  3423                           ;eusart1.c: 115: TX1STA = 0x26;
  3424  001AE4  0E26               	movlw	38
  3425  001AE6  6EAC               	movwf	4012,c	;volatile
  3426                           
  3427                           ;eusart1.c: 118: SPBRG1 = 0x8A;
  3428  001AE8  0E8A               	movlw	138
  3429  001AEA  6EAF               	movwf	4015,c	;volatile
  3430                           
  3431                           ;eusart1.c: 121: SPBRGH1 = 0x00;
  3432  001AEC  0E00               	movlw	0
  3433  001AEE  6EB0               	movwf	4016,c	;volatile
  3434                           
  3435                           ;eusart1.c: 125: eusart1TxHead = 0;
  3436  001AF0  0E00               	movlw	0
  3437  001AF2  6E39               	movwf	_eusart1TxHead,c
  3438                           
  3439                           ;eusart1.c: 126: eusart1TxTail = 0;
  3440  001AF4  0E00               	movlw	0
  3441  001AF6  6E38               	movwf	_eusart1TxTail,c
  3442                           
  3443                           ;eusart1.c: 127: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3444  001AF8  0E40               	movlw	64
  3445  001AFA  0100               	movlb	0	; () banked
  3446  001AFC  6FE9               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3447                           
  3448                           ;eusart1.c: 129: eusart1RxHead = 0;
  3449  001AFE  0E00               	movlw	0
  3450  001B00  6E37               	movwf	_eusart1RxHead,c
  3451                           
  3452                           ;eusart1.c: 130: eusart1RxTail = 0;
  3453  001B02  0E00               	movlw	0
  3454  001B04  6E36               	movwf	_eusart1RxTail,c
  3455                           
  3456                           ;eusart1.c: 131: eusart1RxCount = 0;
  3457  001B06  0E00               	movlw	0
  3458  001B08  6E35               	movwf	_eusart1RxCount,c	;volatile
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;eusart1.c: 134: PIE1bits.RC1IE = 1;
  3462  001B0A  8A9D               	bsf	3997,5,c	;volatile
  3463                           
  3464                           ; BSR set to: 0
  3465  001B0C  0012               	return		;funcret
  3466  001B0E                     __end_of_EUSART1_Initialize:
  3467                           	opt stack 0
  3468                           tblptru	equ	0xFF8
  3469                           tblptrh	equ	0xFF7
  3470                           tblptrl	equ	0xFF6
  3471                           tablat	equ	0xFF5
  3472                           prodh	equ	0xFF4
  3473                           prodl	equ	0xFF3
  3474                           intcon	equ	0xFF2
  3475                           intcon2	equ	0xFF1
  3476                           postinc0	equ	0xFEE
  3477                           wreg	equ	0xFE8
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           postdec2	equ	0xFDD
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _ADC_Initialize *****************
  3486 ;; Defined at:
  3487 ;;		line 58 in file "mcc_generated_files/adc.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    3
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_SYSTEM_Initialize
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text23
  3516  001DD2                     __ptext23:
  3517                           	opt stack 0
  3518  001DD2                     _ADC_Initialize:
  3519                           	opt stack 26
  3520                           
  3521                           ;adc.c: 62: ADCON0 = 0x01;
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;incstack = 0
  3525  001DD2  0E01               	movlw	1
  3526  001DD4  6EC2               	movwf	4034,c	;volatile
  3527                           
  3528                           ;adc.c: 65: ADCON1 = 0x80;
  3529  001DD6  0E80               	movlw	128
  3530  001DD8  6EC1               	movwf	4033,c	;volatile
  3531                           
  3532                           ;adc.c: 68: ADCON2 = 0x8e;
  3533  001DDA  0E8E               	movlw	142
  3534  001DDC  6EC0               	movwf	4032,c	;volatile
  3535                           
  3536                           ;adc.c: 71: ADRESL = 0x00;
  3537  001DDE  0E00               	movlw	0
  3538  001DE0  6EC3               	movwf	4035,c	;volatile
  3539                           
  3540                           ;adc.c: 74: ADRESH = 0x00;
  3541  001DE2  0E00               	movlw	0
  3542  001DE4  6EC4               	movwf	4036,c	;volatile
  3543  001DE6  0012               	return		;funcret
  3544  001DE8                     __end_of_ADC_Initialize:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           intcon2	equ	0xFF1
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _EUSART_CompWrite *****************
  3564 ;; Defined at:
  3565 ;;		line 253 in file "main.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  data            1    wreg     unsigned char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  data            1   21[COMRAM] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;Total ram usage:        2 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    4
  3586 ;; This function calls:
  3587 ;;		_EUSART1_Write
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text24
  3594  001BDA                     __ptext24:
  3595                           	opt stack 0
  3596  001BDA                     _EUSART_CompWrite:
  3597                           	opt stack 26
  3598                           
  3599                           ;incstack = 0
  3600                           ;EUSART_CompWrite@data stored from wreg
  3601  001BDA  6E16               	movwf	EUSART_CompWrite@data,c
  3602                           
  3603                           ;main.c: 254: EUSART1_Write((data & 0xf0) | (not_of_before_data & 0x0f));
  3604  001BDC  C034  F015         	movff	_not_of_before_data,??_EUSART_CompWrite
  3605  001BE0  0E0F               	movlw	15
  3606  001BE2  1615               	andwf	??_EUSART_CompWrite,f,c
  3607  001BE4  5016               	movf	EUSART_CompWrite@data,w,c
  3608  001BE6  0BF0               	andlw	240
  3609  001BE8  1015               	iorwf	??_EUSART_CompWrite,w,c
  3610  001BEA  EC47  F00C         	call	_EUSART1_Write
  3611                           
  3612                           ;main.c: 255: not_of_before_data = ~data;
  3613  001BEE  5016               	movf	EUSART_CompWrite@data,w,c
  3614  001BF0  0AFF               	xorlw	255
  3615  001BF2  6E34               	movwf	_not_of_before_data,c
  3616                           
  3617                           ;main.c: 256: EUSART1_Write((data << 4) | (not_of_before_data >> 4));
  3618  001BF4  C034  F015         	movff	_not_of_before_data,??_EUSART_CompWrite
  3619  001BF8  3A15               	swapf	??_EUSART_CompWrite,f,c
  3620  001BFA  0E0F               	movlw	15
  3621  001BFC  1615               	andwf	??_EUSART_CompWrite,f,c
  3622  001BFE  3816               	swapf	EUSART_CompWrite@data,w,c
  3623  001C00  0BF0               	andlw	240
  3624  001C02  1015               	iorwf	??_EUSART_CompWrite,w,c
  3625  001C04  EC47  F00C         	call	_EUSART1_Write
  3626  001C08  0012               	return		;funcret
  3627  001C0A                     __end_of_EUSART_CompWrite:
  3628                           	opt stack 0
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           prodh	equ	0xFF4
  3634                           prodl	equ	0xFF3
  3635                           intcon	equ	0xFF2
  3636                           intcon2	equ	0xFF1
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           indf2	equ	0xFDF
  3640                           postinc2	equ	0xFDE
  3641                           postdec2	equ	0xFDD
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           
  3646 ;; *************** function _EUSART1_Write *****************
  3647 ;; Defined at:
  3648 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  txData          1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  txData          1   19[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;Total ram usage:        1 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    3
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_EUSART_CompWrite
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text25
  3678  00188E                     __ptext25:
  3679                           	opt stack 0
  3680  00188E                     _EUSART1_Write:
  3681                           	opt stack 26
  3682                           
  3683                           ;incstack = 0
  3684                           ;EUSART1_Write@txData stored from wreg
  3685  00188E  6E14               	movwf	EUSART1_Write@txData,c
  3686  001890                     l2232:
  3687  001890  0100               	movlb	0	; () banked
  3688  001892  51E9               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  3689  001894  B4D8               	btfsc	status,2,c
  3690  001896  D7FC               	goto	l2232
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;eusart1.c: 157: }
  3694                           ;eusart1.c: 159: if (0 == PIE1bits.TX1IE && waitCTS == 0) {
  3695  001898  B89D               	btfsc	3997,4,c	;volatile
  3696  00189A  D006               	goto	l539
  3697                           
  3698                           ; BSR set to: 0
  3699  00189C  5044               	movf	_waitCTS,w,c	;volatile
  3700  00189E  A4D8               	btfss	status,2,c
  3701  0018A0  D003               	goto	l539
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;eusart1.c: 160: TXREG1 = txData;
  3705  0018A2  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3706                           
  3707                           ;eusart1.c: 161: } else {
  3708  0018A6  D013               	goto	l2248
  3709  0018A8                     l539:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;eusart1.c: 162: PIE1bits.TX1IE = 0;
  3713  0018A8  989D               	bcf	3997,4,c	;volatile
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;eusart1.c: 163: eusart1TxBuffer[eusart1TxHead++] = txData;
  3717  0018AA  5039               	movf	_eusart1TxHead,w,c
  3718  0018AC  0D01               	mullw	1
  3719  0018AE  0E40               	movlw	low _eusart1TxBuffer
  3720  0018B0  24F3               	addwf	prodl,w,c
  3721  0018B2  6ED9               	movwf	fsr2l,c
  3722  0018B4  0E01               	movlw	high _eusart1TxBuffer
  3723  0018B6  20F4               	addwfc	prodh,w,c
  3724  0018B8  6EDA               	movwf	fsr2h,c
  3725  0018BA  C014  FFDF         	movff	EUSART1_Write@txData,indf2
  3726                           
  3727                           ; BSR set to: 0
  3728  0018BE  2A39               	incf	_eusart1TxHead,f,c
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;eusart1.c: 164: if (sizeof (eusart1TxBuffer) <= eusart1TxHead) {
  3732  0018C0  0E3F               	movlw	63
  3733  0018C2  6439               	cpfsgt	_eusart1TxHead,c
  3734  0018C4  D002               	goto	l2246
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;eusart1.c: 165: eusart1TxHead = 0;
  3738  0018C6  0E00               	movlw	0
  3739  0018C8  6E39               	movwf	_eusart1TxHead,c
  3740  0018CA                     l2246:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;eusart1.c: 166: }
  3744                           ;eusart1.c: 167: eusart1TxBufferRemaining--;
  3745  0018CA  0100               	movlb	0	; () banked
  3746  0018CC  07E9               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3747  0018CE                     l2248:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;eusart1.c: 168: }
  3751                           ;eusart1.c: 169: if (waitCTS == 0)
  3752  0018CE  5044               	movf	_waitCTS,w,c	;volatile
  3753  0018D0  A4D8               	btfss	status,2,c
  3754  0018D2  0012               	return	
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;eusart1.c: 170: PIE1bits.TX1IE = 1;
  3758  0018D4  889D               	bsf	3997,4,c	;volatile
  3759  0018D6  0012               	return	
  3760  0018D8                     __end_of_EUSART1_Write:
  3761                           	opt stack 0
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           intcon2	equ	0xFF1
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           indf2	equ	0xFDF
  3773                           postinc2	equ	0xFDE
  3774                           postdec2	equ	0xFDD
  3775                           fsr2h	equ	0xFDA
  3776                           fsr2l	equ	0xFD9
  3777                           status	equ	0xFD8
  3778                           
  3779 ;; *************** function _EUSART2_Read *****************
  3780 ;; Defined at:
  3781 ;;		line 112 in file "mcc_generated_files/eusart2.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  readValue       1   19[COMRAM] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      unsigned char 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;Total ram usage:        1 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    3
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text26
  3810  001B0E                     __ptext26:
  3811                           	opt stack 0
  3812  001B0E                     _EUSART2_Read:
  3813                           	opt stack 27
  3814                           
  3815                           ;eusart2.c: 113: uint8_t readValue = 0;
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;incstack = 0
  3819  001B0E  0E00               	movlw	0
  3820  001B10  6E14               	movwf	EUSART2_Read@readValue,c
  3821  001B12                     l2496:
  3822  001B12  503A               	movf	_eusart2RxCount,w,c	;volatile
  3823  001B14  B4D8               	btfsc	status,2,c
  3824  001B16  D7FD               	goto	l2496
  3825                           
  3826                           ;eusart2.c: 116: }
  3827                           ;eusart2.c: 118: PIE3bits.RC2IE = 0;
  3828  001B18  9AA3               	bcf	4003,5,c	;volatile
  3829                           
  3830                           ;eusart2.c: 120: readValue = eusart2RxBuffer[eusart2RxTail++];
  3831  001B1A  503B               	movf	_eusart2RxTail,w,c
  3832  001B1C  0D01               	mullw	1
  3833  001B1E  0E60               	movlw	low _eusart2RxBuffer
  3834  001B20  24F3               	addwf	prodl,w,c
  3835  001B22  6ED9               	movwf	fsr2l,c
  3836  001B24  0E00               	movlw	high _eusart2RxBuffer
  3837  001B26  20F4               	addwfc	prodh,w,c
  3838  001B28  6EDA               	movwf	fsr2h,c
  3839  001B2A  50DF               	movf	indf2,w,c
  3840  001B2C  6E14               	movwf	EUSART2_Read@readValue,c
  3841  001B2E  2A3B               	incf	_eusart2RxTail,f,c
  3842                           
  3843                           ;eusart2.c: 121: if (sizeof (eusart2RxBuffer) <= eusart2RxTail) {
  3844  001B30  0E3F               	movlw	63
  3845  001B32  643B               	cpfsgt	_eusart2RxTail,c
  3846  001B34  D002               	goto	l2506
  3847                           
  3848                           ;eusart2.c: 122: eusart2RxTail = 0;
  3849  001B36  0E00               	movlw	0
  3850  001B38  6E3B               	movwf	_eusart2RxTail,c
  3851  001B3A                     l2506:
  3852                           
  3853                           ;eusart2.c: 123: }
  3854                           ;eusart2.c: 124: eusart2RxCount--;
  3855  001B3A  063A               	decf	_eusart2RxCount,f,c	;volatile
  3856                           
  3857                           ;eusart2.c: 125: PIE3bits.RC2IE = 1;
  3858  001B3C  8AA3               	bsf	4003,5,c	;volatile
  3859                           
  3860                           ;eusart2.c: 127: return readValue;
  3861  001B3E  5014               	movf	EUSART2_Read@readValue,w,c
  3862  001B40  0012               	return	
  3863  001B42                     __end_of_EUSART2_Read:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           intcon2	equ	0xFF1
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           indf2	equ	0xFDF
  3876                           postinc2	equ	0xFDE
  3877                           postdec2	equ	0xFDD
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           
  3882 ;; *************** function _EUSART1_Read *****************
  3883 ;; Defined at:
  3884 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  readValue       1   19[COMRAM] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      unsigned char 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;Total ram usage:        1 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    3
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_main
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text27
  3913  001B42                     __ptext27:
  3914                           	opt stack 0
  3915  001B42                     _EUSART1_Read:
  3916                           	opt stack 27
  3917                           
  3918                           ;eusart1.c: 138: uint8_t readValue = 0;
  3919                           
  3920                           ;incstack = 0
  3921  001B42  0E00               	movlw	0
  3922  001B44  6E14               	movwf	EUSART1_Read@readValue,c
  3923  001B46                     l2516:
  3924  001B46  5035               	movf	_eusart1RxCount,w,c	;volatile
  3925  001B48  B4D8               	btfsc	status,2,c
  3926  001B4A  D7FD               	goto	l2516
  3927                           
  3928                           ;eusart1.c: 141: }
  3929                           ;eusart1.c: 143: PIE1bits.RC1IE = 0;
  3930  001B4C  9A9D               	bcf	3997,5,c	;volatile
  3931                           
  3932                           ;eusart1.c: 145: readValue = eusart1RxBuffer[eusart1RxTail++];
  3933  001B4E  5036               	movf	_eusart1RxTail,w,c
  3934  001B50  0D01               	mullw	1
  3935  001B52  0E00               	movlw	low _eusart1RxBuffer
  3936  001B54  24F3               	addwf	prodl,w,c
  3937  001B56  6ED9               	movwf	fsr2l,c
  3938  001B58  0E01               	movlw	high _eusart1RxBuffer
  3939  001B5A  20F4               	addwfc	prodh,w,c
  3940  001B5C  6EDA               	movwf	fsr2h,c
  3941  001B5E  50DF               	movf	indf2,w,c
  3942  001B60  6E14               	movwf	EUSART1_Read@readValue,c
  3943  001B62  2A36               	incf	_eusart1RxTail,f,c
  3944                           
  3945                           ;eusart1.c: 146: if (sizeof (eusart1RxBuffer) <= eusart1RxTail) {
  3946  001B64  0E3F               	movlw	63
  3947  001B66  6436               	cpfsgt	_eusart1RxTail,c
  3948  001B68  D002               	goto	l2526
  3949                           
  3950                           ;eusart1.c: 147: eusart1RxTail = 0;
  3951  001B6A  0E00               	movlw	0
  3952  001B6C  6E36               	movwf	_eusart1RxTail,c
  3953  001B6E                     l2526:
  3954                           
  3955                           ;eusart1.c: 148: }
  3956                           ;eusart1.c: 149: eusart1RxCount--;
  3957  001B6E  0635               	decf	_eusart1RxCount,f,c	;volatile
  3958                           
  3959                           ;eusart1.c: 150: PIE1bits.RC1IE = 1;
  3960  001B70  8A9D               	bsf	3997,5,c	;volatile
  3961                           
  3962                           ;eusart1.c: 152: return readValue;
  3963  001B72  5014               	movf	EUSART1_Read@readValue,w,c
  3964  001B74  0012               	return	
  3965  001B76                     __end_of_EUSART1_Read:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           tblptrh	equ	0xFF7
  3969                           tblptrl	equ	0xFF6
  3970                           tablat	equ	0xFF5
  3971                           prodh	equ	0xFF4
  3972                           prodl	equ	0xFF3
  3973                           intcon	equ	0xFF2
  3974                           intcon2	equ	0xFF1
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           indf2	equ	0xFDF
  3978                           postinc2	equ	0xFDE
  3979                           postdec2	equ	0xFDD
  3980                           fsr2h	equ	0xFDA
  3981                           fsr2l	equ	0xFD9
  3982                           status	equ	0xFD8
  3983                           
  3984 ;; *************** function _ADC_GetConversion *****************
  3985 ;; Defined at:
  3986 ;;		line 99 in file "mcc_generated_files/adc.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  channel         1    wreg     enum E6980
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  channel         1   23[COMRAM] enum E6980
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  2   19[COMRAM] unsigned int 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;Total ram usage:        5 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    3
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text28
  4015  001C0A                     __ptext28:
  4016                           	opt stack 0
  4017  001C0A                     _ADC_GetConversion:
  4018                           	opt stack 27
  4019                           
  4020                           ;incstack = 0
  4021                           ;ADC_GetConversion@channel stored from wreg
  4022  001C0A  6E18               	movwf	ADC_GetConversion@channel,c
  4023                           
  4024                           ;adc.c: 101: ADCON0bits.CHS = channel;
  4025  001C0C  C018  F016         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4026  001C10  4616               	rlncf	??_ADC_GetConversion,f,c
  4027  001C12  4616               	rlncf	??_ADC_GetConversion,f,c
  4028  001C14  50C2               	movf	4034,w,c	;volatile
  4029  001C16  1816               	xorwf	??_ADC_GetConversion,w,c
  4030  001C18  0B83               	andlw	-125
  4031  001C1A  1816               	xorwf	??_ADC_GetConversion,w,c
  4032  001C1C  6EC2               	movwf	4034,c	;volatile
  4033                           
  4034                           ;adc.c: 104: ADCON0bits.ADON = 1;
  4035  001C1E  80C2               	bsf	4034,0,c	;volatile
  4036                           
  4037                           ;adc.c: 107: ADCON0bits.GO_nDONE = 1;
  4038  001C20  82C2               	bsf	4034,1,c	;volatile
  4039  001C22                     l27:
  4040  001C22  B2C2               	btfsc	4034,1,c	;volatile
  4041  001C24  D7FE               	goto	l27
  4042                           
  4043                           ;adc.c: 111: }
  4044                           ;adc.c: 114: return ((ADRESH << 8) + ADRESL);
  4045  001C26  50C4               	movf	4036,w,c	;volatile
  4046  001C28  6E17               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  4047  001C2A  6A16               	clrf	??_ADC_GetConversion& (0+255),c
  4048  001C2C  50C3               	movf	4035,w,c	;volatile
  4049  001C2E  2416               	addwf	??_ADC_GetConversion,w,c
  4050  001C30  6E14               	movwf	?_ADC_GetConversion,c
  4051  001C32  0E00               	movlw	0
  4052  001C34  2017               	addwfc	??_ADC_GetConversion+1,w,c
  4053  001C36  6E15               	movwf	?_ADC_GetConversion+1,c
  4054  001C38  0012               	return	
  4055  001C3A                     __end_of_ADC_GetConversion:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           tblptrh	equ	0xFF7
  4059                           tblptrl	equ	0xFF6
  4060                           tablat	equ	0xFF5
  4061                           prodh	equ	0xFF4
  4062                           prodl	equ	0xFF3
  4063                           intcon	equ	0xFF2
  4064                           intcon2	equ	0xFF1
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           indf2	equ	0xFDF
  4068                           postinc2	equ	0xFDE
  4069                           postdec2	equ	0xFDD
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function _INTERRUPT_InterruptManager *****************
  4075 ;; Defined at:
  4076 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;Total ram usage:       14 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    2
  4097 ;; This function calls:
  4098 ;;		_EUSART1_Receive_ISR
  4099 ;;		_EUSART1_Transmit_ISR
  4100 ;;		_EUSART2_Receive_ISR
  4101 ;;		_EUSART2_Transmit_ISR
  4102 ;;		_I2C1_BusCollisionISR
  4103 ;;		_I2C1_ISR
  4104 ;;		_TMR0_ISR
  4105 ;;		_TMR1_ISR
  4106 ;; This function is called by:
  4107 ;;		Interrupt level 2
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	intcode
  4112  000008                     __pintcode:
  4113                           	opt stack 0
  4114  000008                     _INTERRUPT_InterruptManager:
  4115                           	opt stack 22
  4116                           
  4117                           ;incstack = 0
  4118  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4119  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  4120  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4121  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4122  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4123  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4124  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4125  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4126  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4127  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4128  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4129  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4130  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4131  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4132  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4133                           
  4134                           ;interrupt_manager.c: 78: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  4135  000042  B69D               	btfsc	3997,3,c	;volatile
  4136  000044  A69E               	btfss	3998,3,c	;volatile
  4137  000046  D003               	goto	i2l115
  4138                           
  4139                           ;interrupt_manager.c: 79: I2C1_ISR();
  4140  000048  ECF6  F009         	call	_I2C1_ISR	;wreg free
  4141                           
  4142                           ;interrupt_manager.c: 80: } else if (PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1) {
  4143  00004C  D029               	goto	i2l131
  4144  00004E                     i2l115:
  4145  00004E  B6A0               	btfsc	4000,3,c	;volatile
  4146  000050  A6A1               	btfss	4001,3,c	;volatile
  4147  000052  D003               	goto	i2l117
  4148                           
  4149                           ;interrupt_manager.c: 81: I2C1_BusCollisionISR();
  4150  000054  EC12  F00F         	call	_I2C1_BusCollisionISR	;wreg free
  4151                           
  4152                           ;interrupt_manager.c: 82: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  4153  000058  D023               	goto	i2l131
  4154  00005A                     i2l117:
  4155  00005A  BA9D               	btfsc	3997,5,c	;volatile
  4156  00005C  AA9E               	btfss	3998,5,c	;volatile
  4157  00005E  D003               	goto	i2l119
  4158                           
  4159                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  4160  000060  EC33  F00E         	call	_EUSART1_Receive_ISR	;wreg free
  4161                           
  4162                           ;interrupt_manager.c: 84: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  4163  000064  D01D               	goto	i2l131
  4164  000066                     i2l119:
  4165  000066  B89D               	btfsc	3997,4,c	;volatile
  4166  000068  A89E               	btfss	3998,4,c	;volatile
  4167  00006A  D003               	goto	i2l121
  4168                           
  4169                           ;interrupt_manager.c: 85: EUSART1_Transmit_ISR();
  4170  00006C  EC90  F00C         	call	_EUSART1_Transmit_ISR	;wreg free
  4171                           
  4172                           ;interrupt_manager.c: 86: } else if (PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1) {
  4173  000070  D017               	goto	i2l131
  4174  000072                     i2l121:
  4175  000072  BAA3               	btfsc	4003,5,c	;volatile
  4176  000074  AAA4               	btfss	4004,5,c	;volatile
  4177  000076  D003               	goto	i2l123
  4178                           
  4179                           ;interrupt_manager.c: 87: EUSART2_Receive_ISR();
  4180  000078  EC1D  F00E         	call	_EUSART2_Receive_ISR	;wreg free
  4181                           
  4182                           ;interrupt_manager.c: 88: } else if (PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1) {
  4183  00007C  D011               	goto	i2l131
  4184  00007E                     i2l123:
  4185  00007E  B8A3               	btfsc	4003,4,c	;volatile
  4186  000080  A8A4               	btfss	4004,4,c	;volatile
  4187  000082  D003               	goto	i2l125
  4188                           
  4189                           ;interrupt_manager.c: 89: EUSART2_Transmit_ISR();
  4190  000084  ECD4  F00D         	call	_EUSART2_Transmit_ISR	;wreg free
  4191                           
  4192                           ;interrupt_manager.c: 90: } else if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  4193  000088  D00B               	goto	i2l131
  4194  00008A                     i2l125:
  4195  00008A  BAF2               	btfsc	intcon,5,c	;volatile
  4196  00008C  A4F2               	btfss	intcon,2,c	;volatile
  4197  00008E  D003               	goto	i2l127
  4198                           
  4199                           ;interrupt_manager.c: 91: TMR0_ISR();
  4200  000090  EC05  F00F         	call	_TMR0_ISR	;wreg free
  4201                           
  4202                           ;interrupt_manager.c: 92: } else if (PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  4203  000094  D005               	goto	i2l131
  4204  000096                     i2l127:
  4205  000096  B09D               	btfsc	3997,0,c	;volatile
  4206  000098  A09E               	btfss	3998,0,c	;volatile
  4207  00009A  D002               	goto	i2l131
  4208                           
  4209                           ;interrupt_manager.c: 93: TMR1_ISR();
  4210  00009C  EC86  F00E         	call	_TMR1_ISR	;wreg free
  4211  0000A0                     i2l131:
  4212  0000A0  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4213  0000A4  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4214  0000A8  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4215  0000AC  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4216  0000B0  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4217  0000B4  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4218  0000B8  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4219  0000BC  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4220  0000C0  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4221  0000C4  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4222  0000C8  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4223  0000CC  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4224  0000D0  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4225  0000D4  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4226  0000D8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4227  0000DA  0011               	retfie		f
  4228  0000DC                     __end_of_INTERRUPT_InterruptManager:
  4229                           	opt stack 0
  4230                           pclatu	equ	0xFFB
  4231                           pclath	equ	0xFFA
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           intcon	equ	0xFF2
  4239                           intcon2	equ	0xFF1
  4240                           postinc0	equ	0xFEE
  4241                           fsr0h	equ	0xFEA
  4242                           fsr0l	equ	0xFE9
  4243                           wreg	equ	0xFE8
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           postinc2	equ	0xFDE
  4248                           postdec2	equ	0xFDD
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _TMR1_ISR *****************
  4254 ;; Defined at:
  4255 ;;		line 147 in file "mcc_generated_files/tmr1.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    1
  4276 ;; This function calls:
  4277 ;;		_TMR1_CallBack
  4278 ;; This function is called by:
  4279 ;;		_INTERRUPT_InterruptManager
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text30
  4284  001D0C                     __ptext30:
  4285                           	opt stack 0
  4286  001D0C                     _TMR1_ISR:
  4287                           	opt stack 22
  4288                           
  4289                           ;tmr1.c: 148: static volatile unsigned int CountCallBack = 0;
  4290                           ;tmr1.c: 151: PIR1bits.TMR1IF = 0;
  4291                           
  4292                           ;incstack = 0
  4293  001D0C  909E               	bcf	3998,0,c	;volatile
  4294                           
  4295                           ;tmr1.c: 154: TMR1H = (timer1ReloadVal >> 8);
  4296  001D0E  504A               	movf	_timer1ReloadVal+1,w,c	;volatile
  4297  001D10  6ECF               	movwf	4047,c	;volatile
  4298                           
  4299                           ;tmr1.c: 155: TMR1L = (uint8_t) timer1ReloadVal;
  4300  001D12  C049  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4301                           
  4302                           ;tmr1.c: 158: if (++CountCallBack >= 1) {
  4303  001D16  4A2D               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  4304  001D18  2A2E               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  4305  001D1A  502D               	movf	TMR1_ISR@CountCallBack,w,c	;volatile
  4306  001D1C  102E               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4307  001D1E  B4D8               	btfsc	status,2,c
  4308  001D20  0012               	return	
  4309                           
  4310                           ;tmr1.c: 160: TMR1_CallBack();
  4311  001D22  EC0B  F00F         	call	_TMR1_CallBack	;wreg free
  4312                           
  4313                           ;tmr1.c: 163: CountCallBack = 0;
  4314  001D26  0E00               	movlw	0
  4315  001D28  6E2E               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  4316  001D2A  0E00               	movlw	0
  4317  001D2C  6E2D               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  4318  001D2E  0012               	return	
  4319  001D30                     __end_of_TMR1_ISR:
  4320                           	opt stack 0
  4321                           pclatu	equ	0xFFB
  4322                           pclath	equ	0xFFA
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodh	equ	0xFF4
  4328                           prodl	equ	0xFF3
  4329                           intcon	equ	0xFF2
  4330                           intcon2	equ	0xFF1
  4331                           postinc0	equ	0xFEE
  4332                           fsr0h	equ	0xFEA
  4333                           fsr0l	equ	0xFE9
  4334                           wreg	equ	0xFE8
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           indf2	equ	0xFDF
  4338                           postinc2	equ	0xFDE
  4339                           postdec2	equ	0xFDD
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           status	equ	0xFD8
  4343                           
  4344 ;; *************** function _TMR1_CallBack *****************
  4345 ;; Defined at:
  4346 ;;		line 168 in file "mcc_generated_files/tmr1.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_TMR1_ISR
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text31
  4374  001E16                     __ptext31:
  4375                           	opt stack 0
  4376  001E16                     _TMR1_CallBack:
  4377                           	opt stack 22
  4378                           
  4379                           ;tmr1.c: 170: tmrFlag = 1;
  4380                           
  4381                           ;incstack = 0
  4382  001E16  0E01               	movlw	1
  4383  001E18  6E45               	movwf	_tmrFlag,c
  4384  001E1A  0012               	return		;funcret
  4385  001E1C                     __end_of_TMR1_CallBack:
  4386                           	opt stack 0
  4387                           pclatu	equ	0xFFB
  4388                           pclath	equ	0xFFA
  4389                           tblptru	equ	0xFF8
  4390                           tblptrh	equ	0xFF7
  4391                           tblptrl	equ	0xFF6
  4392                           tablat	equ	0xFF5
  4393                           prodh	equ	0xFF4
  4394                           prodl	equ	0xFF3
  4395                           intcon	equ	0xFF2
  4396                           intcon2	equ	0xFF1
  4397                           postinc0	equ	0xFEE
  4398                           fsr0h	equ	0xFEA
  4399                           fsr0l	equ	0xFE9
  4400                           wreg	equ	0xFE8
  4401                           fsr1h	equ	0xFE2
  4402                           fsr1l	equ	0xFE1
  4403                           indf2	equ	0xFDF
  4404                           postinc2	equ	0xFDE
  4405                           postdec2	equ	0xFDD
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _TMR0_ISR *****************
  4411 ;; Defined at:
  4412 ;;		line 143 in file "mcc_generated_files/tmr0.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    1
  4433 ;; This function calls:
  4434 ;;		_TMR0_CallBack
  4435 ;; This function is called by:
  4436 ;;		_INTERRUPT_InterruptManager
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text32
  4441  001E0A                     __ptext32:
  4442                           	opt stack 0
  4443  001E0A                     _TMR0_ISR:
  4444                           	opt stack 22
  4445                           
  4446                           ;tmr0.c: 146: INTCONbits.TMR0IF = 0;
  4447                           
  4448                           ;incstack = 0
  4449  001E0A  94F2               	bcf	intcon,2,c	;volatile
  4450                           
  4451                           ;tmr0.c: 149: TMR0L = timer0ReloadVal8bit;
  4452  001E0C  C04B  FFD6         	movff	_timer0ReloadVal8bit,4054	;volatile
  4453                           
  4454                           ;tmr0.c: 153: TMR0_CallBack();
  4455  001E10  ECA9  F00E         	call	_TMR0_CallBack	;wreg free
  4456  001E14  0012               	return		;funcret
  4457  001E16                     __end_of_TMR0_ISR:
  4458                           	opt stack 0
  4459                           pclatu	equ	0xFFB
  4460                           pclath	equ	0xFFA
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           intcon2	equ	0xFF1
  4469                           postinc0	equ	0xFEE
  4470                           fsr0h	equ	0xFEA
  4471                           fsr0l	equ	0xFE9
  4472                           wreg	equ	0xFE8
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           indf2	equ	0xFDF
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8
  4481                           
  4482 ;; *************** function _TMR0_CallBack *****************
  4483 ;; Defined at:
  4484 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_TMR0_ISR
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text33
  4512  001D52                     __ptext33:
  4513                           	opt stack 0
  4514  001D52                     _TMR0_CallBack:
  4515                           	opt stack 22
  4516                           
  4517                           ;tmr0.c: 161: if (waitCTS == 1) {
  4518                           
  4519                           ;incstack = 0
  4520  001D52  0444               	decf	_waitCTS,w,c
  4521  001D54  A4D8               	btfss	status,2,c
  4522  001D56  0012               	return	
  4523                           
  4524                           ;tmr0.c: 162: if (PORTAbits.RA7 == 0) {
  4525  001D58  BE80               	btfsc	3968,7,c	;volatile
  4526  001D5A  0012               	return	
  4527                           
  4528                           ;tmr0.c: 163: subdata.IO_LED = waitCTS = 0;
  4529  001D5C  0E00               	movlw	0
  4530  001D5E  6E44               	movwf	_waitCTS,c
  4531  001D60  B044               	btfsc	_waitCTS,0,c
  4532  001D62  D002               	bra	i2u142_45
  4533  001D64  9E43               	bcf	_subdata,7,c
  4534  001D66  D001               	bra	i2u142_46
  4535  001D68                     i2u142_45:
  4536  001D68  8E43               	bsf	_subdata,7,c
  4537  001D6A                     i2u142_46:
  4538                           
  4539                           ;tmr0.c: 164: PIE1bits.TXIE = 1;
  4540  001D6A  889D               	bsf	3997,4,c	;volatile
  4541  001D6C  0012               	return	
  4542  001D6E                     __end_of_TMR0_CallBack:
  4543                           	opt stack 0
  4544                           pclatu	equ	0xFFB
  4545                           pclath	equ	0xFFA
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           intcon2	equ	0xFF1
  4554                           postinc0	equ	0xFEE
  4555                           fsr0h	equ	0xFEA
  4556                           fsr0l	equ	0xFE9
  4557                           wreg	equ	0xFE8
  4558                           fsr1h	equ	0xFE2
  4559                           fsr1l	equ	0xFE1
  4560                           indf2	equ	0xFDF
  4561                           postinc2	equ	0xFDE
  4562                           postdec2	equ	0xFDD
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function _I2C1_ISR *****************
  4568 ;; Defined at:
  4569 ;;		line 226 in file "mcc_generated_files/i2c1.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;Total ram usage:        2 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    1
  4590 ;; This function calls:
  4591 ;;		_I2C1_FunctionComplete
  4592 ;;		_I2C1_Stop
  4593 ;; This function is called by:
  4594 ;;		_INTERRUPT_InterruptManager
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text34
  4599  0013EC                     __ptext34:
  4600                           	opt stack 0
  4601  0013EC                     _I2C1_ISR:
  4602                           	opt stack 22
  4603                           
  4604                           ;i2c1.c: 228: static uint8_t *pi2c_buf_ptr;
  4605                           ;i2c1.c: 229: static uint16_t i2c_address = 0;
  4606                           ;i2c1.c: 230: static uint8_t i2c_bytes_left = 0;
  4607                           ;i2c1.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  4608                           ;i2c1.c: 233: PIR1bits.SSP1IF = 0;
  4609                           
  4610                           ;incstack = 0
  4611  0013EC  969E               	bcf	3998,3,c	;volatile
  4612                           
  4613                           ;i2c1.c: 237: if (SSP1CON1bits.WCOL) {
  4614  0013EE  AEC6               	btfss	4038,7,c	;volatile
  4615  0013F0  D10C               	goto	i2l2404
  4616                           
  4617                           ;i2c1.c: 239: SSP1CON1bits.WCOL = 0;
  4618  0013F2  9EC6               	bcf	4038,7,c	;volatile
  4619                           
  4620                           ;i2c1.c: 240: i2c1_state = S_MASTER_IDLE;
  4621  0013F4  0E00               	movlw	0
  4622  0013F6  6E42               	movwf	_i2c1_state,c
  4623                           
  4624                           ;i2c1.c: 241: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  4625  0013F8  EE20 F003          	lfsr	2,3
  4626  0013FC  5029               	movf	_p_i2c1_current,w,c
  4627  0013FE  26D9               	addwf	fsr2l,f,c
  4628  001400  502A               	movf	_p_i2c1_current+1,w,c
  4629  001402  22DA               	addwfc	fsr2h,f,c
  4630  001404  CFDE F004          	movff	postinc2,??_I2C1_ISR
  4631  001408  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
  4632  00140C  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
  4633  001410  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  4634  001414  0E01               	movlw	1
  4635  001416  6EDF               	movwf	indf2,c
  4636                           
  4637                           ;i2c1.c: 244: p_i2c1_current = (0);
  4638  001418  0E00               	movlw	0
  4639  00141A  6E29               	movwf	_p_i2c1_current,c
  4640  00141C  0E00               	movlw	0
  4641  00141E  6E2A               	movwf	_p_i2c1_current+1,c
  4642                           
  4643                           ;i2c1.c: 246: return;
  4644  001420  0012               	return	
  4645  001422                     i2l332:
  4646                           
  4647                           ;i2c1.c: 253: if (i2c1_object.trStatus.s.empty != 1) {
  4648  001422  0100               	movlb	0	; () banked
  4649  001424  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
  4650  001426  0012               	return	
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;i2c1.c: 255: p_i2c1_current = i2c1_object.pTrHead;
  4654  001428  C0BA  F029         	movff	_i2c1_object+2,_p_i2c1_current
  4655  00142C  C0BB  F02A         	movff	_i2c1_object+3,_p_i2c1_current+1
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;i2c1.c: 256: i2c1_trb_count = i2c1_object.pTrHead->count;
  4659  001430  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
  4660  001434  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
  4661  001438  50DF               	movf	indf2,w,c
  4662  00143A  6E41               	movwf	_i2c1_trb_count,c
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;i2c1.c: 257: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  4666  00143C  0100               	movlb	0	; () banked
  4667  00143E  EE20 F001          	lfsr	2,1
  4668  001442  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
  4669  001444  26D9               	addwf	fsr2l,f,c
  4670  001446  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
  4671  001448  22DA               	addwfc	fsr2h,f,c
  4672  00144A  CFDE F02B          	movff	postinc2,_p_i2c1_trb_current
  4673  00144E  CFDD F02C          	movff	postdec2,_p_i2c1_trb_current+1
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;i2c1.c: 259: i2c1_object.pTrHead++;
  4677  001452  0E05               	movlw	5
  4678  001454  0100               	movlb	0	; () banked
  4679  001456  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
  4680  001458  0E00               	movlw	0
  4681  00145A  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;i2c1.c: 262: if (i2c1_object.pTrHead == (i2c1_tr_queue + 1)) {
  4685  00145C  0ED2               	movlw	low (_i2c1_tr_queue+5)
  4686  00145E  0100               	movlb	0	; () banked
  4687  001460  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
  4688  001462  E10B               	bnz	i2l2296
  4689  001464  0E00               	movlw	high (_i2c1_tr_queue+5)
  4690  001466  0100               	movlb	0	; () banked
  4691  001468  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
  4692  00146A  A4D8               	btfss	status,2,c
  4693  00146C  D006               	goto	i2l2296
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;i2c1.c: 264: i2c1_object.pTrHead = i2c1_tr_queue;
  4697  00146E  0ECD               	movlw	low _i2c1_tr_queue
  4698  001470  0100               	movlb	0	; () banked
  4699  001472  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  4700  001474  0E00               	movlw	high _i2c1_tr_queue
  4701  001476  0100               	movlb	0	; () banked
  4702  001478  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  4703  00147A                     i2l2296:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;i2c1.c: 265: }
  4707                           ;i2c1.c: 269: i2c1_object.trStatus.s.full = 0;
  4708  00147A  0100               	movlb	0	; () banked
  4709  00147C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  4710                           
  4711                           ;i2c1.c: 272: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  4712  00147E  0100               	movlb	0	; () banked
  4713  001480  51B8               	movf	_i2c1_object& (0+255),w,b
  4714  001482  0100               	movlb	0	; () banked
  4715  001484  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
  4716  001486  E108               	bnz	i2l335
  4717  001488  0100               	movlb	0	; () banked
  4718  00148A  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
  4719  00148C  0100               	movlb	0	; () banked
  4720  00148E  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
  4721  001490  A4D8               	btfss	status,2,c
  4722  001492  D002               	goto	i2l335
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;i2c1.c: 274: i2c1_object.trStatus.s.empty = 1;
  4726  001494  0100               	movlb	0	; () banked
  4727  001496  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  4728  001498                     i2l335:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;i2c1.c: 275: }
  4732                           ;i2c1.c: 278: SSP1CON2bits.SEN = 1;
  4733  001498  80C5               	bsf	4037,0,c	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;i2c1.c: 281: i2c1_state = S_MASTER_SEND_ADDR;
  4737  00149A  0E02               	movlw	2
  4738  00149C  6E42               	movwf	_i2c1_state,c
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;i2c1.c: 282: }
  4742                           ;i2c1.c: 284: break;
  4743  00149E  0012               	return	
  4744  0014A0                     i2l337:
  4745                           
  4746                           ;i2c1.c: 291: SSP1CON2bits.RSEN = 1;
  4747  0014A0  82C5               	bsf	4037,1,c	;volatile
  4748                           
  4749                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  4750  0014A2  0E02               	movlw	2
  4751  0014A4  6E42               	movwf	_i2c1_state,c
  4752                           
  4753                           ;i2c1.c: 296: break;
  4754  0014A6  0012               	return	
  4755  0014A8                     i2l338:
  4756                           
  4757                           ;i2c1.c: 300: if (SSP1CON2bits.ACKSTAT) {
  4758  0014A8  ACC5               	btfss	4037,6,c	;volatile
  4759  0014AA  D006               	goto	i2l2308
  4760                           
  4761                           ;i2c1.c: 301: i2c1_object.i2cErrors++;
  4762  0014AC  0100               	movlb	0	; () banked
  4763  0014AE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;i2c1.c: 302: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4767  0014B0  0E04               	movlw	4
  4768  0014B2  EC14  F00D         	call	_I2C1_Stop
  4769                           
  4770                           ;i2c1.c: 303: } else {
  4771  0014B6  0012               	return	
  4772  0014B8                     i2l2308:
  4773                           
  4774                           ;i2c1.c: 305: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  4775  0014B8  90D8               	bcf	status,0,c
  4776  0014BA  3047               	rrcf	I2C1_ISR@i2c_address+1,w,c
  4777  0014BC  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  4778  0014BE  3046               	rrcf	I2C1_ISR@i2c_address,w,c
  4779  0014C0  6E04               	movwf	??_I2C1_ISR& (0+255),c
  4780  0014C2  5004               	movf	??_I2C1_ISR,w,c
  4781  0014C4  6EC9               	movwf	4041,c	;volatile
  4782                           
  4783                           ;i2c1.c: 308: if (i2c_address & 0x01) {
  4784  0014C6  A046               	btfss	I2C1_ISR@i2c_address,0,c
  4785  0014C8  D003               	goto	i2l2314
  4786                           
  4787                           ;i2c1.c: 311: i2c1_state = S_MASTER_10BIT_RESTART;
  4788  0014CA  0E0B               	movlw	11
  4789  0014CC  6E42               	movwf	_i2c1_state,c
  4790                           
  4791                           ;i2c1.c: 312: } else {
  4792  0014CE  0012               	return	
  4793  0014D0                     i2l2314:
  4794                           
  4795                           ;i2c1.c: 314: i2c1_state = S_MASTER_SEND_DATA;
  4796  0014D0  0E03               	movlw	3
  4797  0014D2  6E42               	movwf	_i2c1_state,c
  4798                           
  4799                           ;i2c1.c: 315: }
  4800                           ;i2c1.c: 316: }
  4801                           ;i2c1.c: 318: break;
  4802  0014D4  0012               	return	
  4803  0014D6                     i2l343:
  4804                           
  4805                           ;i2c1.c: 322: if (SSP1CON2bits.ACKSTAT) {
  4806  0014D6  ACC5               	btfss	4037,6,c	;volatile
  4807  0014D8  D006               	goto	i2l344
  4808                           
  4809                           ;i2c1.c: 323: i2c1_object.i2cErrors++;
  4810  0014DA  0100               	movlb	0	; () banked
  4811  0014DC  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;i2c1.c: 324: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4815  0014DE  0E04               	movlw	4
  4816  0014E0  EC14  F00D         	call	_I2C1_Stop
  4817                           
  4818                           ;i2c1.c: 325: } else {
  4819  0014E4  0012               	return	
  4820  0014E6                     i2l344:
  4821                           
  4822                           ;i2c1.c: 328: SSP1CON2bits.RSEN = 1;
  4823  0014E6  82C5               	bsf	4037,1,c	;volatile
  4824                           
  4825                           ;i2c1.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4826  0014E8  C046  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  4827  0014EC  C047  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  4828  0014F0  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  4829  0014F4  6A05               	clrf	??_I2C1_ISR+1,c
  4830  0014F6  0E06               	movlw	6
  4831  0014F8  1604               	andwf	??_I2C1_ISR,f,c
  4832  0014FA  0E00               	movlw	0
  4833  0014FC  1605               	andwf	??_I2C1_ISR+1,f,c
  4834  0014FE  0EF0               	movlw	240
  4835  001500  1004               	iorwf	??_I2C1_ISR,w,c
  4836  001502  6E46               	movwf	I2C1_ISR@i2c_address,c
  4837  001504  5005               	movf	??_I2C1_ISR+1,w,c
  4838  001506  6E47               	movwf	I2C1_ISR@i2c_address+1,c
  4839                           
  4840                           ;i2c1.c: 335: i2c_address |= 0x0001;
  4841  001508  8046               	bsf	I2C1_ISR@i2c_address,0,c
  4842                           
  4843                           ;i2c1.c: 338: i2c_10bit_address_restart = 1;
  4844  00150A  0E01               	movlw	1
  4845  00150C  6E3F               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  4846                           
  4847                           ;i2c1.c: 341: i2c1_state = S_MASTER_SEND_ADDR;
  4848  00150E  0E02               	movlw	2
  4849  001510  6E42               	movwf	_i2c1_state,c
  4850                           
  4851                           ;i2c1.c: 342: }
  4852                           ;i2c1.c: 344: break;
  4853  001512  0012               	return	
  4854  001514                     i2l2328:
  4855                           
  4856                           ;i2c1.c: 359: if (i2c_10bit_address_restart != 1) {
  4857  001514  043F               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  4858  001516  B4D8               	btfsc	status,2,c
  4859  001518  D01A               	goto	i2l348
  4860                           
  4861                           ;i2c1.c: 361: i2c_address = p_i2c1_trb_current->address;
  4862  00151A  C02B  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  4863  00151E  C02C  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  4864  001522  CFDE F046          	movff	postinc2,I2C1_ISR@i2c_address
  4865  001526  CFDD F047          	movff	postdec2,I2C1_ISR@i2c_address+1
  4866                           
  4867                           ;i2c1.c: 362: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  4868  00152A  EE20 F003          	lfsr	2,3
  4869  00152E  502B               	movf	_p_i2c1_trb_current,w,c
  4870  001530  26D9               	addwf	fsr2l,f,c
  4871  001532  502C               	movf	_p_i2c1_trb_current+1,w,c
  4872  001534  22DA               	addwfc	fsr2h,f,c
  4873  001536  CFDE F027          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  4874  00153A  CFDD F028          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  4875                           
  4876                           ;i2c1.c: 363: i2c_bytes_left = p_i2c1_trb_current->length;
  4877  00153E  EE20 F002          	lfsr	2,2
  4878  001542  502B               	movf	_p_i2c1_trb_current,w,c
  4879  001544  26D9               	addwf	fsr2l,f,c
  4880  001546  502C               	movf	_p_i2c1_trb_current+1,w,c
  4881  001548  22DA               	addwfc	fsr2h,f,c
  4882  00154A  50DF               	movf	indf2,w,c
  4883  00154C  6E40               	movwf	I2C1_ISR@i2c_bytes_left,c
  4884  00154E                     i2l348:
  4885                           
  4886                           ;i2c1.c: 383: SSP1BUF = i2c_address;
  4887  00154E  C046  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  4888                           
  4889                           ;i2c1.c: 384: if (i2c_address & 0x01) {
  4890  001552  A046               	btfss	I2C1_ISR@i2c_address,0,c
  4891  001554  D003               	goto	i2l2348
  4892                           
  4893                           ;i2c1.c: 386: i2c1_state = S_MASTER_ACK_ADDR;
  4894  001556  0E05               	movlw	5
  4895  001558  6E42               	movwf	_i2c1_state,c
  4896                           
  4897                           ;i2c1.c: 387: } else {
  4898  00155A  0012               	return	
  4899  00155C                     i2l2348:
  4900                           
  4901                           ;i2c1.c: 389: i2c1_state = S_MASTER_SEND_DATA;
  4902  00155C  0E03               	movlw	3
  4903  00155E  6E42               	movwf	_i2c1_state,c
  4904                           
  4905                           ;i2c1.c: 390: }
  4906                           ;i2c1.c: 391: }
  4907                           ;i2c1.c: 392: break;
  4908  001560  0012               	return	
  4909  001562                     i2l354:
  4910                           
  4911                           ;i2c1.c: 397: if (SSP1CON2bits.ACKSTAT) {
  4912  001562  ACC5               	btfss	4037,6,c	;volatile
  4913  001564  D007               	goto	i2l2356
  4914                           
  4915                           ;i2c1.c: 399: i2c1_object.i2cErrors++;
  4916  001566  0100               	movlb	0	; () banked
  4917  001568  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;i2c1.c: 402: SSP1CON2bits.ACKSTAT = 0;
  4921  00156A  9CC5               	bcf	4037,6,c	;volatile
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;i2c1.c: 405: I2C1_Stop(I2C1_DATA_NO_ACK);
  4925  00156C  0E05               	movlw	5
  4926  00156E  EC14  F00D         	call	_I2C1_Stop
  4927                           
  4928                           ;i2c1.c: 407: } else {
  4929  001572  0012               	return	
  4930  001574                     i2l2356:
  4931                           
  4932                           ;i2c1.c: 409: if (i2c_bytes_left-- == 0U) {
  4933  001574  0640               	decf	I2C1_ISR@i2c_bytes_left,f,c
  4934  001576  2840               	incf	I2C1_ISR@i2c_bytes_left,w,c
  4935  001578  A4D8               	btfss	status,2,c
  4936  00157A  D00E               	goto	i2l2366
  4937                           
  4938                           ;i2c1.c: 413: p_i2c1_trb_current++;
  4939  00157C  0E05               	movlw	5
  4940  00157E  262B               	addwf	_p_i2c1_trb_current,f,c
  4941  001580  0E00               	movlw	0
  4942  001582  222C               	addwfc	_p_i2c1_trb_current+1,f,c
  4943                           
  4944                           ;i2c1.c: 416: if (--i2c1_trb_count == 0) {
  4945  001584  2E41               	decfsz	_i2c1_trb_count,f,c
  4946  001586  D004               	goto	i2l358
  4947                           
  4948                           ;i2c1.c: 417: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4949  001588  0E00               	movlw	0
  4950  00158A  EC14  F00D         	call	_I2C1_Stop
  4951                           
  4952                           ;i2c1.c: 418: } else {
  4953  00158E  0012               	return	
  4954  001590                     i2l358:
  4955                           
  4956                           ;i2c1.c: 425: SSP1CON2bits.RSEN = 1;
  4957  001590  82C5               	bsf	4037,1,c	;volatile
  4958                           
  4959                           ;i2c1.c: 428: i2c1_state = S_MASTER_SEND_ADDR;
  4960  001592  0E02               	movlw	2
  4961  001594  6E42               	movwf	_i2c1_state,c
  4962                           
  4963                           ;i2c1.c: 430: }
  4964                           ;i2c1.c: 431: } else {
  4965  001596  0012               	return	
  4966  001598                     i2l2366:
  4967                           
  4968                           ;i2c1.c: 433: SSP1BUF = *pi2c_buf_ptr++;
  4969  001598  C027  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4970  00159C  C028  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4971  0015A0  50DF               	movf	indf2,w,c
  4972  0015A2  6EC9               	movwf	4041,c	;volatile
  4973  0015A4  4A27               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4974  0015A6  2A28               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4975                           
  4976                           ;i2c1.c: 434: }
  4977                           ;i2c1.c: 435: }
  4978                           ;i2c1.c: 436: break;
  4979  0015A8  0012               	return	
  4980  0015AA                     i2l361:
  4981                           
  4982                           ;i2c1.c: 441: if (SSP1CON2bits.ACKSTAT) {
  4983  0015AA  ACC5               	btfss	4037,6,c	;volatile
  4984  0015AC  D007               	goto	i2l362
  4985                           
  4986                           ;i2c1.c: 444: i2c1_object.i2cErrors++;
  4987  0015AE  0100               	movlb	0	; () banked
  4988  0015B0  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;i2c1.c: 447: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4992  0015B2  0E04               	movlw	4
  4993  0015B4  EC14  F00D         	call	_I2C1_Stop
  4994                           
  4995                           ;i2c1.c: 450: SSP1CON2bits.ACKSTAT = 0;
  4996  0015B8  9CC5               	bcf	4037,6,c	;volatile
  4997                           
  4998                           ;i2c1.c: 451: } else {
  4999  0015BA  0012               	return	
  5000  0015BC                     i2l362:
  5001                           
  5002                           ;i2c1.c: 452: SSP1CON2bits.RCEN = 1;
  5003  0015BC  86C5               	bsf	4037,3,c	;volatile
  5004                           
  5005                           ;i2c1.c: 453: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5006  0015BE  0E08               	movlw	8
  5007  0015C0  6E42               	movwf	_i2c1_state,c
  5008                           
  5009                           ;i2c1.c: 454: }
  5010                           ;i2c1.c: 455: break;
  5011  0015C2  0012               	return	
  5012  0015C4                     i2l2378:
  5013                           
  5014                           ;i2c1.c: 462: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5015  0015C4  0E08               	movlw	8
  5016  0015C6  6E42               	movwf	_i2c1_state,c
  5017                           
  5018                           ;i2c1.c: 465: SSP1CON2bits.RCEN = 1;
  5019  0015C8  86C5               	bsf	4037,3,c	;volatile
  5020                           
  5021                           ;i2c1.c: 467: break;
  5022  0015CA  0012               	return	
  5023  0015CC                     i2l2382:
  5024                           
  5025                           ;i2c1.c: 472: *pi2c_buf_ptr++ = SSP1BUF;
  5026  0015CC  C027  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  5027  0015D0  C028  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  5028  0015D4  CFC9 FFDF          	movff	4041,indf2	;volatile
  5029  0015D8  4A27               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  5030  0015DA  2A28               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  5031                           
  5032                           ;i2c1.c: 475: if (--i2c_bytes_left) {
  5033  0015DC  0E01               	movlw	1
  5034  0015DE  5E40               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  5035  0015E0  B4D8               	btfsc	status,2,c
  5036  0015E2  D004               	goto	i2l366
  5037                           
  5038                           ;i2c1.c: 481: SSP1CON2bits.ACKDT = 0;
  5039  0015E4  9AC5               	bcf	4037,5,c	;volatile
  5040                           
  5041                           ;i2c1.c: 484: i2c1_state = S_MASTER_RCV_DATA;
  5042  0015E6  0E06               	movlw	6
  5043  0015E8  6E42               	movwf	_i2c1_state,c
  5044                           
  5045                           ;i2c1.c: 485: } else {
  5046  0015EA  D003               	goto	i2l2394
  5047  0015EC                     i2l366:
  5048                           
  5049                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  5050  0015EC  8AC5               	bsf	4037,5,c	;volatile
  5051                           
  5052                           ;i2c1.c: 491: I2C1_FunctionComplete();
  5053  0015EE  ECDD  F00E         	call	_I2C1_FunctionComplete	;wreg free
  5054  0015F2                     i2l2394:
  5055                           
  5056                           ;i2c1.c: 492: }
  5057                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  5058  0015F2  88C5               	bsf	4037,4,c	;volatile
  5059                           
  5060                           ;i2c1.c: 496: break;
  5061  0015F4  0012               	return	
  5062  0015F6                     i2l2396:
  5063                           
  5064                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  5065                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5066  0015F6  0E00               	movlw	0
  5067  0015F8  EC14  F00D         	call	_I2C1_Stop
  5068                           
  5069                           ;i2c1.c: 503: break;
  5070  0015FC  0012               	return	
  5071  0015FE                     i2l2398:
  5072                           
  5073                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  5074  0015FE  0100               	movlb	0	; () banked
  5075  001600  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  5079  001602  0E06               	movlw	6
  5080  001604  EC14  F00D         	call	_I2C1_Stop
  5081                           
  5082                           ;i2c1.c: 513: }
  5083                           
  5084                           ;i2c1.c: 511: break;
  5085  001608  0012               	return	
  5086  00160A                     i2l2404:
  5087  00160A  5042               	movf	_i2c1_state,w,c
  5088                           
  5089                           ; Switch size 1, requested type "space"
  5090                           ; Number of cases is 11, Range of values is 0 to 11
  5091                           ; switch strategies available:
  5092                           ; Name         Instructions Cycles
  5093                           ; simple_byte           34    18 (average)
  5094                           ;	Chosen strategy is simple_byte
  5095  00160C  0A00               	xorlw	0	; case 0
  5096  00160E  B4D8               	btfsc	status,2,c
  5097  001610  D708               	goto	i2l332
  5098  001612  0A01               	xorlw	1	; case 1
  5099  001614  B4D8               	btfsc	status,2,c
  5100  001616  D744               	goto	i2l337
  5101  001618  0A03               	xorlw	3	; case 2
  5102  00161A  B4D8               	btfsc	status,2,c
  5103  00161C  D77B               	goto	i2l2328
  5104  00161E  0A01               	xorlw	1	; case 3
  5105  001620  B4D8               	btfsc	status,2,c
  5106  001622  D79F               	goto	i2l354
  5107  001624  0A07               	xorlw	7	; case 4
  5108  001626  B4D8               	btfsc	status,2,c
  5109  001628  D7E6               	goto	i2l2396
  5110  00162A  0A01               	xorlw	1	; case 5
  5111  00162C  B4D8               	btfsc	status,2,c
  5112  00162E  D7BD               	goto	i2l361
  5113  001630  0A03               	xorlw	3	; case 6
  5114  001632  B4D8               	btfsc	status,2,c
  5115  001634  D7C7               	goto	i2l2378
  5116  001636  0A01               	xorlw	1	; case 7
  5117  001638  B4D8               	btfsc	status,2,c
  5118  00163A  D7DD               	goto	i2l2396
  5119  00163C  0A0F               	xorlw	15	; case 8
  5120  00163E  B4D8               	btfsc	status,2,c
  5121  001640  D7C5               	goto	i2l2382
  5122  001642  0A02               	xorlw	2	; case 10
  5123  001644  B4D8               	btfsc	status,2,c
  5124  001646  D730               	goto	i2l338
  5125  001648  0A01               	xorlw	1	; case 11
  5126  00164A  B4D8               	btfsc	status,2,c
  5127  00164C  D744               	goto	i2l343
  5128  00164E  D7D7               	goto	i2l2398
  5129  001650                     __end_of_I2C1_ISR:
  5130                           	opt stack 0
  5131                           pclatu	equ	0xFFB
  5132                           pclath	equ	0xFFA
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           intcon	equ	0xFF2
  5140                           intcon2	equ	0xFF1
  5141                           postinc0	equ	0xFEE
  5142                           fsr0h	equ	0xFEA
  5143                           fsr0l	equ	0xFE9
  5144                           wreg	equ	0xFE8
  5145                           fsr1h	equ	0xFE2
  5146                           fsr1l	equ	0xFE1
  5147                           indf2	equ	0xFDF
  5148                           postinc2	equ	0xFDE
  5149                           postdec2	equ	0xFDD
  5150                           fsr2h	equ	0xFDA
  5151                           fsr2l	equ	0xFD9
  5152                           status	equ	0xFD8
  5153                           
  5154 ;; *************** function _I2C1_Stop *****************
  5155 ;; Defined at:
  5156 ;;		line 530 in file "mcc_generated_files/i2c1.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  completion_c    1    wreg     enum E6981
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  completion_c    1    2[COMRAM] enum E6981
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;Total ram usage:        3 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_I2C1_ISR
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text35
  5184  001A28                     __ptext35:
  5185                           	opt stack 0
  5186  001A28                     _I2C1_Stop:
  5187                           	opt stack 22
  5188                           
  5189                           ;incstack = 0
  5190                           ;I2C1_Stop@completion_code stored from wreg
  5191  001A28  6E03               	movwf	I2C1_Stop@completion_code,c
  5192                           
  5193                           ;i2c1.c: 532: SSP1CON2bits.PEN = 1;
  5194  001A2A  84C5               	bsf	4037,2,c	;volatile
  5195                           
  5196                           ;i2c1.c: 535: if (p_i2c1_current->pTrFlag != (0)) {
  5197  001A2C  EE20 F003          	lfsr	2,3
  5198  001A30  5029               	movf	_p_i2c1_current,w,c
  5199  001A32  26D9               	addwf	fsr2l,f,c
  5200  001A34  502A               	movf	_p_i2c1_current+1,w,c
  5201  001A36  22DA               	addwfc	fsr2h,f,c
  5202  001A38  50DE               	movf	postinc2,w,c
  5203  001A3A  10DE               	iorwf	postinc2,w,c
  5204  001A3C  B4D8               	btfsc	status,2,c
  5205  001A3E  D010               	goto	i2l2220
  5206                           
  5207                           ;i2c1.c: 537: *(p_i2c1_current->pTrFlag) = completion_code;
  5208  001A40  EE20 F003          	lfsr	2,3
  5209  001A44  5029               	movf	_p_i2c1_current,w,c
  5210  001A46  26D9               	addwf	fsr2l,f,c
  5211  001A48  502A               	movf	_p_i2c1_current+1,w,c
  5212  001A4A  22DA               	addwfc	fsr2h,f,c
  5213  001A4C  CFDE F001          	movff	postinc2,??_I2C1_Stop
  5214  001A50  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
  5215  001A54  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
  5216  001A58  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  5217  001A5C  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
  5218  001A60                     i2l2220:
  5219                           
  5220                           ;i2c1.c: 538: }
  5221                           ;i2c1.c: 541: i2c1_state = S_MASTER_IDLE;
  5222  001A60  0E00               	movlw	0
  5223  001A62  6E42               	movwf	_i2c1_state,c
  5224  001A64  0012               	return		;funcret
  5225  001A66                     __end_of_I2C1_Stop:
  5226                           	opt stack 0
  5227                           pclatu	equ	0xFFB
  5228                           pclath	equ	0xFFA
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           intcon2	equ	0xFF1
  5237                           postinc0	equ	0xFEE
  5238                           fsr0h	equ	0xFEA
  5239                           fsr0l	equ	0xFE9
  5240                           wreg	equ	0xFE8
  5241                           fsr1h	equ	0xFE2
  5242                           fsr1l	equ	0xFE1
  5243                           indf2	equ	0xFDF
  5244                           postinc2	equ	0xFDE
  5245                           postdec2	equ	0xFDD
  5246                           fsr2h	equ	0xFDA
  5247                           fsr2l	equ	0xFD9
  5248                           status	equ	0xFD8
  5249                           
  5250 ;; *************** function _I2C1_FunctionComplete *****************
  5251 ;; Defined at:
  5252 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_I2C1_ISR
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text36
  5280  001DBA                     __ptext36:
  5281                           	opt stack 0
  5282  001DBA                     _I2C1_FunctionComplete:
  5283                           	opt stack 22
  5284                           
  5285                           ;i2c1.c: 519: p_i2c1_trb_current++;
  5286                           
  5287                           ;incstack = 0
  5288  001DBA  0E05               	movlw	5
  5289  001DBC  262B               	addwf	_p_i2c1_trb_current,f,c
  5290  001DBE  0E00               	movlw	0
  5291  001DC0  222C               	addwfc	_p_i2c1_trb_current+1,f,c
  5292                           
  5293                           ;i2c1.c: 522: if (--i2c1_trb_count == 0) {
  5294  001DC2  2E41               	decfsz	_i2c1_trb_count,f,c
  5295  001DC4  D003               	goto	i2l2228
  5296                           
  5297                           ;i2c1.c: 523: i2c1_state = S_MASTER_SEND_STOP;
  5298  001DC6  0E04               	movlw	4
  5299  001DC8  6E42               	movwf	_i2c1_state,c
  5300                           
  5301                           ;i2c1.c: 524: } else {
  5302  001DCA  0012               	return	
  5303  001DCC                     i2l2228:
  5304                           
  5305                           ;i2c1.c: 525: i2c1_state = S_MASTER_RESTART;
  5306  001DCC  0E01               	movlw	1
  5307  001DCE  6E42               	movwf	_i2c1_state,c
  5308  001DD0  0012               	return	
  5309  001DD2                     __end_of_I2C1_FunctionComplete:
  5310                           	opt stack 0
  5311                           pclatu	equ	0xFFB
  5312                           pclath	equ	0xFFA
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           prodh	equ	0xFF4
  5318                           prodl	equ	0xFF3
  5319                           intcon	equ	0xFF2
  5320                           intcon2	equ	0xFF1
  5321                           postinc0	equ	0xFEE
  5322                           fsr0h	equ	0xFEA
  5323                           fsr0l	equ	0xFE9
  5324                           wreg	equ	0xFE8
  5325                           fsr1h	equ	0xFE2
  5326                           fsr1l	equ	0xFE1
  5327                           indf2	equ	0xFDF
  5328                           postinc2	equ	0xFDE
  5329                           postdec2	equ	0xFDD
  5330                           fsr2h	equ	0xFDA
  5331                           fsr2l	equ	0xFD9
  5332                           status	equ	0xFD8
  5333                           
  5334 ;; *************** function _I2C1_BusCollisionISR *****************
  5335 ;; Defined at:
  5336 ;;		line 656 in file "mcc_generated_files/i2c1.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		None
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_INTERRUPT_InterruptManager
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text37
  5364  001E24                     __ptext37:
  5365                           	opt stack 0
  5366  001E24                     _I2C1_BusCollisionISR:
  5367                           	opt stack 23
  5368                           
  5369                           ;incstack = 0
  5370  001E24  0012               	return		;funcret
  5371  001E26                     __end_of_I2C1_BusCollisionISR:
  5372                           	opt stack 0
  5373                           pclatu	equ	0xFFB
  5374                           pclath	equ	0xFFA
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           prodh	equ	0xFF4
  5380                           prodl	equ	0xFF3
  5381                           intcon	equ	0xFF2
  5382                           intcon2	equ	0xFF1
  5383                           postinc0	equ	0xFEE
  5384                           fsr0h	equ	0xFEA
  5385                           fsr0l	equ	0xFE9
  5386                           wreg	equ	0xFE8
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8
  5395                           
  5396 ;; *************** function _EUSART2_Transmit_ISR *****************
  5397 ;; Defined at:
  5398 ;;		line 147 in file "mcc_generated_files/eusart2.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;Total ram usage:        0 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_INTERRUPT_InterruptManager
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text38
  5426  001BA8                     __ptext38:
  5427                           	opt stack 0
  5428  001BA8                     _EUSART2_Transmit_ISR:
  5429                           	opt stack 23
  5430                           
  5431                           ;eusart2.c: 150: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  5432                           
  5433                           ;incstack = 0
  5434  001BA8  0E08               	movlw	8
  5435  001BAA  0100               	movlb	0	; () banked
  5436  001BAC  61EA               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  5437  001BAE  D013               	goto	i2l475
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;eusart2.c: 151: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
  5441  001BB0  503D               	movf	_eusart2TxTail,w,c
  5442  001BB2  0D01               	mullw	1
  5443  001BB4  0EB0               	movlw	low _eusart2TxBuffer
  5444  001BB6  24F3               	addwf	prodl,w,c
  5445  001BB8  6ED9               	movwf	fsr2l,c
  5446  001BBA  0E00               	movlw	high _eusart2TxBuffer
  5447  001BBC  20F4               	addwfc	prodh,w,c
  5448  001BBE  6EDA               	movwf	fsr2h,c
  5449  001BC0  50DF               	movf	indf2,w,c
  5450  001BC2  6E73               	movwf	3955,c	;volatile
  5451                           
  5452                           ; BSR set to: 0
  5453  001BC4  2A3D               	incf	_eusart2TxTail,f,c
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;eusart2.c: 152: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  5457  001BC6  0E07               	movlw	7
  5458  001BC8  643D               	cpfsgt	_eusart2TxTail,c
  5459  001BCA  D002               	goto	i2l2460
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;eusart2.c: 153: eusart2TxTail = 0;
  5463  001BCC  0E00               	movlw	0
  5464  001BCE  6E3D               	movwf	_eusart2TxTail,c
  5465  001BD0                     i2l2460:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;eusart2.c: 154: }
  5469                           ;eusart2.c: 155: eusart2TxBufferRemaining++;
  5470  001BD0  0100               	movlb	0	; () banked
  5471  001BD2  2BEA               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  5472                           
  5473                           ;eusart2.c: 156: } else {
  5474  001BD4  0012               	return	
  5475  001BD6                     i2l475:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;eusart2.c: 157: PIE3bits.TX2IE = 0;
  5479  001BD6  98A3               	bcf	4003,4,c	;volatile
  5480  001BD8  0012               	return	
  5481  001BDA                     __end_of_EUSART2_Transmit_ISR:
  5482                           	opt stack 0
  5483                           pclatu	equ	0xFFB
  5484                           pclath	equ	0xFFA
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           intcon2	equ	0xFF1
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           fsr1h	equ	0xFE2
  5498                           fsr1l	equ	0xFE1
  5499                           indf2	equ	0xFDF
  5500                           postinc2	equ	0xFDE
  5501                           postdec2	equ	0xFDD
  5502                           fsr2h	equ	0xFDA
  5503                           fsr2l	equ	0xFD9
  5504                           status	equ	0xFD8
  5505                           
  5506 ;; *************** function _EUSART2_Receive_ISR *****************
  5507 ;; Defined at:
  5508 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_INTERRUPT_InterruptManager
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text39
  5536  001C3A                     __ptext39:
  5537                           	opt stack 0
  5538  001C3A                     _EUSART2_Receive_ISR:
  5539                           	opt stack 23
  5540                           
  5541                           ;eusart2.c: 162: if (1 == RC2STAbits.OERR) {
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;incstack = 0
  5545  001C3A  A271               	btfss	3953,1,c	;volatile
  5546  001C3C  D002               	goto	i2l2440
  5547                           
  5548                           ;eusart2.c: 165: RC2STAbits.CREN = 0;
  5549  001C3E  9871               	bcf	3953,4,c	;volatile
  5550                           
  5551                           ;eusart2.c: 166: RC2STAbits.CREN = 1;
  5552  001C40  8871               	bsf	3953,4,c	;volatile
  5553  001C42                     i2l2440:
  5554                           
  5555                           ;eusart2.c: 167: }
  5556                           ;eusart2.c: 170: eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  5557  001C42  503C               	movf	_eusart2RxHead,w,c
  5558  001C44  0D01               	mullw	1
  5559  001C46  0E60               	movlw	low _eusart2RxBuffer
  5560  001C48  24F3               	addwf	prodl,w,c
  5561  001C4A  6ED9               	movwf	fsr2l,c
  5562  001C4C  0E00               	movlw	high _eusart2RxBuffer
  5563  001C4E  20F4               	addwfc	prodh,w,c
  5564  001C50  6EDA               	movwf	fsr2h,c
  5565  001C52  CF74 FFDF          	movff	3956,indf2	;volatile
  5566  001C56  2A3C               	incf	_eusart2RxHead,f,c
  5567                           
  5568                           ;eusart2.c: 171: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  5569  001C58  0E3F               	movlw	63
  5570  001C5A  643C               	cpfsgt	_eusart2RxHead,c
  5571  001C5C  D002               	goto	i2l2448
  5572                           
  5573                           ;eusart2.c: 172: eusart2RxHead = 0;
  5574  001C5E  0E00               	movlw	0
  5575  001C60  6E3C               	movwf	_eusart2RxHead,c
  5576  001C62                     i2l2448:
  5577                           
  5578                           ;eusart2.c: 173: }
  5579                           ;eusart2.c: 174: eusart2RxCount++;
  5580  001C62  2A3A               	incf	_eusart2RxCount,f,c	;volatile
  5581  001C64  0012               	return		;funcret
  5582  001C66                     __end_of_EUSART2_Receive_ISR:
  5583                           	opt stack 0
  5584                           pclatu	equ	0xFFB
  5585                           pclath	equ	0xFFA
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           intcon	equ	0xFF2
  5593                           intcon2	equ	0xFF1
  5594                           postinc0	equ	0xFEE
  5595                           fsr0h	equ	0xFEA
  5596                           fsr0l	equ	0xFE9
  5597                           wreg	equ	0xFE8
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           postdec2	equ	0xFDD
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607 ;; *************** function _EUSART1_Transmit_ISR *****************
  5608 ;; Defined at:
  5609 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_INTERRUPT_InterruptManager
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text40
  5637  001920                     __ptext40:
  5638                           	opt stack 0
  5639  001920                     _EUSART1_Transmit_ISR:
  5640                           	opt stack 23
  5641                           
  5642                           ;eusart1.c: 176: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  5643                           
  5644                           ;incstack = 0
  5645  001920  0E40               	movlw	64
  5646  001922  0100               	movlb	0	; () banked
  5647  001924  61E9               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5648  001926  D01E               	goto	i2l546
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;eusart1.c: 177: if (PORTAbits.RA7 == 0) {
  5652  001928  BE80               	btfsc	3968,7,c	;volatile
  5653  00192A  D013               	goto	i2l547
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;eusart1.c: 178: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  5657  00192C  5038               	movf	_eusart1TxTail,w,c
  5658  00192E  0D01               	mullw	1
  5659  001930  0E40               	movlw	low _eusart1TxBuffer
  5660  001932  24F3               	addwf	prodl,w,c
  5661  001934  6ED9               	movwf	fsr2l,c
  5662  001936  0E01               	movlw	high _eusart1TxBuffer
  5663  001938  20F4               	addwfc	prodh,w,c
  5664  00193A  6EDA               	movwf	fsr2h,c
  5665  00193C  50DF               	movf	indf2,w,c
  5666  00193E  6EAD               	movwf	4013,c	;volatile
  5667                           
  5668                           ; BSR set to: 0
  5669  001940  2A38               	incf	_eusart1TxTail,f,c
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;eusart1.c: 179: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  5673  001942  0E3F               	movlw	63
  5674  001944  6438               	cpfsgt	_eusart1TxTail,c
  5675  001946  D002               	goto	i2l2432
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;eusart1.c: 180: eusart1TxTail = 0;
  5679  001948  0E00               	movlw	0
  5680  00194A  6E38               	movwf	_eusart1TxTail,c
  5681  00194C                     i2l2432:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;eusart1.c: 181: }
  5685                           ;eusart1.c: 182: eusart1TxBufferRemaining++;
  5686  00194C  0100               	movlb	0	; () banked
  5687  00194E  2BE9               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5688                           
  5689                           ;eusart1.c: 183: } else {
  5690  001950  0012               	return	
  5691  001952                     i2l547:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;eusart1.c: 184: PIE1bits.TX1IE = 0;
  5695  001952  989D               	bcf	3997,4,c	;volatile
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;eusart1.c: 185: subdata.IO_LED = waitCTS = 1;
  5699  001954  0E01               	movlw	1
  5700  001956  6E44               	movwf	_waitCTS,c	;volatile
  5701  001958  B044               	btfsc	_waitCTS,0,c	;volatile
  5702  00195A  D002               	bra	i2u170_45
  5703  00195C  9E43               	bcf	_subdata,7,c
  5704  00195E  D001               	bra	i2u170_46
  5705  001960                     i2u170_45:
  5706  001960  8E43               	bsf	_subdata,7,c
  5707  001962                     i2u170_46:
  5708                           
  5709                           ;eusart1.c: 186: }
  5710                           ;eusart1.c: 187: } else {
  5711  001962  0012               	return	
  5712  001964                     i2l546:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;eusart1.c: 188: PIE1bits.TXIE = 0;
  5716  001964  989D               	bcf	3997,4,c	;volatile
  5717  001966  0012               	return	
  5718  001968                     __end_of_EUSART1_Transmit_ISR:
  5719                           	opt stack 0
  5720                           pclatu	equ	0xFFB
  5721                           pclath	equ	0xFFA
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           intcon2	equ	0xFF1
  5730                           postinc0	equ	0xFEE
  5731                           fsr0h	equ	0xFEA
  5732                           fsr0l	equ	0xFE9
  5733                           wreg	equ	0xFE8
  5734                           fsr1h	equ	0xFE2
  5735                           fsr1l	equ	0xFE1
  5736                           indf2	equ	0xFDF
  5737                           postinc2	equ	0xFDE
  5738                           postdec2	equ	0xFDD
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _EUSART1_Receive_ISR *****************
  5744 ;; Defined at:
  5745 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_INTERRUPT_InterruptManager
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text41
  5773  001C66                     __ptext41:
  5774                           	opt stack 0
  5775  001C66                     _EUSART1_Receive_ISR:
  5776                           	opt stack 23
  5777                           
  5778                           ;eusart1.c: 193: if (1 == RC1STAbits.OERR) {
  5779                           
  5780                           ;incstack = 0
  5781  001C66  A2AB               	btfss	4011,1,c	;volatile
  5782  001C68  D002               	goto	i2l2410
  5783                           
  5784                           ;eusart1.c: 196: RC1STAbits.CREN = 0;
  5785  001C6A  98AB               	bcf	4011,4,c	;volatile
  5786                           
  5787                           ;eusart1.c: 197: RC1STAbits.CREN = 1;
  5788  001C6C  88AB               	bsf	4011,4,c	;volatile
  5789  001C6E                     i2l2410:
  5790                           
  5791                           ;eusart1.c: 198: }
  5792                           ;eusart1.c: 201: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5793  001C6E  5037               	movf	_eusart1RxHead,w,c
  5794  001C70  0D01               	mullw	1
  5795  001C72  0E00               	movlw	low _eusart1RxBuffer
  5796  001C74  24F3               	addwf	prodl,w,c
  5797  001C76  6ED9               	movwf	fsr2l,c
  5798  001C78  0E01               	movlw	high _eusart1RxBuffer
  5799  001C7A  20F4               	addwfc	prodh,w,c
  5800  001C7C  6EDA               	movwf	fsr2h,c
  5801  001C7E  CFAE FFDF          	movff	4014,indf2	;volatile
  5802  001C82  2A37               	incf	_eusart1RxHead,f,c
  5803                           
  5804                           ;eusart1.c: 202: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  5805  001C84  0E3F               	movlw	63
  5806  001C86  6437               	cpfsgt	_eusart1RxHead,c
  5807  001C88  D002               	goto	i2l2418
  5808                           
  5809                           ;eusart1.c: 203: eusart1RxHead = 0;
  5810  001C8A  0E00               	movlw	0
  5811  001C8C  6E37               	movwf	_eusart1RxHead,c
  5812  001C8E                     i2l2418:
  5813                           
  5814                           ;eusart1.c: 204: }
  5815                           ;eusart1.c: 205: eusart1RxCount++;
  5816  001C8E  2A35               	incf	_eusart1RxCount,f,c	;volatile
  5817  001C90  0012               	return		;funcret
  5818  001C92                     __end_of_EUSART1_Receive_ISR:
  5819                           	opt stack 0
  5820                           pclatu	equ	0xFFB
  5821                           pclath	equ	0xFFA
  5822                           tblptru	equ	0xFF8
  5823                           tblptrh	equ	0xFF7
  5824                           tblptrl	equ	0xFF6
  5825                           tablat	equ	0xFF5
  5826                           prodh	equ	0xFF4
  5827                           prodl	equ	0xFF3
  5828                           intcon	equ	0xFF2
  5829                           intcon2	equ	0xFF1
  5830                           postinc0	equ	0xFEE
  5831                           fsr0h	equ	0xFEA
  5832                           fsr0l	equ	0xFE9
  5833                           wreg	equ	0xFE8
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           indf2	equ	0xFDF
  5837                           postinc2	equ	0xFDE
  5838                           postdec2	equ	0xFDD
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8
  5842                           pclatu	equ	0xFFB
  5843                           pclath	equ	0xFFA
  5844                           tblptru	equ	0xFF8
  5845                           tblptrh	equ	0xFF7
  5846                           tblptrl	equ	0xFF6
  5847                           tablat	equ	0xFF5
  5848                           prodh	equ	0xFF4
  5849                           prodl	equ	0xFF3
  5850                           intcon	equ	0xFF2
  5851                           intcon2	equ	0xFF1
  5852                           postinc0	equ	0xFEE
  5853                           fsr0h	equ	0xFEA
  5854                           fsr0l	equ	0xFE9
  5855                           wreg	equ	0xFE8
  5856                           fsr1h	equ	0xFE2
  5857                           fsr1l	equ	0xFE1
  5858                           indf2	equ	0xFDF
  5859                           postinc2	equ	0xFDE
  5860                           postdec2	equ	0xFDD
  5861                           fsr2h	equ	0xFDA
  5862                           fsr2l	equ	0xFD9
  5863                           status	equ	0xFD8
  5864                           
  5865                           	psect	rparam
  5866  0000                     pclatu	equ	0xFFB
  5867                           pclath	equ	0xFFA
  5868                           tblptru	equ	0xFF8
  5869                           tblptrh	equ	0xFF7
  5870                           tblptrl	equ	0xFF6
  5871                           tablat	equ	0xFF5
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           intcon	equ	0xFF2
  5875                           intcon2	equ	0xFF1
  5876                           postinc0	equ	0xFEE
  5877                           fsr0h	equ	0xFEA
  5878                           fsr0l	equ	0xFE9
  5879                           wreg	equ	0xFE8
  5880                           fsr1h	equ	0xFE2
  5881                           fsr1l	equ	0xFE1
  5882                           indf2	equ	0xFDF
  5883                           postinc2	equ	0xFDE
  5884                           postdec2	equ	0xFDD
  5885                           fsr2h	equ	0xFDA
  5886                           fsr2l	equ	0xFD9
  5887                           status	equ	0xFD8
  5888                           
  5889                           	psect	temp
  5890  00004C                     btemp:
  5891                           	opt stack 0
  5892  00004C                     	ds	1
  5893  0000                     int$flags	set	btemp
  5894                           pclatu	equ	0xFFB
  5895                           pclath	equ	0xFFA
  5896                           tblptru	equ	0xFF8
  5897                           tblptrh	equ	0xFF7
  5898                           tblptrl	equ	0xFF6
  5899                           tablat	equ	0xFF5
  5900                           prodh	equ	0xFF4
  5901                           prodl	equ	0xFF3
  5902                           intcon	equ	0xFF2
  5903                           intcon2	equ	0xFF1
  5904                           postinc0	equ	0xFEE
  5905                           fsr0h	equ	0xFEA
  5906                           fsr0l	equ	0xFE9
  5907                           wreg	equ	0xFE8
  5908                           fsr1h	equ	0xFE2
  5909                           fsr1l	equ	0xFE1
  5910                           indf2	equ	0xFDF
  5911                           postinc2	equ	0xFDE
  5912                           postdec2	equ	0xFDD
  5913                           fsr2h	equ	0xFDA
  5914                           fsr2l	equ	0xFD9
  5915                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         280
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      75
    BANK0           160     19     139
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E6981 size(2) Largest target is 0
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    oled_str_disp@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    I2C_M_write@wr	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E6981 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    F7093.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWrite@pflag	PTR enum E6981 size(2) Largest target is 1
		 -> I2C_M_write@status(COMRAM[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), 

    F7088.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S1247$pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    S1259$pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    p_i2c1_current.pTrFlag	PTR enum E6981 size(2) Largest target is 2
		 -> oled_data@write(BANK0[2]), oled_cmd@write(BANK0[2]), I2C_M_write@status(COMRAM[1]), 

    S1259$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S1270$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S1270$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _oled_data->_I2C_M_write
    _oled_cmd->_I2C_M_write
    _I2C_M_write->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _EUSART_CompWrite->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_oled_str_disp
    _oled_str_disp->_oled_position
    _oled_position->_oled_cmd
    _oled_data->_I2C_M_write
    _oled_init->_oled_cmd
    _oled_contrast->_oled_cmd
    _oled_clear->_oled_cmd
    _oled_cmd->_I2C_M_write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   16530
                                             11 BANK0      8     8      0
                  _ADC_GetConversion
                       _EUSART1_Read
                      _EUSART1_Write
                       _EUSART2_Read
                   _EUSART_CompWrite
                  _SYSTEM_Initialize
                         _oled_clear
                      _oled_contrast
                          _oled_data
                          _oled_init
                      _oled_position
                      _oled_str_disp
 ---------------------------------------------------------------------------------
 (1) _oled_str_disp                                        7     4      3    5218
                                              4 BANK0      7     4      3
                          _oled_data
                      _oled_position
 ---------------------------------------------------------------------------------
 (2) _oled_position                                        2     1      1    2693
                                              2 BANK0      2     1      1
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (2) _oled_data                                            1     1      0    2091
                                              1 BANK0      1     1      0
                        _I2C_M_write
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            1     1      0    2091
                                              2 BANK0      1     1      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (1) _oled_contrast                                        2     2      0    2122
                                              2 BANK0      2     2      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (1) _oled_clear                                           1     1      0    2091
                                              2 BANK0      1     1      0
                           _oled_cmd
 ---------------------------------------------------------------------------------
 (3) _oled_cmd                                             1     1      0    2091
                                              1 BANK0      1     1      0
                        _I2C_M_write
 ---------------------------------------------------------------------------------
 (4) _I2C_M_write                                          4     1      3    2060
                                             35 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     7     0      7    1607
                                             28 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             19 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_CompWrite                                     2     2      0     110
                                             20 COMRAM     2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      44
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         1     1      0      24
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0      22
                                              5 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART1_Read
   _EUSART1_Write
   _EUSART2_Read
   _EUSART_CompWrite
     _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
   _oled_clear
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_contrast
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_data
     _I2C_M_write
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _oled_init
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_position
     _oled_cmd
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
   _oled_str_disp
     _oled_data
       _I2C_M_write
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oled_position
       _oled_cmd
         _I2C_M_write
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _TMR0_CallBack
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      12        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Aug 09 15:57:52 2022

              __end_of_oled_str_disp 17AA             _eusart1TxBufferRemaining 00E9  
                                 l27 1C22                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l642 17A8  
                                l539 18A8                                  l680 13E6  
                                l679 1392                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                      _timer1ReloadVal 0049  
               __size_of_I2C_M_write 0098                                  _str 00A0  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                     __end_of_I2C1_ISR 1650  
                        main@escaped 002F                                 l2232 1890  
                               l2246 18CA                                 l2248 18CE  
                               l2506 1B3A                                 l2516 1B46  
                               l2526 1B6E                                 l2732 16C4  
                               l2820 1750                                 l2742 1700  
                               l2822 177A                                 l2902 13BC  
                               l2496 1B12                                 l2736 16E4  
                               l2752 17C8                                 l2816 1722  
                               l2738 16F0                                 l2754 17E8  
                               l2748 1880                                 l2764 180A  
                               l2908 13C6                                 l2766 1812  
                               l2864 131C                                 l2856 104C  
                               l2778 183A                                 l2882 1368  
                               l2890 137A                                 l2884 1376  
                               l2876 133C                                 l2892 138E  
                               l2868 1328                                 l2878 1354  
                               l2896 139A                          main@columun 0031  
                               STR_1 1001                                 u3000 1180  
                               u3020 123C                                 _LATA 000F89  
                               u3110 12BC                                 u3030 124C  
                               _LATB 000F8A                                 u3015 1184  
                               _LATC 000F8B                                 _LATD 000F8C  
                               u3105 12B0                                 _LATE 000F8D  
                               u3130 12CC                                 u3050 125C  
                               u3028 1240                                 u3125 12C0  
                               u3045 1250                                 u3150 12DC  
                               u3070 1274                                 u3080 129C  
                               u3145 12D0                                 u3065 1260  
                               u3170 12EC                                 u3090 12AC  
                               u3307 1D7C                                 u3076 1276  
                               u3317 1CDE                                 u3165 12E0  
                               u3327 17EA                                 u3088 12A0  
                               u2720 106C                                 u3185 12F0  
                               u3257 1020                                 u2810 10BC  
                               u2730 107C                                 u3267 1CB4  
                               u2900 1130                                 u3277 19BA  
                               u2805 10B0                                 u2830 10CC  
                               u2750 108C                                 u3287 19DE  
                               u2920 1140                                 u2728 1070  
                               u3297 1A1C                                 u2825 10C0  
                               u2745 1080                                 u2850 10DC  
                               u2770 109C                                 u2915 1134  
                               u2940 1150                                 u2845 10D0  
                               u2765 1090                                 u2870 1110  
                               u2790 10AC                                 u2935 1144  
                               u2960 1160                                 u2880 1120  
                               u2865 10E0                                 u2785 10A0  
                               u2955 1154                                 u2980 1170  
                               u2878 1114                                 u2975 1164  
                               u2895 1124                                 u2995 1174  
                               _TMR1 000FCE                                 _WPUB 000F61  
              ??_EUSART2_Receive_ISR 0001                        _EUSART1_Write 188E  
                               _main 100C                        ?_EUSART1_Read 0001  
                    _TMR0_StartTimer 1E20                        ?_EUSART2_Read 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9               ??_I2C1_MasterTRBInsert 0018  
                               btemp 004C                        __CFG_BORV$190 000000  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00DC                        __CFG_IESO$OFF 000000  
       __end_of_EUSART2_Transmit_ISR 1BDA                         ___param_bank 000000  
     I2C1_MasterWriteTRBBuild@length 0018              __end_of_TMR0_Initialize 1DA2  
                         _i2c1_state 0042       __size_of_OSCILLATOR_Initialize 000E  
          I2C1_MasterTRBInsert@count 0019        __end_of_OSCILLATOR_Initialize 1E0A  
          I2C1_MasterTRBInsert@pflag 0016                                ?_main 0001  
                  __end_of_I2C1_Stop 1A66                      _TMR1_StartTimer 1E1C  
                              _T0CON 000FD5                                _T1CON 000FCD  
                     __CFG_DEBUG$OFF 000000                                i2l121 0072  
                              i2l123 007E                                i2l131 00A0  
                              i2l115 004E                                i2l125 008A  
                              i2l117 005A                                i2l127 0096  
                              i2l119 0066                                i2l332 1422  
                              i2l343 14D6                                i2l335 1498  
                              i2l344 14E6                                i2l361 15AA  
                              i2l337 14A0                                i2l362 15BC  
                              i2l354 1562                                i2l338 14A8  
                              i2l348 154E                                i2l366 15EC  
                              i2l358 1590                                i2l546 1964  
                              i2l547 1952                                i2l475 1BD6  
                              _TMR0H 000FD7                                _TMR1H 000FCF  
                              _TMR0L 000FD6                                _TMR1L 000FCE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96         __end_of_I2C1_BusCollisionISR 1E26  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 1920                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                  ??_I2C1_Initialize 0014                     __end_of_TMR0_ISR 1E16  
                   __end_of_TMR1_ISR 1D30                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                      oled_data@work 00D7                        oled_cmd@write 00D4  
                     ?_EUSART1_Write 0001              __end_of_TMR1_Initialize 1D52  
                              pclath 000FFA                                tablat 000FF5  
                     ??_EUSART1_Read 0014                       ??_EUSART2_Read 0014  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000      I2C1_MasterWriteTRBBuild@address 0019  
                    __initialization 1B76                I2C1_MasterWrite@pdata 001D  
              I2C1_MasterWrite@pflag 0022           __end_of_EUSART1_Initialize 1B0E  
                       __end_of_main 13EC                 EUSART_CompWrite@data 0016  
        ?_INTERRUPT_InterruptManager 0001                          _i2c1_object 00B8  
                             ??_main 00E1                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0001              __end_of_TMR0_StartTimer 1E24  
         __end_of_EUSART2_Initialize 1AD8                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
           _eusart2TxBufferRemaining 00EA                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                               _RC1STA 000FAB  
                             _RC2STA 000F71                               i2l2220 1A60  
                             i2l2410 1C6E                               i2l2314 14D0  
                             i2l2228 1DCC                               i2l2308 14B8  
                             i2l2404 160A                               i2l2432 194C  
                             i2l2440 1C42                               i2l2328 1514  
                             i2l2418 1C8E                               i2l2460 1BD0  
                             i2l2356 1574                               i2l2348 155C  
                             i2l2382 15CC                               i2l2366 1598  
                     __CFG_WDTEN$OFF 000000                               i2l2448 1C62  
                             i2l2296 147A                               i2l2394 15F2  
                             i2l2378 15C4                               i2l2396 15F6  
                             i2l2398 15FE                               _RCREG1 000FAE  
                             _RCREG2 000F74                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _SPBRG2 000F75  
                             _TX1STA 000FAC                               _TX2STA 000F72  
                             _TXREG1 000FAD                               _TXREG2 000F73  
                  ?_I2C1_MasterWrite 001D                       __CFG_XINST$OFF 000000  
                 ??_I2C1_MasterWrite 0024                       _p_i2c1_current 0029  
            __end_of_TMR1_StartTimer 1E20                       __CFG_STVREN$ON 000000  
                  ?_EUSART_CompWrite 0001           ??_I2C1_MasterWriteTRBBuild 001B  
                   ?_TMR0_Initialize 0001                            ?_I2C1_ISR 0001  
                             clear_0 1B7C                               clear_1 1B88  
                             clear_2 1B94                     __end_of_oled_cmd 1CE6  
                 ??_EUSART_CompWrite 0015                       oled_data@write 00D2  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
               _EUSART2_Transmit_ISR 1BA8             ADC_GetConversion@channel 0018  
              __end_of_TMR0_CallBack 1D6E                      ??_EUSART1_Write 0014  
      I2C1_MasterWriteTRBBuild@pdata 0016                      _eusart1RxBuffer 0100  
      __size_of_INTERRUPT_Initialize 0014                __end_of_TMR1_CallBack 1E1C  
                    _eusart1TxBuffer 0140                      _eusart2RxBuffer 0060  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 1CE6  
                    _eusart2TxBuffer 00B0                           __accesstop 0060  
            __end_of__initialization 1B9A                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                       _i2c1_trb_count 0041  
              _I2C1_FunctionComplete 1DBA                 _I2C1_BusCollisionISR 1E24  
                     __pcstackCOMRAM 0001               I2C1_MasterWrite@length 001F  
                _timer0ReloadVal8bit 004B                  ??_SYSTEM_Initialize 0014  
                          ?_TMR0_ISR 0001                            ?_TMR1_ISR 0001  
                         ??_I2C1_ISR 0004                 __end_of_EUSART1_Read 1B76  
               __end_of_EUSART2_Read 1B42               ??_EUSART1_Transmit_ISR 0001  
              ?_EUSART2_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 1C92  
                   ?_TMR0_StartTimer 0001            __end_of_SYSTEM_Initialize 1D0C  
                      _eusart1RxHead 0037                        _eusart2RxHead 003C  
                      _eusart1TxHead 0039                        _eusart1RxTail 0036  
                      _eusart2TxHead 003E                           __pbssBANK0 0060  
                         __pbssBANK1 0100                        _eusart2RxTail 003B  
                      _eusart1TxTail 0038                        _eusart2TxTail 003D  
                    __CFG_PLLCFG$OFF 000000              I2C_M_write@slaveTimeOut 00BF  
                         __pnvCOMRAM 0049                EUSART2_Read@readValue 0014  
              ?_I2C1_BusCollisionISR 0001                   __CFG_CCP2MX$PORTC1 000000  
                 __size_of_oled_data 002A                   __size_of_oled_init 003E  
                   ?_TMR1_StartTimer 0001                           ??_TMR0_ISR 0001  
                         ??_TMR1_ISR 0001                   __CFG_CCP3MX$PORTB5 000000  
             __size_of_oled_contrast 003E                      _I2C1_Initialize 1A66  
                      ??_I2C_M_write 0027              __size_of_ADC_Initialize 0016  
                            _OSCCON2 000FD2          __end_of_EUSART2_Receive_ISR 1C66  
                          _I2C1_Stop 1A28                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SPBRGH2 000F76               __size_of_oled_position 0018  
                            _SSP1ADD 000FC8                              _SSP1BUF 000FC9  
             __size_of_oled_str_disp 00A0                   main@recievedbefore 0032  
      I2C1_MasterTRBInsert@ptrb_list 0014                    oled_contrast@cont 00D9  
                          ?_oled_cmd 0001                      __CFG_PWRTEN$OFF 000000  
             ?_I2C1_FunctionComplete 0001                              __Hparam 0000  
      __size_of_I2C1_MasterTRBInsert 00BA                   _not_of_before_data 0034  
                            __Lparam 0000                   _p_i2c1_trb_current 002B  
                       __psmallconst 1000                              __pcinit 1B76  
                            __ramtop 1000                              __ptext0 100C  
                            __ptext1 170A                              __ptext2 1DA2  
                            __ptext3 1C92                              __ptext4 19AC  
                            __ptext5 19EA                              __ptext6 1D6E  
                            __ptext7 1CBC                              __ptext8 17AA  
                            __ptext9 1842                            _T0CONbits 000FD5  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 1DFC  
             ??_EUSART2_Transmit_ISR 0001                           _oled_clear 1D6E  
                 _EUSART1_Initialize 1AD8             ??_PIN_MANAGER_Initialize 0014  
                            _waitCTS 0044                           ?_I2C1_Stop 0001  
                __end_of_I2C_M_write 1842                    __end_of_oled_data 1CBC  
                            _tmrFlag 0045                       oled_str_disp@i 00E0  
                  __end_of_oled_init 19EA                              _subdata 0043  
                      _oled_contrast 19EA           __size_of_SYSTEM_Initialize 0026  
               I2C1_ISR@pi2c_buf_ptr 0027                 end_of_initialization 1B9A  
                ?_EUSART1_Initialize 0001                        __Lmediumconst 0000  
                         ??_oled_cmd 0027               ??_I2C1_BusCollisionISR 0001  
            __end_of_I2C1_Initialize 1AA2                   _EUSART2_Initialize 1AA2  
                      _oled_position 1DA2                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                __size_of_EUSART2_Read 0034  
                      _oled_str_disp 170A                 ??_EUSART1_Initialize 0014  
                ?_EUSART2_Initialize 0001                            _PORTAbits 000F80  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                          _PORTDbits 000F83            __size_of_I2C1_MasterWrite 004C  
                  __size_of_I2C1_ISR 0264                       ?_oled_contrast 0001  
          __size_of_EUSART_CompWrite 0030                  EUSART1_Write@txData 0014  
  I2C1_ISR@i2c_10bit_address_restart 003F                 ??_EUSART2_Initialize 0014  
                       _EUSART1_Read 1B42                         _EUSART2_Read 1B0E  
            I2C1_MasterWrite@address 0020                       ?_oled_position 00D8  
                     ?_oled_str_disp 00DA         __end_of_INTERRUPT_Initialize 1DFC  
            I2C1_MasterWrite@trBlock 00C8                    __size_of_TMR0_ISR 000C  
                  __size_of_TMR1_ISR 0024             I2C1_Stop@completion_code 0003  
                     _ADC_Initialize 1DD2                          _I2C_M_write 17AA  
             ?_OSCILLATOR_Initialize 0001                         oled_cmd@work 00D7  
                        ?_oled_clear 0001                  start_initialization 1B76  
                        ??_I2C1_Stop 0001             __size_of_TMR0_Initialize 001A  
    __size_of_PIN_MANAGER_Initialize 0048    __size_of_I2C1_MasterWriteTRBBuild 0044  
          ?_I2C1_MasterWriteTRBBuild 0014                __end_of_EUSART1_Write 18D8  
                   main@recieveddata 0033                     ?_I2C1_Initialize 0001  
           __size_of_TMR1_Initialize 0022               __size_of_TMR0_CallBack 001C  
             __end_of_ADC_Initialize 1DE8               __size_of_TMR1_CallBack 0006  
       I2C1_MasterWriteTRBBuild@ptrb 0014                       _eusart1RxCount 0035  
                     _eusart2RxCount 003A                TMR1_ISR@CountCallBack 002D  
                    ??_oled_contrast 00D8                          __pbssCOMRAM 0027  
      __size_of_EUSART1_Transmit_ISR 0048                        __pcstackBANK0 00D6  
                      _i2c1_tr_queue 00CD                     oled_position@col 00D8  
            ??_I2C1_FunctionComplete 0001         __size_of_EUSART1_Receive_ISR 002C  
                    ??_oled_position 0027                            __pnvBANK0 00E9  
           __size_of_TMR0_StartTimer 0004                      ??_oled_str_disp 00DD  
             _PIN_MANAGER_Initialize 18D8                  __size_of_oled_clear 001A  
                  __size_of_oled_cmd 002A                            __pintcode 0008  
                    ?_ADC_Initialize 0001                             _I2C1_ISR 13EC  
       ??_INTERRUPT_InterruptManager 0006                        I2C_M_write@wr 0024  
                   _I2C1_MasterWrite 1842                             _BAUD1CON 000FB8  
                           _BAUD2CON 000F70                          __smallconst 1000  
       __end_of_I2C1_MasterTRBInsert 170A             __size_of_TMR1_StartTimer 0004  
                   _EUSART_CompWrite 1BDA                        _TMR0_CallBack 1D52  
               _INTERRUPT_Initialize 1DE8                            _oled_data 1C92  
                          _oled_init 19AC                        _TMR1_CallBack 1E16  
             I2C1_MasterRead@trBlock 00C3                    ??_TMR0_Initialize 0014  
       __size_of_EUSART2_Receive_ISR 002C                             _LATEbits 000F8D  
                           _IPR1bits 000F9F                             _IPR2bits 000FA2  
                           _IPR3bits 000FA5                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                             _PIE3bits 000FA3  
                           i2u142_45 1D68                             i2u142_46 1D6A  
__size_of_INTERRUPT_InterruptManager 00D4                             i2u170_45 1960  
                           i2u170_46 1962                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                             _PIR3bits 000FA4  
                           _RCONbits 000FD0                      I2C_M_write@addr 00D6  
                   __CFG_WDTPS$32768 000000                             _SSP1CON1 000FC6  
                           _SSP1CON3 000FCB                             _TMR0_ISR 1E0A  
                           _TMR1_ISR 1D0C                             _SSP1STAT 000FC7  
                   oled_str_disp@col 00DA                    ??_TMR1_Initialize 0014  
                         _ADCON0bits 000FC2        __size_of_EUSART2_Transmit_ISR 0032  
                     ?_TMR0_CallBack 0001                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                       ?_TMR1_CallBack 0001  
                         ?_oled_data 0001                           ?_oled_init 0001  
              EUSART1_Read@readValue 0014                             __Hrparam 0000  
      __size_of_I2C1_BusCollisionISR 0002                             __Lrparam 0000  
                  _ADC_GetConversion 1C0A                   __CFG_BOREN$SBORDIS 000000  
             I2C1_ISR@i2c_bytes_left 0040                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0014                   ?_ADC_GetConversion 0014  
                  ??_TMR0_StartTimer 0014          __size_of_EUSART1_Initialize 0036  
                       ?_I2C_M_write 0024     __end_of_I2C1_MasterWriteTRBBuild 19AC  
                    oled_position@li 00D9                  ??_ADC_GetConversion 0016  
                       ??_oled_clear 00D8                  I2C1_ISR@i2c_address 0046  
                           __ptext10 1968                             __ptext11 1650  
                           __ptext20 1A66                             __ptext12 1CE6  
                           __ptext21 1AA2                             __ptext13 1D30  
                         _T1GCONbits 000FCC                             __ptext30 1D0C  
                           __ptext22 1AD8                             __ptext14 1E1C  
                           __ptext31 1E16                             __ptext23 1DD2  
                           __ptext15 1D88                             __ptext40 1920  
                           __ptext32 1E0A                             __ptext24 1BDA  
                           __ptext16 1E20                             __ptext41 1C66  
                           __ptext33 1D52                             __ptext25 188E  
                           __ptext17 18D8                             __ptext34 13EC  
                           __ptext26 1B0E                             __ptext18 1DFC  
                           __ptext35 1A28                             __ptext27 1B42  
                           __ptext19 1DE8                             __ptext36 1DBA  
                           __ptext28 1C0A                             __ptext37 1E24  
                           __ptext38 1BA8                             __ptext39 1C3A  
                       _SSP1CON1bits 000FC6                         _SSP1CON2bits 000FC5  
                  ??_TMR1_StartTimer 0014          __size_of_EUSART2_Initialize 0036  
                      __size_of_main 03E0                             _oled_cmd 1CBC  
          __end_of_ADC_GetConversion 1C3A                 _I2C1_MasterTRBInsert 1650  
                         _RC1STAbits 000FAB                           _RC2STAbits 000F71  
                 __end_of_oled_clear 1D88                      oled_str_disp@li 00DF  
                           int$flags 004C   __end_of_INTERRUPT_InterruptManager 00DC  
         _INTERRUPT_InterruptManager 0008                             main@line 0030  
                _EUSART1_Receive_ISR 1C66                           _INTCONbits 000FF2  
                    ??_TMR0_CallBack 0001               ??_INTERRUPT_Initialize 0014  
                    ??_TMR1_CallBack 0001                             intlevel2 0000  
                        ??_oled_data 0027                          ??_oled_init 00D8  
               ?_EUSART1_Receive_ISR 0001                   I2C_M_write@timeOut 00C1  
            ?_PIN_MANAGER_Initialize 0001             __end_of_I2C1_MasterWrite 188E  
     __size_of_I2C1_FunctionComplete 0018        __end_of_I2C1_FunctionComplete 1DD2  
              ?_I2C1_MasterTRBInsert 0014         __end_of_EUSART1_Transmit_ISR 1968  
                   ??_ADC_Initialize 0014             __end_of_EUSART_CompWrite 1C0A  
           __size_of_I2C1_Initialize 003C               __size_of_EUSART1_Write 004A  
                _EUSART2_Receive_ISR 1C3A                    I2C_M_write@length 0026  
                  I2C_M_write@status 0048                      _TMR0_Initialize 1D88  
                oled_str_disp@string 00DB             _I2C1_MasterWriteTRBBuild 1968  
                  __CFG_T3CMX$PORTC0 000000                __end_of_oled_contrast 1A28  
              ??_EUSART1_Receive_ISR 0001       __end_of_PIN_MANAGER_Initialize 1920  
               ?_EUSART2_Receive_ISR 0001                   __size_of_I2C1_Stop 003E  
                  __CFG_FOSC$INTIO67 000000           __size_of_ADC_GetConversion 0030  
                    _TMR1_Initialize 1D30                __end_of_oled_position 1DBA  
