

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 19:23:15 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  011E                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019C                     	;# 
   104  019D                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  020C                     	;# 
   108  020D                     	;# 
   109  0211                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0212                     	;# 
   113  0213                     	;# 
   114  0213                     	;# 
   115  0214                     	;# 
   116  0214                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0215                     	;# 
   120  0216                     	;# 
   121  0216                     	;# 
   122  0217                     	;# 
   123  0217                     	;# 
   124  0219                     	;# 
   125  021A                     	;# 
   126  021B                     	;# 
   127  021C                     	;# 
   128  021D                     	;# 
   129  021E                     	;# 
   130  021F                     	;# 
   131  0291                     	;# 
   132  0291                     	;# 
   133  0292                     	;# 
   134  0293                     	;# 
   135  0294                     	;# 
   136  0295                     	;# 
   137  0295                     	;# 
   138  0296                     	;# 
   139  0298                     	;# 
   140  0298                     	;# 
   141  0299                     	;# 
   142  029A                     	;# 
   143  029B                     	;# 
   144  029C                     	;# 
   145  029C                     	;# 
   146  029D                     	;# 
   147  029E                     	;# 
   148  029E                     	;# 
   149  0311                     	;# 
   150  0311                     	;# 
   151  0312                     	;# 
   152  0313                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  0394                     	;# 
   158  0395                     	;# 
   159  0396                     	;# 
   160  039A                     	;# 
   161  039C                     	;# 
   162  039D                     	;# 
   163  039E                     	;# 
   164  039F                     	;# 
   165  0415                     	;# 
   166  0416                     	;# 
   167  0417                     	;# 
   168  041C                     	;# 
   169  041D                     	;# 
   170  041E                     	;# 
   171  0FE4                     	;# 
   172  0FE5                     	;# 
   173  0FE6                     	;# 
   174  0FE7                     	;# 
   175  0FE8                     	;# 
   176  0FE9                     	;# 
   177  0FEA                     	;# 
   178  0FEB                     	;# 
   179  0FED                     	;# 
   180  0FEE                     	;# 
   181  0FEF                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0113                     	;# 
   233  0114                     	;# 
   234  0115                     	;# 
   235  0116                     	;# 
   236  0117                     	;# 
   237  0118                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011B                     	;# 
   241  011D                     	;# 
   242  011E                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0191                     	;# 
   246  0191                     	;# 
   247  0192                     	;# 
   248  0193                     	;# 
   249  0193                     	;# 
   250  0193                     	;# 
   251  0194                     	;# 
   252  0195                     	;# 
   253  0196                     	;# 
   254  0199                     	;# 
   255  019A                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  019C                     	;# 
   262  019D                     	;# 
   263  019E                     	;# 
   264  019F                     	;# 
   265  020C                     	;# 
   266  020D                     	;# 
   267  0211                     	;# 
   268  0211                     	;# 
   269  0212                     	;# 
   270  0212                     	;# 
   271  0213                     	;# 
   272  0213                     	;# 
   273  0214                     	;# 
   274  0214                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  0219                     	;# 
   283  021A                     	;# 
   284  021B                     	;# 
   285  021C                     	;# 
   286  021D                     	;# 
   287  021E                     	;# 
   288  021F                     	;# 
   289  0291                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0293                     	;# 
   293  0294                     	;# 
   294  0295                     	;# 
   295  0295                     	;# 
   296  0296                     	;# 
   297  0298                     	;# 
   298  0298                     	;# 
   299  0299                     	;# 
   300  029A                     	;# 
   301  029B                     	;# 
   302  029C                     	;# 
   303  029C                     	;# 
   304  029D                     	;# 
   305  029E                     	;# 
   306  029E                     	;# 
   307  0311                     	;# 
   308  0311                     	;# 
   309  0312                     	;# 
   310  0313                     	;# 
   311  0318                     	;# 
   312  0318                     	;# 
   313  0319                     	;# 
   314  031A                     	;# 
   315  0394                     	;# 
   316  0395                     	;# 
   317  0396                     	;# 
   318  039A                     	;# 
   319  039C                     	;# 
   320  039D                     	;# 
   321  039E                     	;# 
   322  039F                     	;# 
   323  0415                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  041C                     	;# 
   327  041D                     	;# 
   328  041E                     	;# 
   329  0FE4                     	;# 
   330  0FE5                     	;# 
   331  0FE6                     	;# 
   332  0FE7                     	;# 
   333  0FE8                     	;# 
   334  0FE9                     	;# 
   335  0FEA                     	;# 
   336  0FEB                     	;# 
   337  0FED                     	;# 
   338  0FEE                     	;# 
   339  0FEF                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0014                     	;# 
   358  0015                     	;# 
   359  0016                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001C                     	;# 
   367  001E                     	;# 
   368  001F                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  0111                     	;# 
   389  0112                     	;# 
   390  0113                     	;# 
   391  0114                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0117                     	;# 
   395  0118                     	;# 
   396  0119                     	;# 
   397  011A                     	;# 
   398  011B                     	;# 
   399  011D                     	;# 
   400  011E                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0193                     	;# 
   409  0194                     	;# 
   410  0195                     	;# 
   411  0196                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019D                     	;# 
   421  019E                     	;# 
   422  019F                     	;# 
   423  020C                     	;# 
   424  020D                     	;# 
   425  0211                     	;# 
   426  0211                     	;# 
   427  0212                     	;# 
   428  0212                     	;# 
   429  0213                     	;# 
   430  0213                     	;# 
   431  0214                     	;# 
   432  0214                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0215                     	;# 
   436  0216                     	;# 
   437  0216                     	;# 
   438  0217                     	;# 
   439  0217                     	;# 
   440  0219                     	;# 
   441  021A                     	;# 
   442  021B                     	;# 
   443  021C                     	;# 
   444  021D                     	;# 
   445  021E                     	;# 
   446  021F                     	;# 
   447  0291                     	;# 
   448  0291                     	;# 
   449  0292                     	;# 
   450  0293                     	;# 
   451  0294                     	;# 
   452  0295                     	;# 
   453  0295                     	;# 
   454  0296                     	;# 
   455  0298                     	;# 
   456  0298                     	;# 
   457  0299                     	;# 
   458  029A                     	;# 
   459  029B                     	;# 
   460  029C                     	;# 
   461  029C                     	;# 
   462  029D                     	;# 
   463  029E                     	;# 
   464  029E                     	;# 
   465  0311                     	;# 
   466  0311                     	;# 
   467  0312                     	;# 
   468  0313                     	;# 
   469  0318                     	;# 
   470  0318                     	;# 
   471  0319                     	;# 
   472  031A                     	;# 
   473  0394                     	;# 
   474  0395                     	;# 
   475  0396                     	;# 
   476  039A                     	;# 
   477  039C                     	;# 
   478  039D                     	;# 
   479  039E                     	;# 
   480  039F                     	;# 
   481  0415                     	;# 
   482  0416                     	;# 
   483  0417                     	;# 
   484  041C                     	;# 
   485  041D                     	;# 
   486  041E                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0016                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  001E                     	;# 
   526  001F                     	;# 
   527  008C                     	;# 
   528  008D                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  010C                     	;# 
   545  010D                     	;# 
   546  0111                     	;# 
   547  0112                     	;# 
   548  0113                     	;# 
   549  0114                     	;# 
   550  0115                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  0118                     	;# 
   554  0119                     	;# 
   555  011A                     	;# 
   556  011B                     	;# 
   557  011D                     	;# 
   558  011E                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561  0191                     	;# 
   562  0191                     	;# 
   563  0192                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0194                     	;# 
   568  0195                     	;# 
   569  0196                     	;# 
   570  0199                     	;# 
   571  019A                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019C                     	;# 
   578  019D                     	;# 
   579  019E                     	;# 
   580  019F                     	;# 
   581  020C                     	;# 
   582  020D                     	;# 
   583  0211                     	;# 
   584  0211                     	;# 
   585  0212                     	;# 
   586  0212                     	;# 
   587  0213                     	;# 
   588  0213                     	;# 
   589  0214                     	;# 
   590  0214                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0216                     	;# 
   595  0216                     	;# 
   596  0217                     	;# 
   597  0217                     	;# 
   598  0219                     	;# 
   599  021A                     	;# 
   600  021B                     	;# 
   601  021C                     	;# 
   602  021D                     	;# 
   603  021E                     	;# 
   604  021F                     	;# 
   605  0291                     	;# 
   606  0291                     	;# 
   607  0292                     	;# 
   608  0293                     	;# 
   609  0294                     	;# 
   610  0295                     	;# 
   611  0295                     	;# 
   612  0296                     	;# 
   613  0298                     	;# 
   614  0298                     	;# 
   615  0299                     	;# 
   616  029A                     	;# 
   617  029B                     	;# 
   618  029C                     	;# 
   619  029C                     	;# 
   620  029D                     	;# 
   621  029E                     	;# 
   622  029E                     	;# 
   623  0311                     	;# 
   624  0311                     	;# 
   625  0312                     	;# 
   626  0313                     	;# 
   627  0318                     	;# 
   628  0318                     	;# 
   629  0319                     	;# 
   630  031A                     	;# 
   631  0394                     	;# 
   632  0395                     	;# 
   633  0396                     	;# 
   634  039A                     	;# 
   635  039C                     	;# 
   636  039D                     	;# 
   637  039E                     	;# 
   638  039F                     	;# 
   639  0415                     	;# 
   640  0416                     	;# 
   641  0417                     	;# 
   642  041C                     	;# 
   643  041D                     	;# 
   644  041E                     	;# 
   645  0FE4                     	;# 
   646  0FE5                     	;# 
   647  0FE6                     	;# 
   648  0FE7                     	;# 
   649  0FE8                     	;# 
   650  0FE9                     	;# 
   651  0FEA                     	;# 
   652  0FEB                     	;# 
   653  0FED                     	;# 
   654  0FEE                     	;# 
   655  0FEF                     	;# 
   656  0000                     	;# 
   657  0001                     	;# 
   658  0002                     	;# 
   659  0003                     	;# 
   660  0004                     	;# 
   661  0005                     	;# 
   662  0006                     	;# 
   663  0007                     	;# 
   664  0008                     	;# 
   665  0009                     	;# 
   666  000A                     	;# 
   667  000B                     	;# 
   668  000C                     	;# 
   669  000D                     	;# 
   670  0011                     	;# 
   671  0012                     	;# 
   672  0013                     	;# 
   673  0014                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0016                     	;# 
   677  0017                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  001E                     	;# 
   684  001F                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  010C                     	;# 
   703  010D                     	;# 
   704  0111                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0118                     	;# 
   712  0119                     	;# 
   713  011A                     	;# 
   714  011B                     	;# 
   715  011D                     	;# 
   716  011E                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0191                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0193                     	;# 
   725  0194                     	;# 
   726  0195                     	;# 
   727  0196                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019C                     	;# 
   735  019C                     	;# 
   736  019D                     	;# 
   737  019E                     	;# 
   738  019F                     	;# 
   739  020C                     	;# 
   740  020D                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0213                     	;# 
   747  0214                     	;# 
   748  0214                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0216                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0217                     	;# 
   756  0219                     	;# 
   757  021A                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021D                     	;# 
   761  021E                     	;# 
   762  021F                     	;# 
   763  0291                     	;# 
   764  0291                     	;# 
   765  0292                     	;# 
   766  0293                     	;# 
   767  0294                     	;# 
   768  0295                     	;# 
   769  0295                     	;# 
   770  0296                     	;# 
   771  0298                     	;# 
   772  0298                     	;# 
   773  0299                     	;# 
   774  029A                     	;# 
   775  029B                     	;# 
   776  029C                     	;# 
   777  029C                     	;# 
   778  029D                     	;# 
   779  029E                     	;# 
   780  029E                     	;# 
   781  0311                     	;# 
   782  0311                     	;# 
   783  0312                     	;# 
   784  0313                     	;# 
   785  0318                     	;# 
   786  0318                     	;# 
   787  0319                     	;# 
   788  031A                     	;# 
   789  0394                     	;# 
   790  0395                     	;# 
   791  0396                     	;# 
   792  039A                     	;# 
   793  039C                     	;# 
   794  039D                     	;# 
   795  039E                     	;# 
   796  039F                     	;# 
   797  0415                     	;# 
   798  0416                     	;# 
   799  0417                     	;# 
   800  041C                     	;# 
   801  041D                     	;# 
   802  041E                     	;# 
   803  0FE4                     	;# 
   804  0FE5                     	;# 
   805  0FE6                     	;# 
   806  0FE7                     	;# 
   807  0FE8                     	;# 
   808  0FE9                     	;# 
   809  0FEA                     	;# 
   810  0FEB                     	;# 
   811  0FED                     	;# 
   812  0FEE                     	;# 
   813  0FEF                     	;# 
   814  0000                     	;# 
   815  0001                     	;# 
   816  0002                     	;# 
   817  0003                     	;# 
   818  0004                     	;# 
   819  0005                     	;# 
   820  0006                     	;# 
   821  0007                     	;# 
   822  0008                     	;# 
   823  0009                     	;# 
   824  000A                     	;# 
   825  000B                     	;# 
   826  000C                     	;# 
   827  000D                     	;# 
   828  0011                     	;# 
   829  0012                     	;# 
   830  0013                     	;# 
   831  0014                     	;# 
   832  0015                     	;# 
   833  0016                     	;# 
   834  0016                     	;# 
   835  0017                     	;# 
   836  0018                     	;# 
   837  0019                     	;# 
   838  001A                     	;# 
   839  001B                     	;# 
   840  001C                     	;# 
   841  001E                     	;# 
   842  001F                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  0091                     	;# 
   846  0092                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009B                     	;# 
   857  009C                     	;# 
   858  009D                     	;# 
   859  009E                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  0111                     	;# 
   863  0112                     	;# 
   864  0113                     	;# 
   865  0114                     	;# 
   866  0115                     	;# 
   867  0116                     	;# 
   868  0117                     	;# 
   869  0118                     	;# 
   870  0119                     	;# 
   871  011A                     	;# 
   872  011B                     	;# 
   873  011D                     	;# 
   874  011E                     	;# 
   875  018C                     	;# 
   876  018D                     	;# 
   877  0191                     	;# 
   878  0191                     	;# 
   879  0192                     	;# 
   880  0193                     	;# 
   881  0193                     	;# 
   882  0193                     	;# 
   883  0194                     	;# 
   884  0195                     	;# 
   885  0196                     	;# 
   886  0199                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019C                     	;# 
   893  019C                     	;# 
   894  019D                     	;# 
   895  019E                     	;# 
   896  019F                     	;# 
   897  020C                     	;# 
   898  020D                     	;# 
   899  0211                     	;# 
   900  0211                     	;# 
   901  0212                     	;# 
   902  0212                     	;# 
   903  0213                     	;# 
   904  0213                     	;# 
   905  0214                     	;# 
   906  0214                     	;# 
   907  0215                     	;# 
   908  0215                     	;# 
   909  0215                     	;# 
   910  0216                     	;# 
   911  0216                     	;# 
   912  0217                     	;# 
   913  0217                     	;# 
   914  0219                     	;# 
   915  021A                     	;# 
   916  021B                     	;# 
   917  021C                     	;# 
   918  021D                     	;# 
   919  021E                     	;# 
   920  021F                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0294                     	;# 
   926  0295                     	;# 
   927  0295                     	;# 
   928  0296                     	;# 
   929  0298                     	;# 
   930  0298                     	;# 
   931  0299                     	;# 
   932  029A                     	;# 
   933  029B                     	;# 
   934  029C                     	;# 
   935  029C                     	;# 
   936  029D                     	;# 
   937  029E                     	;# 
   938  029E                     	;# 
   939  0311                     	;# 
   940  0311                     	;# 
   941  0312                     	;# 
   942  0313                     	;# 
   943  0318                     	;# 
   944  0318                     	;# 
   945  0319                     	;# 
   946  031A                     	;# 
   947  0394                     	;# 
   948  0395                     	;# 
   949  0396                     	;# 
   950  039A                     	;# 
   951  039C                     	;# 
   952  039D                     	;# 
   953  039E                     	;# 
   954  039F                     	;# 
   955  0415                     	;# 
   956  0416                     	;# 
   957  0417                     	;# 
   958  041C                     	;# 
   959  041D                     	;# 
   960  041E                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  000B                     _INTCONbits	set	11
   973  0011                     _PIR1bits	set	17
   974  0015                     _TMR0	set	21
   975  0060                     _RA0	set	96
   976  0061                     _RA1	set	97
   977  0066                     _RA6	set	102
   978  0067                     _RA7	set	103
   979  0068                     _RB0	set	104
   980  006B                     _RB3	set	107
   981  006C                     _RB4	set	108
   982  006D                     _RB5	set	109
   983  0095                     _OPTION_REG	set	149
   984  0095                     _OPTION_REGbits	set	149
   985  0099                     _OSCCON	set	153
   986  009A                     _OSCSTAT	set	154
   987  0098                     _OSCTUNE	set	152
   988  0091                     _PIE1bits	set	145
   989  008C                     _TRISA	set	140
   990  008D                     _TRISB	set	141
   991  04D6                     _PLLR	set	1238
   992  011D                     _APFCON0	set	285
   993  011E                     _APFCON1	set	286
   994  010C                     _LATA	set	268
   995  010D                     _LATB	set	269
   996  0861                     _LATA1	set	2145
   997  018C                     _ANSELA	set	396
   998  018D                     _ANSELB	set	397
   999  019F                     _BAUDCON	set	415
  1000  0199                     _RCREG	set	409
  1001  019D                     _RCSTA	set	413
  1002  019D                     _RCSTAbits	set	413
  1003  019C                     _SPBRGH	set	412
  1004  019B                     _SPBRGL	set	411
  1005  019A                     _TXREG	set	410
  1006  019E                     _TXSTA	set	414
  1007  020C                     _WPUA	set	524
  1008  020D                     _WPUB	set	525
  1009                           
  1010                           ; #config settings
  1011  0000                     
  1012                           	psect	cinit
  1013  0029                     start_initialization:	
  1014  0029                     __initialization:	
  1015                           
  1016                           ; Clear objects allocated to COMMON
  1017  0029  3070               	movlw	low __pbssCOMMON
  1018  002A  0084               	movwf	4
  1019  002B  3000               	movlw	high __pbssCOMMON
  1020  002C  0085               	movwf	5
  1021  002D  3008               	movlw	8
  1022  002E  3181  2150  3180   	fcall	clear_ram0
  1023                           
  1024                           ; Clear objects allocated to BANK0
  1025  0031  3020               	movlw	low __pbssBANK0
  1026  0032  0084               	movwf	4
  1027  0033  3000               	movlw	high __pbssBANK0
  1028  0034  0085               	movwf	5
  1029  0035  3023               	movlw	35
  1030  0036  3181  2150         	fcall	clear_ram0
  1031  0038                     end_of_initialization:	
  1032                           ;End of C runtime variable initialization code
  1033                           
  1034  0038                     __end_of__initialization:	
  1035  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1036  0039  0020               	movlb	0
  1037  003A  3180  283C         	ljmp	_main	;jump to C main() function
  1038                           
  1039                           	psect	bssCOMMON
  1040  0070                     __pbssCOMMON:	
  1041  0070                     _eusartRxCount:	
  1042  0070                     	ds	1
  1043  0071                     _eusartRxHead:	
  1044  0071                     	ds	1
  1045  0072                     _eusartRxTail:	
  1046  0072                     	ds	1
  1047  0073                     _eusartTxBufferRemaining:	
  1048  0073                     	ds	1
  1049  0074                     _eusartTxHead:	
  1050  0074                     	ds	1
  1051  0075                     _eusartTxTail:	
  1052  0075                     	ds	1
  1053  0076                     _timer0ReloadVal:	
  1054  0076                     	ds	1
  1055  0077                     _tmrflag:	
  1056  0077                     	ds	1
  1057                           
  1058                           	psect	bssBANK0
  1059  0020                     __pbssBANK0:	
  1060  0020                     _str:	
  1061  0020                     	ds	16
  1062  0030                     _eusartRxBuffer:	
  1063  0030                     	ds	8
  1064  0038                     _eusartTxBuffer:	
  1065  0038                     	ds	8
  1066  0040                     TMR0_ISR@CountCallBack:	
  1067  0040                     	ds	2
  1068  0042                     _subdata:	
  1069  0042                     	ds	1
  1070                           
  1071                           	psect	clrtext
  1072  0150                     clear_ram0:	
  1073                           ;	Called with FSR0 containing the base address, and
  1074                           ;	WREG with the size to clear
  1075                           
  1076  0150  0064               	clrwdt	;clear the watchdog before getting into this loop
  1077  0151                     clrloop0:	
  1078  0151  0180               	clrf	0	;clear RAM location pointed to by FSR
  1079  0152  3101               	addfsr 0,1
  1080  0153  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1081  0154  2951               	goto	clrloop0	;have we reached the end yet?
  1082  0155  3400               	retlw	0	;all done for this memory range, return
  1083                           
  1084                           	psect	cstackCOMMON
  1085  0078                     __pcstackCOMMON:	
  1086  0078                     ?_OSCILLATOR_Initialize:	
  1087  0078                     ?_TMR0_Initialize:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0078                     ?_TMR0_ISR:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0078                     ?_TMR0_CallBack:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0078                     ??_TMR0_CallBack:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0078                     ?_EUSART_Initialize:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0078                     ?_EUSART_Write:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0078                     ?_EUSART_Transmit_ISR:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0078                     ??_EUSART_Transmit_ISR:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0078                     ?_EUSART_Receive_ISR:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0078                     ??_EUSART_Receive_ISR:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0078                     ?_PIN_MANAGER_Initialize:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0078                     ?_SYSTEM_Initialize:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0078                     ?_INTERRUPT_InterruptManager:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0078                     ?_main:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0078                     ?_EUSART_Read:	
  1130                           ; 0 bytes @ 0x0
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x0
  1134  0078                     	ds	1
  1135  0079                     ??_TMR0_ISR:	
  1136  0079                     ??_INTERRUPT_InterruptManager:	
  1137                           ; 0 bytes @ 0x1
  1138                           
  1139                           
  1140                           ; 0 bytes @ 0x1
  1141  0079                     	ds	1
  1142  007A                     ??_OSCILLATOR_Initialize:	
  1143  007A                     ??_TMR0_Initialize:	
  1144                           ; 0 bytes @ 0x2
  1145                           
  1146  007A                     ??_EUSART_Initialize:	
  1147                           ; 0 bytes @ 0x2
  1148                           
  1149  007A                     ??_EUSART_Read:	
  1150                           ; 0 bytes @ 0x2
  1151                           
  1152  007A                     ??_EUSART_Write:	
  1153                           ; 0 bytes @ 0x2
  1154                           
  1155  007A                     ??_PIN_MANAGER_Initialize:	
  1156                           ; 0 bytes @ 0x2
  1157                           
  1158                           
  1159                           ; 0 bytes @ 0x2
  1160  007A                     	ds	1
  1161  007B                     ??_SYSTEM_Initialize:	
  1162  007B                     EUSART_Read@readValue:	
  1163                           ; 0 bytes @ 0x3
  1164                           
  1165  007B                     EUSART_Write@txData:	
  1166                           ; 1 bytes @ 0x3
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x3
  1170  007B                     	ds	1
  1171                           
  1172                           	psect	cstackBANK0
  1173  0043                     __pcstackBANK0:	
  1174  0043                     ??_main:	
  1175                           
  1176                           ; 0 bytes @ 0x0
  1177  0043                     	ds	2
  1178                           
  1179                           	psect	maintext
  1180  003C                     __pmaintext:	
  1181 ;;
  1182 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1183 ;;
  1184 ;; *************** function _main *****************
  1185 ;; Defined at:
  1186 ;;		line 32 in file "mcc_generated_files/main.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;		None               void
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : B1F/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1200 ;;      Params:         0       0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0
  1202 ;;      Temps:          0       2       0       0       0       0
  1203 ;;      Totals:         0       2       0       0       0       0
  1204 ;;Total ram usage:        2 bytes
  1205 ;; Hardware stack levels required when called:    5
  1206 ;; This function calls:
  1207 ;;		_EUSART_Read
  1208 ;;		_EUSART_Write
  1209 ;;		_SYSTEM_Initialize
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _main
  1217  003C                     _main:	
  1218                           
  1219                           ;main.c: 34: SYSTEM_Initialize();
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1223  003C  3181  213C  3180   	fcall	_SYSTEM_Initialize
  1224                           
  1225                           ;main.c: 40: (INTCONbits.GIE = 1);
  1226  003F  178B               	bsf	11,7	;volatile
  1227                           
  1228                           ;main.c: 43: (INTCONbits.PEIE = 1);
  1229  0040  170B               	bsf	11,6	;volatile
  1230                           
  1231                           ;main.c: 51: _delay((unsigned long)((5)*(32000000/4000.0)));
  1232  0041  3034               	movlw	52
  1233  0042  0020               	movlb	0	; select bank0
  1234  0043  00C4               	movwf	??_main+1
  1235  0044  30F1               	movlw	241
  1236  0045  00C3               	movwf	??_main
  1237  0046                     u437:	
  1238  0046  0BC3               	decfsz	??_main,f
  1239  0047  2846               	goto	u437
  1240  0048  0BC4               	decfsz	??_main+1,f
  1241  0049  2846               	goto	u437
  1242  004A  3200               	nop2
  1243  004B                     l952:	
  1244                           ;main.c: 52: while (1) {
  1245                           
  1246                           
  1247                           ;main.c: 53: if (tmrflag) {
  1248  004B  0877               	movf	_tmrflag,w	;volatile
  1249  004C  1903               	btfsc	3,2
  1250  004D  2864               	goto	l958
  1251                           
  1252                           ;main.c: 54: tmrflag = 0;
  1253  004E  01F7               	clrf	_tmrflag	;volatile
  1254                           
  1255                           ;main.c: 55: EUSART_Write((RA1 << 7) | (RB3 << 6) | (RA7 << 5) | (RA0 << 4)
  1256                           ;main.c: 56: | (RB0 << 3) | (RB4 << 2) | (RA6 << 1) | (RB5 << 0));
  1257  004F  3000               	movlw	0
  1258  0050  0020               	movlb	0	; select bank0
  1259  0051  188C               	btfsc	12,1	;volatile
  1260  0052  3080               	movlw	128
  1261  0053  198D               	btfsc	13,3	;volatile
  1262  0054  3840               	iorlw	64
  1263  0055  1B8C               	btfsc	12,7	;volatile
  1264  0056  3820               	iorlw	32
  1265  0057  180C               	btfsc	12,0	;volatile
  1266  0058  3810               	iorlw	16
  1267  0059  180D               	btfsc	13,0	;volatile
  1268  005A  3808               	iorlw	8
  1269  005B  1A0D               	btfsc	13,4	;volatile
  1270  005C  3804               	iorlw	4
  1271  005D  1B0C               	btfsc	12,6	;volatile
  1272  005E  3802               	iorlw	2
  1273  005F  1A8D               	btfsc	13,5	;volatile
  1274  0060  3801               	iorlw	1
  1275  0061  3180  2073  3180   	fcall	_EUSART_Write
  1276  0064                     l958:	
  1277                           
  1278                           ;main.c: 57: }
  1279                           ;main.c: 58: if((eusartRxCount)){
  1280  0064  0870               	movf	_eusartRxCount,w	;volatile
  1281  0065  1903               	btfsc	3,2
  1282  0066  284B               	goto	l952
  1283                           
  1284                           ;main.c: 59: if(EUSART_Read()&0x80){
  1285  0067  3180  20AF  3180   	fcall	_EUSART_Read
  1286  006A  3980               	andlw	128
  1287  006B  1903               	btfsc	3,2
  1288  006C  2870               	goto	l214
  1289                           
  1290                           ;main.c: 60: do { LATA1 = 1; } while(0);
  1291  006D  0022               	movlb	2	; select bank2
  1292  006E  148C               	bsf	12,1	;volatile
  1293                           
  1294                           ;main.c: 61: }else{
  1295  006F  284B               	goto	l952
  1296  0070                     l214:	
  1297                           ;main.c: 62: do { LATA1 = 0; } while(0);
  1298                           
  1299  0070  0022               	movlb	2	; select bank2
  1300  0071  108C               	bcf	12,1	;volatile
  1301  0072  284B               	goto	l952
  1302  0073                     __end_of_main:	
  1303                           
  1304                           	psect	text1
  1305  013C                     __ptext1:	
  1306 ;; *************** function _SYSTEM_Initialize *****************
  1307 ;; Defined at:
  1308 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;		None               void
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1322 ;;      Params:         0       0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    4
  1329 ;; This function calls:
  1330 ;;		_EUSART_Initialize
  1331 ;;		_OSCILLATOR_Initialize
  1332 ;;		_PIN_MANAGER_Initialize
  1333 ;;		_TMR0_Initialize
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _SYSTEM_Initialize
  1341  013C                     _SYSTEM_Initialize:	
  1342                           
  1343                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1347  013C  3181  2148  3181   	fcall	_OSCILLATOR_Initialize
  1348                           
  1349                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1350  013F  3180  2094  3181   	fcall	_PIN_MANAGER_Initialize
  1351                           
  1352                           ;mcc.c: 73: EUSART_Initialize();
  1353  0142  3180  20FF  3181   	fcall	_EUSART_Initialize
  1354                           
  1355                           ;mcc.c: 74: TMR0_Initialize();
  1356  0145  3181  212D         	fcall	_TMR0_Initialize
  1357  0147  0008               	return
  1358  0148                     __end_of_SYSTEM_Initialize:	
  1359                           
  1360                           	psect	text2
  1361  012D                     __ptext2:	
  1362 ;; *************** function _TMR0_Initialize *****************
  1363 ;; Defined at:
  1364 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, status,2
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1378 ;;      Params:         0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0
  1380 ;;      Temps:          1       0       0       0       0       0
  1381 ;;      Totals:         1       0       0       0       0       0
  1382 ;;Total ram usage:        1 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    3
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_SYSTEM_Initialize
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _TMR0_Initialize
  1394  012D                     _TMR0_Initialize:	
  1395                           
  1396                           ;tmr0.c: 69: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1400  012D  0021               	movlb	1	; select bank1
  1401  012E  0815               	movf	21,w	;volatile
  1402  012F  39C0               	andlw	192
  1403  0130  3817               	iorlw	23
  1404  0131  0095               	movwf	21	;volatile
  1405                           
  1406                           ;tmr0.c: 72: TMR0 = 0x06;
  1407  0132  3006               	movlw	6
  1408  0133  0020               	movlb	0	; select bank0
  1409  0134  0095               	movwf	21	;volatile
  1410                           
  1411                           ;tmr0.c: 75: timer0ReloadVal = 6;
  1412  0135  3006               	movlw	6
  1413  0136  00FA               	movwf	??_TMR0_Initialize
  1414  0137  087A               	movf	??_TMR0_Initialize,w
  1415  0138  00F6               	movwf	_timer0ReloadVal	;volatile
  1416                           
  1417                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  1418  0139  110B               	bcf	11,2	;volatile
  1419                           
  1420                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  1421  013A  168B               	bsf	11,5	;volatile
  1422  013B  0008               	return
  1423  013C                     __end_of_TMR0_Initialize:	
  1424                           
  1425                           	psect	text3
  1426  0094                     __ptext3:	
  1427 ;; *************** function _PIN_MANAGER_Initialize *****************
  1428 ;; Defined at:
  1429 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;		None               void
  1436 ;; Registers used:
  1437 ;;		wreg, status,2
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1443 ;;      Params:         0       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    3
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_SYSTEM_Initialize
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _PIN_MANAGER_Initialize
  1459  0094                     _PIN_MANAGER_Initialize:	
  1460                           
  1461                           ;pin_manager.c: 51: LATA = 0x02;
  1462                           
  1463                           ;incstack = 0
  1464                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1465  0094  3002               	movlw	2
  1466  0095  0022               	movlb	2	; select bank2
  1467  0096  008C               	movwf	12	;volatile
  1468                           
  1469                           ;pin_manager.c: 52: TRISA = 0xFD;
  1470  0097  30FD               	movlw	253
  1471  0098  0021               	movlb	1	; select bank1
  1472  0099  008C               	movwf	12	;volatile
  1473                           
  1474                           ;pin_manager.c: 53: ANSELA = 0x1C;
  1475  009A  301C               	movlw	28
  1476  009B  0023               	movlb	3	; select bank3
  1477  009C  008C               	movwf	12	;volatile
  1478                           
  1479                           ;pin_manager.c: 54: WPUA = 0x00;
  1480  009D  0024               	movlb	4	; select bank4
  1481  009E  018C               	clrf	12	;volatile
  1482                           
  1483                           ;pin_manager.c: 56: LATB = 0x00;
  1484  009F  0022               	movlb	2	; select bank2
  1485  00A0  018D               	clrf	13	;volatile
  1486                           
  1487                           ;pin_manager.c: 57: TRISB = 0xFF;
  1488  00A1  30FF               	movlw	255
  1489  00A2  0021               	movlb	1	; select bank1
  1490  00A3  008D               	movwf	13	;volatile
  1491                           
  1492                           ;pin_manager.c: 58: ANSELB = 0xC0;
  1493  00A4  30C0               	movlw	192
  1494  00A5  0023               	movlb	3	; select bank3
  1495  00A6  008D               	movwf	13	;volatile
  1496                           
  1497                           ;pin_manager.c: 59: WPUB = 0x00;
  1498  00A7  0024               	movlb	4	; select bank4
  1499  00A8  018D               	clrf	13	;volatile
  1500                           
  1501                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  1502  00A9  0021               	movlb	1	; select bank1
  1503  00AA  1795               	bsf	21,7	;volatile
  1504                           
  1505                           ;pin_manager.c: 63: APFCON0 = 0x00;
  1506  00AB  0022               	movlb	2	; select bank2
  1507  00AC  019D               	clrf	29	;volatile
  1508                           
  1509                           ;pin_manager.c: 65: APFCON1 = 0x00;
  1510  00AD  019E               	clrf	30	;volatile
  1511  00AE  0008               	return
  1512  00AF                     __end_of_PIN_MANAGER_Initialize:	
  1513                           
  1514                           	psect	text4
  1515  0148                     __ptext4:	
  1516 ;; *************** function _OSCILLATOR_Initialize *****************
  1517 ;; Defined at:
  1518 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		wreg, status,2
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1532 ;;      Params:         0       0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    3
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_SYSTEM_Initialize
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _OSCILLATOR_Initialize
  1548  0148                     _OSCILLATOR_Initialize:	
  1549                           
  1550                           ;mcc.c: 79: OSCCON = 0x70;
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1554  0148  3070               	movlw	112
  1555  0149  0021               	movlb	1	; select bank1
  1556  014A  0099               	movwf	25	;volatile
  1557                           
  1558                           ;mcc.c: 81: OSCSTAT = 0x00;
  1559  014B  019A               	clrf	26	;volatile
  1560                           
  1561                           ;mcc.c: 83: OSCTUNE = 0x00;
  1562  014C  0198               	clrf	24	;volatile
  1563  014D                     l111:	
  1564                           ;mcc.c: 87: while (PLLR == 0) {
  1565                           
  1566  014D  1B1A               	btfsc	26,6	;volatile
  1567  014E  0008               	return
  1568  014F  294D               	goto	l111
  1569  0150                     __end_of_OSCILLATOR_Initialize:	
  1570                           
  1571                           	psect	text5
  1572  00FF                     __ptext5:	
  1573 ;; *************** function _EUSART_Initialize *****************
  1574 ;; Defined at:
  1575 ;;		line 76 in file "mcc_generated_files/eusart.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1589 ;;      Params:         0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0
  1591 ;;      Temps:          1       0       0       0       0       0
  1592 ;;      Totals:         1       0       0       0       0       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_SYSTEM_Initialize
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _EUSART_Initialize
  1605  00FF                     _EUSART_Initialize:	
  1606                           
  1607                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1611  00FF  0021               	movlb	1	; select bank1
  1612  0100  1291               	bcf	17,5	;volatile
  1613                           
  1614                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  1615  0101  1211               	bcf	17,4	;volatile
  1616                           
  1617                           ;eusart.c: 84: BAUDCON = 0x48;
  1618  0102  3048               	movlw	72
  1619  0103  0023               	movlb	3	; select bank3
  1620  0104  009F               	movwf	31	;volatile
  1621                           
  1622                           ;eusart.c: 87: RCSTA = 0x90;
  1623  0105  3090               	movlw	144
  1624  0106  009D               	movwf	29	;volatile
  1625                           
  1626                           ;eusart.c: 90: TXSTA = 0x26;
  1627  0107  3026               	movlw	38
  1628  0108  009E               	movwf	30	;volatile
  1629                           
  1630                           ;eusart.c: 93: SPBRGL = 0x44;
  1631  0109  3044               	movlw	68
  1632  010A  009B               	movwf	27	;volatile
  1633                           
  1634                           ;eusart.c: 96: SPBRGH = 0x00;
  1635  010B  019C               	clrf	28	;volatile
  1636                           
  1637                           ;eusart.c: 100: eusartTxHead = 0;
  1638  010C  01F4               	clrf	_eusartTxHead
  1639                           
  1640                           ;eusart.c: 101: eusartTxTail = 0;
  1641  010D  01F5               	clrf	_eusartTxTail
  1642                           
  1643                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
  1644  010E  3008               	movlw	8
  1645  010F  00FA               	movwf	??_EUSART_Initialize
  1646  0110  087A               	movf	??_EUSART_Initialize,w
  1647  0111  00F3               	movwf	_eusartTxBufferRemaining	;volatile
  1648                           
  1649                           ;eusart.c: 104: eusartRxHead = 0;
  1650  0112  01F1               	clrf	_eusartRxHead
  1651                           
  1652                           ;eusart.c: 105: eusartRxTail = 0;
  1653  0113  01F2               	clrf	_eusartRxTail
  1654                           
  1655                           ;eusart.c: 106: eusartRxCount = 0;
  1656  0114  01F0               	clrf	_eusartRxCount	;volatile
  1657                           
  1658                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  1659  0115  0021               	movlb	1	; select bank1
  1660  0116  1691               	bsf	17,5	;volatile
  1661  0117  0008               	return
  1662  0118                     __end_of_EUSART_Initialize:	
  1663                           
  1664                           	psect	text6
  1665  0073                     __ptext6:	
  1666 ;; *************** function _EUSART_Write *****************
  1667 ;; Defined at:
  1668 ;;		line 130 in file "mcc_generated_files/eusart.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  txData          1    wreg     unsigned char 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  txData          1    3[COMMON] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1682 ;;      Params:         0       0       0       0       0       0
  1683 ;;      Locals:         1       0       0       0       0       0
  1684 ;;      Temps:          1       0       0       0       0       0
  1685 ;;      Totals:         2       0       0       0       0       0
  1686 ;;Total ram usage:        2 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    3
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _EUSART_Write
  1698  0073                     _EUSART_Write:	
  1699                           
  1700                           ;incstack = 0
  1701                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1702                           ;EUSART_Write@txData stored from wreg
  1703  0073  00FB               	movwf	EUSART_Write@txData
  1704  0074                     l862:	
  1705                           ;eusart.c: 131: while (0 == eusartTxBufferRemaining) {
  1706                           
  1707  0074  0873               	movf	_eusartTxBufferRemaining,w	;volatile
  1708  0075  1903               	btfsc	3,2
  1709  0076  2874               	goto	l862
  1710                           
  1711                           ;eusart.c: 132: }
  1712                           ;eusart.c: 134: if (0 == PIE1bits.TXIE) {
  1713  0077  0021               	movlb	1	; select bank1
  1714  0078  1A11               	btfsc	17,4	;volatile
  1715  0079  287E               	goto	l50
  1716                           
  1717                           ;eusart.c: 135: TXREG = txData;
  1718  007A  087B               	movf	EUSART_Write@txData,w
  1719  007B  0023               	movlb	3	; select bank3
  1720  007C  009A               	movwf	26	;volatile
  1721                           
  1722                           ;eusart.c: 136: } else {
  1723  007D  2891               	goto	l876
  1724  007E                     l50:	
  1725                           
  1726                           ;eusart.c: 137: PIE1bits.TXIE = 0;
  1727  007E  1211               	bcf	17,4	;volatile
  1728                           
  1729                           ;eusart.c: 138: eusartTxBuffer[eusartTxHead++] = txData;
  1730  007F  087B               	movf	EUSART_Write@txData,w
  1731  0080  00FA               	movwf	??_EUSART_Write
  1732  0081  0874               	movf	_eusartTxHead,w
  1733  0082  3E38               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1734  0083  0086               	movwf	6
  1735  0084  0187               	clrf	7
  1736  0085  087A               	movf	??_EUSART_Write,w
  1737  0086  0081               	movwf	1
  1738  0087  3001               	movlw	1
  1739  0088  00FA               	movwf	??_EUSART_Write
  1740  0089  087A               	movf	??_EUSART_Write,w
  1741  008A  07F4               	addwf	_eusartTxHead,f
  1742                           
  1743                           ;eusart.c: 139: if (sizeof (eusartTxBuffer) <= eusartTxHead) {
  1744  008B  3008               	movlw	8
  1745  008C  0274               	subwf	_eusartTxHead,w
  1746  008D  1803               	btfsc	3,0
  1747                           
  1748                           ;eusart.c: 140: eusartTxHead = 0;
  1749  008E  01F4               	clrf	_eusartTxHead
  1750                           
  1751                           ;eusart.c: 141: }
  1752                           ;eusart.c: 142: eusartTxBufferRemaining--;
  1753  008F  3001               	movlw	1
  1754  0090  02F3               	subwf	_eusartTxBufferRemaining,f	;volatile
  1755  0091                     l876:	
  1756                           
  1757                           ;eusart.c: 143: }
  1758                           ;eusart.c: 144: PIE1bits.TXIE = 1;
  1759  0091  0021               	movlb	1	; select bank1
  1760  0092  1611               	bsf	17,4	;volatile
  1761  0093  0008               	return
  1762  0094                     __end_of_EUSART_Write:	
  1763                           
  1764                           	psect	text7
  1765  00AF                     __ptext7:	
  1766 ;; *************** function _EUSART_Read *****************
  1767 ;; Defined at:
  1768 ;;		line 112 in file "mcc_generated_files/eusart.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  readValue       1    3[COMMON] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      unsigned char 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1782 ;;      Params:         0       0       0       0       0       0
  1783 ;;      Locals:         1       0       0       0       0       0
  1784 ;;      Temps:          1       0       0       0       0       0
  1785 ;;      Totals:         2       0       0       0       0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    3
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _EUSART_Read
  1798  00AF                     _EUSART_Read:	
  1799                           
  1800                           ;eusart.c: 113: uint8_t readValue = 0;
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  1804  00AF  01FB               	clrf	EUSART_Read@readValue
  1805  00B0                     l842:	
  1806                           ;eusart.c: 115: while (0 == eusartRxCount) {
  1807                           
  1808  00B0  0870               	movf	_eusartRxCount,w	;volatile
  1809  00B1  1903               	btfsc	3,2
  1810  00B2  28B0               	goto	l842
  1811                           
  1812                           ;eusart.c: 116: }
  1813                           ;eusart.c: 118: PIE1bits.RCIE = 0;
  1814  00B3  0021               	movlb	1	; select bank1
  1815  00B4  1291               	bcf	17,5	;volatile
  1816                           
  1817                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
  1818  00B5  0872               	movf	_eusartRxTail,w
  1819  00B6  3E30               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  1820  00B7  0086               	movwf	6
  1821  00B8  0187               	clrf	7
  1822  00B9  0801               	movf	1,w
  1823  00BA  00FA               	movwf	??_EUSART_Read
  1824  00BB  087A               	movf	??_EUSART_Read,w
  1825  00BC  00FB               	movwf	EUSART_Read@readValue
  1826  00BD  3001               	movlw	1
  1827  00BE  00FA               	movwf	??_EUSART_Read
  1828  00BF  087A               	movf	??_EUSART_Read,w
  1829  00C0  07F2               	addwf	_eusartRxTail,f
  1830                           
  1831                           ;eusart.c: 121: if (sizeof (eusartRxBuffer) <= eusartRxTail) {
  1832  00C1  3008               	movlw	8
  1833  00C2  0272               	subwf	_eusartRxTail,w
  1834  00C3  1803               	btfsc	3,0
  1835                           
  1836                           ;eusart.c: 122: eusartRxTail = 0;
  1837  00C4  01F2               	clrf	_eusartRxTail
  1838                           
  1839                           ;eusart.c: 123: }
  1840                           ;eusart.c: 124: eusartRxCount--;
  1841  00C5  3001               	movlw	1
  1842  00C6  02F0               	subwf	_eusartRxCount,f	;volatile
  1843                           
  1844                           ;eusart.c: 125: PIE1bits.RCIE = 1;
  1845  00C7  1691               	bsf	17,5	;volatile
  1846                           
  1847                           ;eusart.c: 127: return readValue;
  1848  00C8  087B               	movf	EUSART_Read@readValue,w
  1849  00C9  0008               	return
  1850  00CA                     __end_of_EUSART_Read:	
  1851                           
  1852                           	psect	intentry
  1853  0004                     __pintentry:	
  1854 ;; *************** function _INTERRUPT_InterruptManager *****************
  1855 ;; Defined at:
  1856 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;		None               void
  1863 ;; Registers used:
  1864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1870 ;;      Params:         0       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0
  1872 ;;      Temps:          1       0       0       0       0       0
  1873 ;;      Totals:         1       0       0       0       0       0
  1874 ;;Total ram usage:        1 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    2
  1877 ;; This function calls:
  1878 ;;		_EUSART_Receive_ISR
  1879 ;;		_EUSART_Transmit_ISR
  1880 ;;		_TMR0_ISR
  1881 ;; This function is called by:
  1882 ;;		Interrupt level 1
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886  0004                     _INTERRUPT_InterruptManager:	
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  1890  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1891  0005  3180               	pagesel	$
  1892  0006  0020               	movlb	0	; select bank0
  1893  0007  087F               	movf	127,w
  1894  0008  00F9               	movwf	??_INTERRUPT_InterruptManager
  1895                           
  1896                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  1897  0009  1A8B               	btfsc	11,5	;volatile
  1898  000A  1D0B               	btfss	11,2	;volatile
  1899  000B  2810               	goto	i1l129
  1900                           
  1901                           ;interrupt_manager.c: 55: TMR0_ISR();
  1902  000C  3181  2118  3180   	fcall	_TMR0_ISR
  1903                           
  1904                           ;interrupt_manager.c: 56: } else if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1) {
  1905  000F  2822               	goto	i1l135
  1906  0010                     i1l129:	
  1907  0010  0021               	movlb	1	; select bank1
  1908  0011  1E91               	btfss	17,5	;volatile
  1909  0012  281A               	goto	i1l131
  1910  0013  0020               	movlb	0	; select bank0
  1911  0014  1E91               	btfss	17,5	;volatile
  1912  0015  281A               	goto	i1l131
  1913                           
  1914                           ;interrupt_manager.c: 57: EUSART_Receive_ISR();
  1915  0016  3180  20E5  3180   	fcall	_EUSART_Receive_ISR
  1916                           
  1917                           ;interrupt_manager.c: 58: } else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1) {
  1918  0019  2822               	goto	i1l135
  1919  001A                     i1l131:	
  1920  001A  0021               	movlb	1	; select bank1
  1921  001B  1E11               	btfss	17,4	;volatile
  1922  001C  2822               	goto	i1l135
  1923  001D  0020               	movlb	0	; select bank0
  1924  001E  1E11               	btfss	17,4	;volatile
  1925  001F  2822               	goto	i1l135
  1926                           
  1927                           ;interrupt_manager.c: 59: EUSART_Transmit_ISR();
  1928  0020  3180  20CA         	fcall	_EUSART_Transmit_ISR
  1929  0022                     i1l135:	
  1930                           ;interrupt_manager.c: 60: } else {
  1931                           
  1932  0022  0879               	movf	??_INTERRUPT_InterruptManager,w
  1933  0023  0020               	movlb	0	; select bank0
  1934  0024  00FF               	movwf	127
  1935  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1936  0026  0009               	retfie
  1937  0027                     __end_of_INTERRUPT_InterruptManager:	
  1938                           
  1939                           	psect	text9
  1940  0118                     __ptext9:	
  1941 ;; *************** function _TMR0_ISR *****************
  1942 ;; Defined at:
  1943 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, pclath, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1957 ;;      Params:         0       0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    1
  1964 ;; This function calls:
  1965 ;;		_TMR0_CallBack
  1966 ;; This function is called by:
  1967 ;;		_INTERRUPT_InterruptManager
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _TMR0_ISR
  1973  0118                     _TMR0_ISR:	
  1974                           
  1975                           ;tmr0.c: 103: static volatile unsigned int CountCallBack = 0;
  1976                           ;tmr0.c: 106: INTCONbits.TMR0IF = 0;
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  1980  0118  110B               	bcf	11,2	;volatile
  1981                           
  1982                           ;tmr0.c: 108: TMR0 = timer0ReloadVal;
  1983  0119  0876               	movf	_timer0ReloadVal,w	;volatile
  1984  011A  0020               	movlb	0	; select bank0
  1985  011B  0095               	movwf	21	;volatile
  1986                           
  1987                           ;tmr0.c: 111: if (++CountCallBack >= 5) {
  1988  011C  3001               	movlw	1
  1989  011D  07C0               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  1990  011E  3000               	movlw	0
  1991  011F  3DC1               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  1992  0120  3000               	movlw	0
  1993  0121  0241               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  1994  0122  3005               	movlw	5
  1995  0123  1903               	skipnz
  1996  0124  0240               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  1997  0125  1C03               	skipc
  1998  0126  0008               	return
  1999                           
  2000                           ;tmr0.c: 113: TMR0_CallBack();
  2001  0127  3181  2156         	fcall	_TMR0_CallBack
  2002                           
  2003                           ;tmr0.c: 116: CountCallBack = 0;
  2004  0129  0020               	movlb	0	; select bank0
  2005  012A  01C0               	clrf	TMR0_ISR@CountCallBack	;volatile
  2006  012B  01C1               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  2007  012C  0008               	return
  2008  012D                     __end_of_TMR0_ISR:	
  2009                           
  2010                           	psect	text10
  2011  0156                     __ptext10:	
  2012 ;; *************** function _TMR0_CallBack *****************
  2013 ;; Defined at:
  2014 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2028 ;;      Params:         0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0
  2030 ;;      Temps:          1       0       0       0       0       0
  2031 ;;      Totals:         1       0       0       0       0       0
  2032 ;;Total ram usage:        1 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_TMR0_ISR
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _TMR0_CallBack
  2043  0156                     _TMR0_CallBack:	
  2044                           
  2045                           ;tmr0.c: 125: tmrflag = 1;
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _TMR0_CallBack: [wreg]
  2049  0156  3001               	movlw	1
  2050  0157  00F8               	movwf	??_TMR0_CallBack
  2051  0158  0878               	movf	??_TMR0_CallBack,w
  2052  0159  00F7               	movwf	_tmrflag	;volatile
  2053  015A  0008               	return
  2054  015B                     __end_of_TMR0_CallBack:	
  2055                           
  2056                           	psect	text11
  2057  00CA                     __ptext11:	
  2058 ;; *************** function _EUSART_Transmit_ISR *****************
  2059 ;; Defined at:
  2060 ;;		line 147 in file "mcc_generated_files/eusart.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;		None               void
  2067 ;; Registers used:
  2068 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2074 ;;      Params:         0       0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0
  2076 ;;      Temps:          1       0       0       0       0       0
  2077 ;;      Totals:         1       0       0       0       0       0
  2078 ;;Total ram usage:        1 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_INTERRUPT_InterruptManager
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _EUSART_Transmit_ISR
  2089  00CA                     _EUSART_Transmit_ISR:	
  2090                           
  2091                           ;eusart.c: 150: if (sizeof (eusartTxBuffer) > eusartTxBufferRemaining) {
  2092                           
  2093                           ;incstack = 0
  2094                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2095  00CA  3008               	movlw	8
  2096  00CB  0273               	subwf	_eusartTxBufferRemaining,w	;volatile
  2097  00CC  1803               	skipnc
  2098  00CD  28E2               	goto	i1l56
  2099                           
  2100                           ;eusart.c: 151: TXREG = eusartTxBuffer[eusartTxTail++];
  2101  00CE  0875               	movf	_eusartTxTail,w
  2102  00CF  3E38               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2103  00D0  0086               	movwf	6
  2104  00D1  0187               	clrf	7
  2105  00D2  0801               	movf	1,w
  2106  00D3  0023               	movlb	3	; select bank3
  2107  00D4  009A               	movwf	26	;volatile
  2108  00D5  3001               	movlw	1
  2109  00D6  00F8               	movwf	??_EUSART_Transmit_ISR
  2110  00D7  0878               	movf	??_EUSART_Transmit_ISR,w
  2111  00D8  07F5               	addwf	_eusartTxTail,f
  2112                           
  2113                           ;eusart.c: 152: if (sizeof (eusartTxBuffer) <= eusartTxTail) {
  2114  00D9  3008               	movlw	8
  2115  00DA  0275               	subwf	_eusartTxTail,w
  2116  00DB  1803               	btfsc	3,0
  2117                           
  2118                           ;eusart.c: 153: eusartTxTail = 0;
  2119  00DC  01F5               	clrf	_eusartTxTail
  2120                           
  2121                           ;eusart.c: 154: }
  2122                           ;eusart.c: 155: eusartTxBufferRemaining++;
  2123  00DD  3001               	movlw	1
  2124  00DE  00F8               	movwf	??_EUSART_Transmit_ISR
  2125  00DF  0878               	movf	??_EUSART_Transmit_ISR,w
  2126  00E0  07F3               	addwf	_eusartTxBufferRemaining,f	;volatile
  2127                           
  2128                           ;eusart.c: 156: } else {
  2129  00E1  0008               	return
  2130  00E2                     i1l56:	
  2131                           
  2132                           ;eusart.c: 157: PIE1bits.TXIE = 0;
  2133  00E2  0021               	movlb	1	; select bank1
  2134  00E3  1211               	bcf	17,4	;volatile
  2135  00E4  0008               	return
  2136  00E5                     __end_of_EUSART_Transmit_ISR:	
  2137                           
  2138                           	psect	text12
  2139  00E5                     __ptext12:	
  2140 ;; *************** function _EUSART_Receive_ISR *****************
  2141 ;; Defined at:
  2142 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;		None               void
  2149 ;; Registers used:
  2150 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2156 ;;      Params:         0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0
  2158 ;;      Temps:          1       0       0       0       0       0
  2159 ;;      Totals:         1       0       0       0       0       0
  2160 ;;Total ram usage:        1 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_INTERRUPT_InterruptManager
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _EUSART_Receive_ISR
  2171  00E5                     _EUSART_Receive_ISR:	
  2172                           
  2173                           ;eusart.c: 162: if (1 == RCSTAbits.OERR) {
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2177  00E5  0023               	movlb	3	; select bank3
  2178  00E6  1C9D               	btfss	29,1	;volatile
  2179  00E7  28EA               	goto	i1l894
  2180                           
  2181                           ;eusart.c: 165: RCSTAbits.CREN = 0;
  2182  00E8  121D               	bcf	29,4	;volatile
  2183                           
  2184                           ;eusart.c: 166: RCSTAbits.CREN = 1;
  2185  00E9  161D               	bsf	29,4	;volatile
  2186  00EA                     i1l894:	
  2187                           
  2188                           ;eusart.c: 167: }
  2189                           ;eusart.c: 170: eusartRxBuffer[eusartRxHead++] = RCREG;
  2190  00EA  0819               	movf	25,w	;volatile
  2191  00EB  00F8               	movwf	??_EUSART_Receive_ISR
  2192  00EC  0871               	movf	_eusartRxHead,w
  2193  00ED  3E30               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2194  00EE  0086               	movwf	6
  2195  00EF  0187               	clrf	7
  2196  00F0  0878               	movf	??_EUSART_Receive_ISR,w
  2197  00F1  0081               	movwf	1
  2198  00F2  3001               	movlw	1
  2199  00F3  00F8               	movwf	??_EUSART_Receive_ISR
  2200  00F4  0878               	movf	??_EUSART_Receive_ISR,w
  2201  00F5  07F1               	addwf	_eusartRxHead,f
  2202                           
  2203                           ;eusart.c: 171: if (sizeof (eusartRxBuffer) <= eusartRxHead) {
  2204  00F6  3008               	movlw	8
  2205  00F7  0271               	subwf	_eusartRxHead,w
  2206  00F8  1803               	btfsc	3,0
  2207                           
  2208                           ;eusart.c: 172: eusartRxHead = 0;
  2209  00F9  01F1               	clrf	_eusartRxHead
  2210                           
  2211                           ;eusart.c: 173: }
  2212                           ;eusart.c: 174: eusartRxCount++;
  2213  00FA  3001               	movlw	1
  2214  00FB  00F8               	movwf	??_EUSART_Receive_ISR
  2215  00FC  0878               	movf	??_EUSART_Receive_ISR,w
  2216  00FD  07F0               	addwf	_eusartRxCount,f	;volatile
  2217  00FE  0008               	return
  2218  00FF                     __end_of_EUSART_Receive_ISR:	
  2219  007E                     btemp	set	126	;btemp
  2220  007E                     int$flags	set	126
  2221  007E                     wtemp	set	126
  2222  007E                     wtemp0	set	126
  2223  0080                     wtemp1	set	128
  2224  0082                     wtemp2	set	130
  2225  0084                     wtemp3	set	132
  2226  0086                     wtemp4	set	134
  2227  0088                     wtemp5	set	136
  2228  007F                     wtemp6	set	127
  2229  007E                     ttemp	set	126
  2230  007E                     ttemp0	set	126
  2231  0081                     ttemp1	set	129
  2232  0084                     ttemp2	set	132
  2233  0087                     ttemp3	set	135
  2234  007F                     ttemp4	set	127
  2235  007E                     ltemp	set	126
  2236  007E                     ltemp0	set	126
  2237  0082                     ltemp1	set	130
  2238  0086                     ltemp2	set	134
  2239  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      2      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EUSART_Read
    _main->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      68
                                              0 BANK0      2     2      0
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (5) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      25       6       46.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      31      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 19:23:15 2015

                        __CFG_CP$OFF 0000                                   l50 007E  
                    _timer0ReloadVal 0076                                  l111 014D  
                                l214 0070                                  l842 00B0  
                                l862 0074                                  l952 004B  
                                l876 0091                                  l958 0064  
                                _RA0 0060                                  _RA1 0061  
                                _RB0 0068                                  _RB3 006B  
                                _RB4 006C                                  _RA6 0066  
                                _RB5 006D                                  _RA7 0067  
                       __CFG_CPD$OFF 0000                                  u437 0046  
                                _str 0020                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       ?_EUSART_Read 0078                         __CFG_LVP$OFF 0000  
                               _LATA 010C                                 _LATB 010D  
                               i1l56 00E2                                 _PLLR 04D6  
                               _TMR0 0015                                 _WPUA 020C  
                               _WPUB 020D                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 003C  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0027  
                               ttemp 007E                                 wtemp 007E  
            __end_of_TMR0_Initialize 013C                        __CFG_PLLEN$ON 0000  
                      ?_EUSART_Write 0078       __size_of_OSCILLATOR_Initialize 0008  
      __end_of_OSCILLATOR_Initialize 0150                                ?_main 0078  
                      __CFG_WDTE$OFF 0000                                _LATA1 0861  
                              i1l131 001A                                i1l135 0022  
                              i1l129 0010                                i1l894 00EA  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISB 008D  
                              _TXREG 019A                                _TXSTA 019E  
                   __end_of_TMR0_ISR 012D                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                     __CFG_MCLRE$OFF 0000                      __initialization 0029  
                       __end_of_main 0073                       ??_EUSART_Write 007A  
        ?_INTERRUPT_InterruptManager 0078                               ??_main 0043  
                             _ANSELA 018C                               _ANSELB 018D  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                  _EUSART_Transmit_ISR 00CA  
                   ?_TMR0_Initialize 0078                __end_of_TMR0_CallBack 015B  
               ?_EUSART_Transmit_ISR 0078                 __size_of_EUSART_Read 001B  
                  _SYSTEM_Initialize 013C              __end_of__initialization 0038  
                 ?_SYSTEM_Initialize 0078                       __pcstackCOMMON 0078  
                ??_SYSTEM_Initialize 007B                            ?_TMR0_ISR 0078  
                     _OPTION_REGbits 0095                TMR0_ISR@CountCallBack 0040  
          __end_of_SYSTEM_Initialize 0148                ??_EUSART_Transmit_ISR 0078  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 0094  
        __size_of_EUSART_Receive_ISR 001A                           __pmaintext 003C  
                         ??_TMR0_ISR 0079                           __pintentry 0004  
                            _BAUDCON 019F                              _APFCON0 011D  
                            _APFCON1 011E                        _eusartRxCount 0070  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            __ptext1 013C                              __ptext2 012D  
                            __ptext3 0094                              __ptext4 0148  
                            __ptext5 00FF                              __ptext6 0073  
                            __ptext7 00AF                              __ptext9 0118  
              _OSCILLATOR_Initialize 0148             ??_PIN_MANAGER_Initialize 007A  
                            _subdata 0042                              _tmrflag 0077  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0151  
               end_of_initialization 0038                    _EUSART_Initialize 00FF  
                 ?_EUSART_Initialize 0078                            _RCSTAbits 019D  
                ??_EUSART_Initialize 007A                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0021            __end_of_EUSART_Initialize 0118  
                       _EUSART_Write 0073                    __size_of_TMR0_ISR 0015  
             ?_OSCILLATOR_Initialize 0078                  start_initialization 0029  
           __size_of_TMR0_Initialize 000F      __size_of_PIN_MANAGER_Initialize 001B  
                      ??_EUSART_Read 007A               __size_of_TMR0_CallBack 0005  
        __end_of_EUSART_Transmit_ISR 00E5                          __pbssCOMMON 0070  
                          ___latbits 0001                        __pcstackBANK0 0043  
         __end_of_EUSART_Receive_ISR 00FF           __size_of_EUSART_Initialize 0019  
                __end_of_EUSART_Read 00CA               _PIN_MANAGER_Initialize 0094  
               EUSART_Read@readValue 007B                         _eusartRxHead 0071  
                       _eusartTxHead 0074                         _eusartRxTail 0072  
                       _eusartTxTail 0075         ??_INTERRUPT_InterruptManager 0079  
            _eusartTxBufferRemaining 0073                        _TMR0_CallBack 0156  
                     _eusartRxBuffer 0030                    ??_TMR0_Initialize 007A  
                     _eusartTxBuffer 0038                            clear_ram0 0150  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 0023  
                           _PIR1bits 0011                             _TMR0_ISR 0118  
                     ?_TMR0_CallBack 0078                          _EUSART_Read 00AF  
            ??_OSCILLATOR_Initialize 007A                             __ptext10 0156  
                           __ptext11 00CA                             __ptext12 00E5  
                      __size_of_main 0037                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0027           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B                      ??_TMR0_CallBack 0078  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0078  
                  __CFG_CLKOUTEN$OFF 0000                   _EUSART_Receive_ISR 00E5  
                         _OPTION_REG 0095                  ?_EUSART_Receive_ISR 0078  
                    _TMR0_Initialize 012D                   EUSART_Write@txData 007B  
       __size_of_EUSART_Transmit_ISR 001B       __end_of_PIN_MANAGER_Initialize 00AF  
               ??_EUSART_Receive_ISR 0078  
