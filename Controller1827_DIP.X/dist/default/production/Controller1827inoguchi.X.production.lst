

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Aug 01 10:25:10 2022

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.42
    27                           ; Generated 13/04/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1827 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0219                     	;# 
   161  021A                     	;# 
   162  021B                     	;# 
   163  021C                     	;# 
   164  021D                     	;# 
   165  021E                     	;# 
   166  021F                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0294                     	;# 
   172  0295                     	;# 
   173  0295                     	;# 
   174  0296                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  029B                     	;# 
   180  029C                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  029E                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  0394                     	;# 
   194  0395                     	;# 
   195  0396                     	;# 
   196  039A                     	;# 
   197  039C                     	;# 
   198  039D                     	;# 
   199  039E                     	;# 
   200  039F                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009B                     	;# 
   261  009C                     	;# 
   262  009D                     	;# 
   263  009E                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  0111                     	;# 
   267  0112                     	;# 
   268  0113                     	;# 
   269  0114                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0117                     	;# 
   273  0118                     	;# 
   274  0119                     	;# 
   275  011A                     	;# 
   276  011B                     	;# 
   277  011D                     	;# 
   278  011E                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0191                     	;# 
   282  0191                     	;# 
   283  0192                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0194                     	;# 
   288  0195                     	;# 
   289  0196                     	;# 
   290  0199                     	;# 
   291  019A                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019C                     	;# 
   297  019C                     	;# 
   298  019D                     	;# 
   299  019E                     	;# 
   300  019F                     	;# 
   301  020C                     	;# 
   302  020D                     	;# 
   303  0211                     	;# 
   304  0211                     	;# 
   305  0212                     	;# 
   306  0212                     	;# 
   307  0213                     	;# 
   308  0213                     	;# 
   309  0214                     	;# 
   310  0214                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0216                     	;# 
   315  0216                     	;# 
   316  0217                     	;# 
   317  0217                     	;# 
   318  0219                     	;# 
   319  021A                     	;# 
   320  021B                     	;# 
   321  021C                     	;# 
   322  021D                     	;# 
   323  021E                     	;# 
   324  021F                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0298                     	;# 
   334  0298                     	;# 
   335  0299                     	;# 
   336  029A                     	;# 
   337  029B                     	;# 
   338  029C                     	;# 
   339  029C                     	;# 
   340  029D                     	;# 
   341  029E                     	;# 
   342  029E                     	;# 
   343  0311                     	;# 
   344  0311                     	;# 
   345  0312                     	;# 
   346  0313                     	;# 
   347  0318                     	;# 
   348  0318                     	;# 
   349  0319                     	;# 
   350  031A                     	;# 
   351  0394                     	;# 
   352  0395                     	;# 
   353  0396                     	;# 
   354  039A                     	;# 
   355  039C                     	;# 
   356  039D                     	;# 
   357  039E                     	;# 
   358  039F                     	;# 
   359  0415                     	;# 
   360  0416                     	;# 
   361  0417                     	;# 
   362  041C                     	;# 
   363  041D                     	;# 
   364  041E                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE9                     	;# 
   371  0FEA                     	;# 
   372  0FEB                     	;# 
   373  0FED                     	;# 
   374  0FEE                     	;# 
   375  0FEF                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0094                     	;# 
   411  0095                     	;# 
   412  0096                     	;# 
   413  0097                     	;# 
   414  0098                     	;# 
   415  0099                     	;# 
   416  009A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  010C                     	;# 
   423  010D                     	;# 
   424  0111                     	;# 
   425  0112                     	;# 
   426  0113                     	;# 
   427  0114                     	;# 
   428  0115                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  0118                     	;# 
   432  0119                     	;# 
   433  011A                     	;# 
   434  011B                     	;# 
   435  011D                     	;# 
   436  011E                     	;# 
   437  018C                     	;# 
   438  018D                     	;# 
   439  0191                     	;# 
   440  0191                     	;# 
   441  0192                     	;# 
   442  0193                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0194                     	;# 
   446  0195                     	;# 
   447  0196                     	;# 
   448  0199                     	;# 
   449  019A                     	;# 
   450  019B                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019C                     	;# 
   455  019C                     	;# 
   456  019D                     	;# 
   457  019E                     	;# 
   458  019F                     	;# 
   459  020C                     	;# 
   460  020D                     	;# 
   461  0211                     	;# 
   462  0211                     	;# 
   463  0212                     	;# 
   464  0212                     	;# 
   465  0213                     	;# 
   466  0213                     	;# 
   467  0214                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0216                     	;# 
   473  0216                     	;# 
   474  0217                     	;# 
   475  0217                     	;# 
   476  0219                     	;# 
   477  021A                     	;# 
   478  021B                     	;# 
   479  021C                     	;# 
   480  021D                     	;# 
   481  021E                     	;# 
   482  021F                     	;# 
   483  0291                     	;# 
   484  0291                     	;# 
   485  0292                     	;# 
   486  0293                     	;# 
   487  0294                     	;# 
   488  0295                     	;# 
   489  0295                     	;# 
   490  0296                     	;# 
   491  0298                     	;# 
   492  0298                     	;# 
   493  0299                     	;# 
   494  029A                     	;# 
   495  029B                     	;# 
   496  029C                     	;# 
   497  029C                     	;# 
   498  029D                     	;# 
   499  029E                     	;# 
   500  029E                     	;# 
   501  0311                     	;# 
   502  0311                     	;# 
   503  0312                     	;# 
   504  0313                     	;# 
   505  0318                     	;# 
   506  0318                     	;# 
   507  0319                     	;# 
   508  031A                     	;# 
   509  0394                     	;# 
   510  0395                     	;# 
   511  0396                     	;# 
   512  039A                     	;# 
   513  039C                     	;# 
   514  039D                     	;# 
   515  039E                     	;# 
   516  039F                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0FE4                     	;# 
   524  0FE5                     	;# 
   525  0FE6                     	;# 
   526  0FE7                     	;# 
   527  0FE8                     	;# 
   528  0FE9                     	;# 
   529  0FEA                     	;# 
   530  0FEB                     	;# 
   531  0FED                     	;# 
   532  0FEE                     	;# 
   533  0FEF                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  0011                     	;# 
   549  0012                     	;# 
   550  0013                     	;# 
   551  0014                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0094                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0098                     	;# 
   573  0099                     	;# 
   574  009A                     	;# 
   575  009B                     	;# 
   576  009B                     	;# 
   577  009C                     	;# 
   578  009D                     	;# 
   579  009E                     	;# 
   580  010C                     	;# 
   581  010D                     	;# 
   582  0111                     	;# 
   583  0112                     	;# 
   584  0113                     	;# 
   585  0114                     	;# 
   586  0115                     	;# 
   587  0116                     	;# 
   588  0117                     	;# 
   589  0118                     	;# 
   590  0119                     	;# 
   591  011A                     	;# 
   592  011B                     	;# 
   593  011D                     	;# 
   594  011E                     	;# 
   595  018C                     	;# 
   596  018D                     	;# 
   597  0191                     	;# 
   598  0191                     	;# 
   599  0192                     	;# 
   600  0193                     	;# 
   601  0193                     	;# 
   602  0193                     	;# 
   603  0194                     	;# 
   604  0195                     	;# 
   605  0196                     	;# 
   606  0199                     	;# 
   607  019A                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019F                     	;# 
   617  020C                     	;# 
   618  020D                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  0219                     	;# 
   635  021A                     	;# 
   636  021B                     	;# 
   637  021C                     	;# 
   638  021D                     	;# 
   639  021E                     	;# 
   640  021F                     	;# 
   641  0291                     	;# 
   642  0291                     	;# 
   643  0292                     	;# 
   644  0293                     	;# 
   645  0294                     	;# 
   646  0295                     	;# 
   647  0295                     	;# 
   648  0296                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  029B                     	;# 
   654  029C                     	;# 
   655  029C                     	;# 
   656  029D                     	;# 
   657  029E                     	;# 
   658  029E                     	;# 
   659  0311                     	;# 
   660  0311                     	;# 
   661  0312                     	;# 
   662  0313                     	;# 
   663  0318                     	;# 
   664  0318                     	;# 
   665  0319                     	;# 
   666  031A                     	;# 
   667  0394                     	;# 
   668  0395                     	;# 
   669  0396                     	;# 
   670  039A                     	;# 
   671  039C                     	;# 
   672  039D                     	;# 
   673  039E                     	;# 
   674  039F                     	;# 
   675  0415                     	;# 
   676  0416                     	;# 
   677  0417                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  0FE4                     	;# 
   682  0FE5                     	;# 
   683  0FE6                     	;# 
   684  0FE7                     	;# 
   685  0FE8                     	;# 
   686  0FE9                     	;# 
   687  0FEA                     	;# 
   688  0FEB                     	;# 
   689  0FED                     	;# 
   690  0FEE                     	;# 
   691  0FEF                     	;# 
   692  0000                     	;# 
   693  0001                     	;# 
   694  0002                     	;# 
   695  0003                     	;# 
   696  0004                     	;# 
   697  0005                     	;# 
   698  0006                     	;# 
   699  0007                     	;# 
   700  0008                     	;# 
   701  0009                     	;# 
   702  000A                     	;# 
   703  000B                     	;# 
   704  000C                     	;# 
   705  000D                     	;# 
   706  0011                     	;# 
   707  0012                     	;# 
   708  0013                     	;# 
   709  0014                     	;# 
   710  0015                     	;# 
   711  0016                     	;# 
   712  0016                     	;# 
   713  0017                     	;# 
   714  0018                     	;# 
   715  0019                     	;# 
   716  001A                     	;# 
   717  001B                     	;# 
   718  001C                     	;# 
   719  001E                     	;# 
   720  001F                     	;# 
   721  008C                     	;# 
   722  008D                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0094                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  010C                     	;# 
   739  010D                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0113                     	;# 
   743  0114                     	;# 
   744  0115                     	;# 
   745  0116                     	;# 
   746  0117                     	;# 
   747  0118                     	;# 
   748  0119                     	;# 
   749  011A                     	;# 
   750  011B                     	;# 
   751  011D                     	;# 
   752  011E                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  0191                     	;# 
   756  0191                     	;# 
   757  0192                     	;# 
   758  0193                     	;# 
   759  0193                     	;# 
   760  0193                     	;# 
   761  0194                     	;# 
   762  0195                     	;# 
   763  0196                     	;# 
   764  0199                     	;# 
   765  019A                     	;# 
   766  019B                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  019C                     	;# 
   772  019D                     	;# 
   773  019E                     	;# 
   774  019F                     	;# 
   775  020C                     	;# 
   776  020D                     	;# 
   777  0211                     	;# 
   778  0211                     	;# 
   779  0212                     	;# 
   780  0212                     	;# 
   781  0213                     	;# 
   782  0213                     	;# 
   783  0214                     	;# 
   784  0214                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  0219                     	;# 
   793  021A                     	;# 
   794  021B                     	;# 
   795  021C                     	;# 
   796  021D                     	;# 
   797  021E                     	;# 
   798  021F                     	;# 
   799  0291                     	;# 
   800  0291                     	;# 
   801  0292                     	;# 
   802  0293                     	;# 
   803  0294                     	;# 
   804  0295                     	;# 
   805  0295                     	;# 
   806  0296                     	;# 
   807  0298                     	;# 
   808  0298                     	;# 
   809  0299                     	;# 
   810  029A                     	;# 
   811  029B                     	;# 
   812  029C                     	;# 
   813  029C                     	;# 
   814  029D                     	;# 
   815  029E                     	;# 
   816  029E                     	;# 
   817  0311                     	;# 
   818  0311                     	;# 
   819  0312                     	;# 
   820  0313                     	;# 
   821  0318                     	;# 
   822  0318                     	;# 
   823  0319                     	;# 
   824  031A                     	;# 
   825  0394                     	;# 
   826  0395                     	;# 
   827  0396                     	;# 
   828  039A                     	;# 
   829  039C                     	;# 
   830  039D                     	;# 
   831  039E                     	;# 
   832  039F                     	;# 
   833  0415                     	;# 
   834  0416                     	;# 
   835  0417                     	;# 
   836  041C                     	;# 
   837  041D                     	;# 
   838  041E                     	;# 
   839  0FE4                     	;# 
   840  0FE5                     	;# 
   841  0FE6                     	;# 
   842  0FE7                     	;# 
   843  0FE8                     	;# 
   844  0FE9                     	;# 
   845  0FEA                     	;# 
   846  0FEB                     	;# 
   847  0FED                     	;# 
   848  0FEE                     	;# 
   849  0FEF                     	;# 
   850  0000                     	;# 
   851  0001                     	;# 
   852  0002                     	;# 
   853  0003                     	;# 
   854  0004                     	;# 
   855  0005                     	;# 
   856  0006                     	;# 
   857  0007                     	;# 
   858  0008                     	;# 
   859  0009                     	;# 
   860  000A                     	;# 
   861  000B                     	;# 
   862  000C                     	;# 
   863  000D                     	;# 
   864  0011                     	;# 
   865  0012                     	;# 
   866  0013                     	;# 
   867  0014                     	;# 
   868  0015                     	;# 
   869  0016                     	;# 
   870  0016                     	;# 
   871  0017                     	;# 
   872  0018                     	;# 
   873  0019                     	;# 
   874  001A                     	;# 
   875  001B                     	;# 
   876  001C                     	;# 
   877  001E                     	;# 
   878  001F                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  0091                     	;# 
   882  0092                     	;# 
   883  0093                     	;# 
   884  0094                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0097                     	;# 
   888  0098                     	;# 
   889  0099                     	;# 
   890  009A                     	;# 
   891  009B                     	;# 
   892  009B                     	;# 
   893  009C                     	;# 
   894  009D                     	;# 
   895  009E                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  0111                     	;# 
   899  0112                     	;# 
   900  0113                     	;# 
   901  0114                     	;# 
   902  0115                     	;# 
   903  0116                     	;# 
   904  0117                     	;# 
   905  0118                     	;# 
   906  0119                     	;# 
   907  011A                     	;# 
   908  011B                     	;# 
   909  011D                     	;# 
   910  011E                     	;# 
   911  018C                     	;# 
   912  018D                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0193                     	;# 
   919  0194                     	;# 
   920  0195                     	;# 
   921  0196                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020C                     	;# 
   934  020D                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  0219                     	;# 
   951  021A                     	;# 
   952  021B                     	;# 
   953  021C                     	;# 
   954  021D                     	;# 
   955  021E                     	;# 
   956  021F                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0298                     	;# 
   966  0298                     	;# 
   967  0299                     	;# 
   968  029A                     	;# 
   969  029B                     	;# 
   970  029C                     	;# 
   971  029C                     	;# 
   972  029D                     	;# 
   973  029E                     	;# 
   974  029E                     	;# 
   975  0311                     	;# 
   976  0311                     	;# 
   977  0312                     	;# 
   978  0313                     	;# 
   979  0318                     	;# 
   980  0318                     	;# 
   981  0319                     	;# 
   982  031A                     	;# 
   983  0394                     	;# 
   984  0395                     	;# 
   985  0396                     	;# 
   986  039A                     	;# 
   987  039C                     	;# 
   988  039D                     	;# 
   989  039E                     	;# 
   990  039F                     	;# 
   991  0415                     	;# 
   992  0416                     	;# 
   993  0417                     	;# 
   994  041C                     	;# 
   995  041D                     	;# 
   996  041E                     	;# 
   997  0FE4                     	;# 
   998  0FE5                     	;# 
   999  0FE6                     	;# 
  1000  0FE7                     	;# 
  1001  0FE8                     	;# 
  1002  0FE9                     	;# 
  1003  0FEA                     	;# 
  1004  0FEB                     	;# 
  1005  0FED                     	;# 
  1006  0FEE                     	;# 
  1007  0FEF                     	;# 
  1008  000B                     _INTCONbits	set	11
  1009  0019                     _T1GCONbits	set	25
  1010  0018                     _T1CONbits	set	24
  1011  0016                     _TMR1L	set	22
  1012  0017                     _TMR1H	set	23
  1013  0019                     _T1GCON	set	25
  1014  0018                     _T1CON	set	24
  1015  0011                     _PIR1bits	set	17
  1016  0063                     _RA3	set	99
  1017  0067                     _RA7	set	103
  1018  0064                     _RA4	set	100
  1019  0062                     _RA2	set	98
  1020  0066                     _RA6	set	102
  1021  0068                     _RB0	set	104
  1022  006C                     _RB4	set	108
  1023  006D                     _RB5	set	109
  1024  0098                     _OSCTUNE	set	152
  1025  009A                     _OSCSTAT	set	154
  1026  0099                     _OSCCON	set	153
  1027  0095                     _OPTION_REGbits	set	149
  1028  008D                     _TRISB	set	141
  1029  008C                     _TRISA	set	140
  1030  0091                     _PIE1bits	set	145
  1031  04D6                     _PLLR	set	1238
  1032  011E                     _APFCON1	set	286
  1033  011D                     _APFCON0	set	285
  1034  010D                     _LATB	set	269
  1035  010C                     _LATA	set	268
  1036  086C                     _LATB4	set	2156
  1037  018D                     _ANSELB	set	397
  1038  018C                     _ANSELA	set	396
  1039  0199                     _RCREG	set	409
  1040  019D                     _RCSTAbits	set	413
  1041  019A                     _TXREG	set	410
  1042  019C                     _SPBRGH	set	412
  1043  019B                     _SPBRGL	set	411
  1044  019E                     _TXSTA	set	414
  1045  019D                     _RCSTA	set	413
  1046  019F                     _BAUDCON	set	415
  1047  020D                     _WPUB	set	525
  1048  020C                     _WPUA	set	524
  1049                           
  1050                           ; #config settings
  1051  0000                     
  1052                           	psect	cinit
  1053  002C                     start_initialization:	
  1054  002C                     __initialization:	
  1055                           
  1056                           ; Clear objects allocated to COMMON
  1057  002C  3070               	movlw	low __pbssCOMMON
  1058  002D  0084               	movwf	4
  1059  002E  3000               	movlw	high __pbssCOMMON
  1060  002F  0085               	movwf	5
  1061  0030  3009               	movlw	9
  1062  0031  3181  2168  3180   	fcall	clear_ram0
  1063                           
  1064                           ; Clear objects allocated to BANK0
  1065  0034  3020               	movlw	low __pbssBANK0
  1066  0035  0084               	movwf	4
  1067  0036  3000               	movlw	high __pbssBANK0
  1068  0037  0085               	movwf	5
  1069  0038  3023               	movlw	35
  1070  0039  3181  2168         	fcall	clear_ram0
  1071  003B                     end_of_initialization:	
  1072                           ;End of C runtime variable initialization code
  1073                           
  1074  003B                     __end_of__initialization:	
  1075  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1076  003C  0020               	movlb	0
  1077  003D  3180  283F         	ljmp	_main	;jump to C main() function
  1078                           
  1079                           	psect	bssCOMMON
  1080  0070                     __pbssCOMMON:	
  1081  0070                     _timer1ReloadVal:	
  1082  0070                     	ds	2
  1083  0072                     _tmrflag:	
  1084  0072                     	ds	1
  1085  0073                     _eusartRxCount:	
  1086  0073                     	ds	1
  1087  0074                     _eusartRxTail:	
  1088  0074                     	ds	1
  1089  0075                     _eusartRxHead:	
  1090  0075                     	ds	1
  1091  0076                     _eusartTxBufferRemaining:	
  1092  0076                     	ds	1
  1093  0077                     _eusartTxTail:	
  1094  0077                     	ds	1
  1095  0078                     _eusartTxHead:	
  1096  0078                     	ds	1
  1097                           
  1098                           	psect	bssBANK0
  1099  0020                     __pbssBANK0:	
  1100  0020                     _str:	
  1101  0020                     	ds	16
  1102  0030                     _eusartRxBuffer:	
  1103  0030                     	ds	8
  1104  0038                     _eusartTxBuffer:	
  1105  0038                     	ds	8
  1106  0040                     TMR1_ISR@CountCallBack:	
  1107  0040                     	ds	2
  1108  0042                     _subdata:	
  1109  0042                     	ds	1
  1110                           
  1111                           	psect	clrtext
  1112  0168                     clear_ram0:	
  1113                           ;	Called with FSR0 containing the base address, and
  1114                           ;	WREG with the size to clear
  1115                           
  1116  0168  0064               	clrwdt	;clear the watchdog before getting into this loop
  1117  0169                     clrloop0:	
  1118  0169  0180               	clrf	0	;clear RAM location pointed to by FSR
  1119  016A  3101               	addfsr 0,1
  1120  016B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1121  016C  2969               	goto	clrloop0	;have we reached the end yet?
  1122  016D  3400               	retlw	0	;all done for this memory range, return
  1123                           
  1124                           	psect	cstackCOMMON
  1125  0079                     __pcstackCOMMON:	
  1126  0079                     ?_OSCILLATOR_Initialize:	
  1127  0079                     ?_TMR1_Initialize:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0079                     ?_TMR1_ISR:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0079                     ?_TMR1_StartTimer:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0079                     ?_TMR1_CallBack:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0079                     ??_TMR1_CallBack:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0079                     ?_EUSART_Initialize:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0079                     ?_EUSART_Read:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0079                     ?_EUSART_Write:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0079                     ?_EUSART_Transmit_ISR:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0079                     ??_EUSART_Transmit_ISR:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0079                     ?_EUSART_Receive_ISR:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0079                     ??_EUSART_Receive_ISR:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0079                     ?_PIN_MANAGER_Initialize:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0079                     ?_SYSTEM_Initialize:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0079                     ?_INTERRUPT_InterruptManager:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0079                     ?_main:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0x0
  1177  0079                     	ds	1
  1178  007A                     ??_TMR1_ISR:	
  1179  007A                     ??_INTERRUPT_InterruptManager:	
  1180                           ; 1 bytes @ 0x1
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x1
  1184  007A                     	ds	1
  1185  007B                     ??_OSCILLATOR_Initialize:	
  1186  007B                     ??_TMR1_Initialize:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  007B                     ??_TMR1_StartTimer:	
  1190                           ; 1 bytes @ 0x2
  1191                           
  1192  007B                     ??_EUSART_Initialize:	
  1193                           ; 1 bytes @ 0x2
  1194                           
  1195  007B                     ??_EUSART_Read:	
  1196                           ; 1 bytes @ 0x2
  1197                           
  1198  007B                     ??_EUSART_Write:	
  1199                           ; 1 bytes @ 0x2
  1200                           
  1201  007B                     ??_PIN_MANAGER_Initialize:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x2
  1206  007B                     	ds	1
  1207  007C                     ??_SYSTEM_Initialize:	
  1208                           
  1209                           	psect	cstackBANK0
  1210  0043                     __pcstackBANK0:	
  1211                           ; 1 bytes @ 0x3
  1212                           
  1213  0043                     EUSART_Read@readValue:	
  1214  0043                     EUSART_Write@txData:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0x0
  1219  0043                     	ds	1
  1220  0044                     ??_main:	
  1221                           
  1222                           ; 1 bytes @ 0x1
  1223  0044                     	ds	1
  1224                           
  1225                           	psect	maintext
  1226  003F                     __pmaintext:	
  1227 ;;
  1228 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1229 ;;
  1230 ;; *************** function _main *****************
  1231 ;; Defined at:
  1232 ;;		line 32 in file "mcc_generated_files/main.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : B1F/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1246 ;;      Params:         0       0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0       0
  1248 ;;      Temps:          0       1       0       0       0       0
  1249 ;;      Totals:         0       1       0       0       0       0
  1250 ;;Total ram usage:        1 bytes
  1251 ;; Hardware stack levels required when called:    6
  1252 ;; This function calls:
  1253 ;;		_EUSART_Read
  1254 ;;		_EUSART_Write
  1255 ;;		_SYSTEM_Initialize
  1256 ;; This function is called by:
  1257 ;;		Startup code after reset
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _main
  1263  003F                     _main:	
  1264                           
  1265                           ;main.c: 34: SYSTEM_Initialize();
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1269  003F  3181  2154  3180   	fcall	_SYSTEM_Initialize
  1270                           
  1271                           ;main.c: 40: (INTCONbits.GIE = 1);
  1272  0042  178B               	bsf	11,7	;volatile
  1273                           
  1274                           ;main.c: 43: (INTCONbits.PEIE = 1);
  1275  0043  170B               	bsf	11,6	;volatile
  1276                           
  1277                           ;main.c: 51: _delay((unsigned long)((5)*(32000000/4000.0)));
  1278  0044  3034               	movlw	52
  1279  0045  0020               	movlb	0	; select bank0
  1280  0046  00C4               	movwf	??_main
  1281  0047  30F1               	movlw	241
  1282  0048                     u557:	
  1283  0048  0B89               	decfsz	9,f
  1284  0049  2848               	goto	u557
  1285  004A  0BC4               	decfsz	??_main,f
  1286  004B  2848               	goto	u557
  1287  004C  3200               	nop2
  1288                           
  1289                           ;main.c: 52: do { LATB4 = 1; } while(0);
  1290  004D  0022               	movlb	2	; select bank2
  1291  004E  160D               	bsf	13,4	;volatile
  1292  004F                     L1:	
  1293                           
  1294                           ;main.c: 53: do { LATB4 = 0; } while(0);
  1295  004F  120D               	bcf	13,4	;volatile
  1296  0050                     l1076:	
  1297                           ;main.c: 54: while (1) {
  1298                           
  1299                           
  1300                           ;main.c: 55: if (tmrflag) {
  1301  0050  0872               	movf	_tmrflag,w	;volatile
  1302  0051  1903               	btfsc	3,2
  1303  0052  2871               	goto	l1084
  1304                           
  1305                           ;main.c: 56: LATB4=RB5;
  1306  0053  0020               	movlb	0	; select bank0
  1307  0054  1E8D               	btfss	13,5	;volatile
  1308  0055  2859               	goto	u510
  1309  0056  0022               	movlb	2	; select bank2
  1310  0057  160D               	bsf	13,4	;volatile
  1311  0058  285B               	goto	l1080
  1312  0059                     u510:	
  1313  0059  0022               	movlb	2	; select bank2
  1314  005A  120D               	bcf	13,4	;volatile
  1315  005B                     l1080:	
  1316                           
  1317                           ;main.c: 57: tmrflag = 0;
  1318  005B  01F2               	clrf	_tmrflag	;volatile
  1319                           
  1320                           ;main.c: 58: EUSART_Write((RB4 << 7) | (RB0 << 6) | (RA6 << 5) | (RB5 << 4)
  1321                           ;main.c: 59: | (RA2 << 3) | (RA4 << 2) | (RA7 << 1) | (RA3 << 0));
  1322  005C  3000               	movlw	0
  1323  005D  0020               	movlb	0	; select bank0
  1324  005E  1A0D               	btfsc	13,4	;volatile
  1325  005F  3080               	movlw	128
  1326  0060  180D               	btfsc	13,0	;volatile
  1327  0061  3840               	iorlw	64
  1328  0062  1B0C               	btfsc	12,6	;volatile
  1329  0063  3820               	iorlw	32
  1330  0064  1A8D               	btfsc	13,5	;volatile
  1331  0065  3810               	iorlw	16
  1332  0066  190C               	btfsc	12,2	;volatile
  1333  0067  3808               	iorlw	8
  1334  0068  1A0C               	btfsc	12,4	;volatile
  1335  0069  3804               	iorlw	4
  1336  006A  1B8C               	btfsc	12,7	;volatile
  1337  006B  3802               	iorlw	2
  1338  006C  198C               	btfsc	12,3	;volatile
  1339  006D  3801               	iorlw	1
  1340  006E  3180  207F  3180   	fcall	_EUSART_Write
  1341  0071                     l1084:	
  1342                           
  1343                           ;main.c: 60: }
  1344                           ;main.c: 61: if((eusartRxCount)){
  1345  0071  0873               	movf	_eusartRxCount,w	;volatile
  1346  0072  1903               	btfsc	3,2
  1347  0073  2850               	goto	l1076
  1348                           
  1349                           ;main.c: 62: if(EUSART_Read()&0x80){
  1350  0074  3180  20A3  3180   	fcall	_EUSART_Read
  1351  0077  3980               	andlw	128
  1352  0078  1903               	btfsc	3,2
  1353  0079  287D               	goto	l246
  1354                           
  1355                           ;main.c: 63: do { LATB4 = 1; } while(0);
  1356  007A  0022               	movlb	2	; select bank2
  1357  007B  160D               	bsf	13,4	;volatile
  1358                           
  1359                           ;main.c: 64: }else{
  1360  007C  2850               	goto	l1076
  1361  007D                     l246:	
  1362                           ;main.c: 65: do { LATB4 = 0; } while(0);
  1363                           
  1364  007D  0022               	movlb	2	; select bank2
  1365  007E  284F               	goto	L1
  1366  007F                     __end_of_main:	
  1367                           
  1368                           	psect	text1
  1369  0154                     __ptext1:	
  1370 ;; *************** function _SYSTEM_Initialize *****************
  1371 ;; Defined at:
  1372 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1386 ;;      Params:         0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    5
  1393 ;; This function calls:
  1394 ;;		_EUSART_Initialize
  1395 ;;		_OSCILLATOR_Initialize
  1396 ;;		_PIN_MANAGER_Initialize
  1397 ;;		_TMR1_Initialize
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _SYSTEM_Initialize
  1405  0154                     _SYSTEM_Initialize:	
  1406                           
  1407                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1411  0154  3181  2160  3181   	fcall	_OSCILLATOR_Initialize
  1412                           
  1413                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1414  0157  3180  20C2  3181   	fcall	_PIN_MANAGER_Initialize
  1415                           
  1416                           ;mcc.c: 73: EUSART_Initialize();
  1417  015A  3181  2112  3181   	fcall	_EUSART_Initialize
  1418                           
  1419                           ;mcc.c: 74: TMR1_Initialize();
  1420  015D  3181  2142         	fcall	_TMR1_Initialize
  1421  015F  0008               	return
  1422  0160                     __end_of_SYSTEM_Initialize:	
  1423                           
  1424                           	psect	text2
  1425  0142                     __ptext2:	
  1426 ;; *************** function _TMR1_Initialize *****************
  1427 ;; Defined at:
  1428 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1442 ;;      Params:         0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    4
  1449 ;; This function calls:
  1450 ;;		_TMR1_StartTimer
  1451 ;; This function is called by:
  1452 ;;		_SYSTEM_Initialize
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _TMR1_Initialize
  1458  0142                     _TMR1_Initialize:	
  1459                           
  1460                           ;tmr1.c: 68: T1CON = 0x30;
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1464  0142  3030               	movlw	48
  1465  0143  0020               	movlb	0	; select bank0
  1466  0144  0098               	movwf	24	;volatile
  1467                           
  1468                           ;tmr1.c: 71: T1GCON = 0x00;
  1469  0145  0199               	clrf	25	;volatile
  1470                           
  1471                           ;tmr1.c: 74: TMR1H = 0xB1;
  1472  0146  30B1               	movlw	177
  1473  0147  0097               	movwf	23	;volatile
  1474                           
  1475                           ;tmr1.c: 77: TMR1L = 0xE0;
  1476  0148  30E0               	movlw	224
  1477  0149  0096               	movwf	22	;volatile
  1478                           
  1479                           ;tmr1.c: 80: timer1ReloadVal = (TMR1H << 8) | TMR1L;
  1480  014A  0817               	movf	23,w	;volatile
  1481  014B  00F1               	movwf	_timer1ReloadVal+1	;volatile
  1482  014C  0816               	movf	22,w	;volatile
  1483  014D  00F0               	movwf	_timer1ReloadVal	;volatile
  1484                           
  1485                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1486  014E  1011               	bcf	17,0	;volatile
  1487                           
  1488                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1489  014F  0021               	movlb	1	; select bank1
  1490  0150  1411               	bsf	17,0	;volatile
  1491                           
  1492                           ;tmr1.c: 89: TMR1_StartTimer();
  1493  0151  3181  2173         	fcall	_TMR1_StartTimer
  1494  0153  0008               	return
  1495  0154                     __end_of_TMR1_Initialize:	
  1496                           
  1497                           	psect	text3
  1498  0173                     __ptext3:	
  1499 ;; *************** function _TMR1_StartTimer *****************
  1500 ;; Defined at:
  1501 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		None
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1515 ;;      Params:         0       0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    3
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_TMR1_Initialize
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _TMR1_StartTimer
  1531  0173                     _TMR1_StartTimer:	
  1532                           
  1533                           ;tmr1.c: 94: T1CONbits.TMR1ON = 1;
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _TMR1_StartTimer: []
  1537  0173  0020               	movlb	0	; select bank0
  1538  0174  1418               	bsf	24,0	;volatile
  1539  0175  0008               	return
  1540  0176                     __end_of_TMR1_StartTimer:	
  1541                           
  1542                           	psect	text4
  1543  00C2                     __ptext4:	
  1544 ;; *************** function _PIN_MANAGER_Initialize *****************
  1545 ;; Defined at:
  1546 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1560 ;;      Params:         0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    3
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_SYSTEM_Initialize
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _PIN_MANAGER_Initialize
  1576  00C2                     _PIN_MANAGER_Initialize:	
  1577                           
  1578                           ;pin_manager.c: 51: LATA = 0x02;
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1582  00C2  3002               	movlw	2
  1583  00C3  0022               	movlb	2	; select bank2
  1584  00C4  008C               	movwf	12	;volatile
  1585                           
  1586                           ;pin_manager.c: 52: TRISA = 0xFD;
  1587  00C5  30FD               	movlw	253
  1588  00C6  0021               	movlb	1	; select bank1
  1589  00C7  008C               	movwf	12	;volatile
  1590                           
  1591                           ;pin_manager.c: 53: ANSELA = 0x00;
  1592  00C8  0023               	movlb	3	; select bank3
  1593  00C9  018C               	clrf	12	;volatile
  1594                           
  1595                           ;pin_manager.c: 54: WPUA = 0x00;
  1596  00CA  0024               	movlb	4	; select bank4
  1597  00CB  018C               	clrf	12	;volatile
  1598                           
  1599                           ;pin_manager.c: 56: LATB = 0x10;
  1600  00CC  3010               	movlw	16
  1601  00CD  0022               	movlb	2	; select bank2
  1602  00CE  008D               	movwf	13	;volatile
  1603                           
  1604                           ;pin_manager.c: 57: TRISB = 0xEF;
  1605  00CF  30EF               	movlw	239
  1606  00D0  0021               	movlb	1	; select bank1
  1607  00D1  008D               	movwf	13	;volatile
  1608                           
  1609                           ;pin_manager.c: 58: ANSELB = 0xC0;
  1610  00D2  30C0               	movlw	192
  1611  00D3  0023               	movlb	3	; select bank3
  1612  00D4  008D               	movwf	13	;volatile
  1613                           
  1614                           ;pin_manager.c: 59: WPUB = 0x00;
  1615  00D5  0024               	movlb	4	; select bank4
  1616  00D6  018D               	clrf	13	;volatile
  1617                           
  1618                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  1619  00D7  0021               	movlb	1	; select bank1
  1620  00D8  1795               	bsf	21,7	;volatile
  1621                           
  1622                           ;pin_manager.c: 63: APFCON0 = 0x00;
  1623  00D9  0022               	movlb	2	; select bank2
  1624  00DA  019D               	clrf	29	;volatile
  1625                           
  1626                           ;pin_manager.c: 65: APFCON1 = 0x00;
  1627  00DB  019E               	clrf	30	;volatile
  1628  00DC  0008               	return
  1629  00DD                     __end_of_PIN_MANAGER_Initialize:	
  1630                           
  1631                           	psect	text5
  1632  0160                     __ptext5:	
  1633 ;; *************** function _OSCILLATOR_Initialize *****************
  1634 ;; Defined at:
  1635 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1649 ;;      Params:         0       0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    3
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_SYSTEM_Initialize
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _OSCILLATOR_Initialize
  1665  0160                     _OSCILLATOR_Initialize:	
  1666                           
  1667                           ;mcc.c: 79: OSCCON = 0x70;
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1671  0160  3070               	movlw	112
  1672  0161  0021               	movlb	1	; select bank1
  1673  0162  0099               	movwf	25	;volatile
  1674                           
  1675                           ;mcc.c: 81: OSCSTAT = 0x00;
  1676  0163  019A               	clrf	26	;volatile
  1677                           
  1678                           ;mcc.c: 83: OSCTUNE = 0x00;
  1679  0164  0198               	clrf	24	;volatile
  1680  0165                     l111:	
  1681                           ;mcc.c: 87: while (PLLR == 0) {
  1682                           
  1683  0165  1B1A               	btfsc	26,6	;volatile
  1684  0166  0008               	return
  1685  0167  2965               	goto	l111
  1686  0168                     __end_of_OSCILLATOR_Initialize:	
  1687                           
  1688                           	psect	text6
  1689  0112                     __ptext6:	
  1690 ;; *************** function _EUSART_Initialize *****************
  1691 ;; Defined at:
  1692 ;;		line 76 in file "mcc_generated_files/eusart.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1706 ;;      Params:         0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0
  1708 ;;      Temps:          1       0       0       0       0       0
  1709 ;;      Totals:         1       0       0       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    3
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_SYSTEM_Initialize
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _EUSART_Initialize
  1722  0112                     _EUSART_Initialize:	
  1723                           
  1724                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1728  0112  0021               	movlb	1	; select bank1
  1729  0113  1291               	bcf	17,5	;volatile
  1730                           
  1731                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  1732  0114  1211               	bcf	17,4	;volatile
  1733                           
  1734                           ;eusart.c: 84: BAUDCON = 0x48;
  1735  0115  3048               	movlw	72
  1736  0116  0023               	movlb	3	; select bank3
  1737  0117  009F               	movwf	31	;volatile
  1738                           
  1739                           ;eusart.c: 87: RCSTA = 0x90;
  1740  0118  3090               	movlw	144
  1741  0119  009D               	movwf	29	;volatile
  1742                           
  1743                           ;eusart.c: 90: TXSTA = 0x26;
  1744  011A  3026               	movlw	38
  1745  011B  009E               	movwf	30	;volatile
  1746                           
  1747                           ;eusart.c: 93: SPBRGL = 0x44;
  1748  011C  3044               	movlw	68
  1749  011D  009B               	movwf	27	;volatile
  1750                           
  1751                           ;eusart.c: 96: SPBRGH = 0x00;
  1752  011E  019C               	clrf	28	;volatile
  1753                           
  1754                           ;eusart.c: 100: eusartTxHead = 0;
  1755  011F  01F8               	clrf	_eusartTxHead
  1756                           
  1757                           ;eusart.c: 101: eusartTxTail = 0;
  1758  0120  01F7               	clrf	_eusartTxTail
  1759                           
  1760                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
  1761  0121  3008               	movlw	8
  1762  0122  00FB               	movwf	??_EUSART_Initialize
  1763  0123  087B               	movf	??_EUSART_Initialize,w
  1764  0124  00F6               	movwf	_eusartTxBufferRemaining	;volatile
  1765                           
  1766                           ;eusart.c: 104: eusartRxHead = 0;
  1767  0125  01F5               	clrf	_eusartRxHead
  1768                           
  1769                           ;eusart.c: 105: eusartRxTail = 0;
  1770  0126  01F4               	clrf	_eusartRxTail
  1771                           
  1772                           ;eusart.c: 106: eusartRxCount = 0;
  1773  0127  01F3               	clrf	_eusartRxCount	;volatile
  1774                           
  1775                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  1776  0128  0021               	movlb	1	; select bank1
  1777  0129  1691               	bsf	17,5	;volatile
  1778  012A  0008               	return
  1779  012B                     __end_of_EUSART_Initialize:	
  1780                           
  1781                           	psect	text7
  1782  007F                     __ptext7:	
  1783 ;; *************** function _EUSART_Write *****************
  1784 ;; Defined at:
  1785 ;;		line 130 in file "mcc_generated_files/eusart.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  txData          1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  txData          1    0[BANK0 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1799 ;;      Params:         0       0       0       0       0       0
  1800 ;;      Locals:         0       1       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0       0
  1802 ;;      Totals:         1       1       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    3
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _EUSART_Write
  1815  007F                     _EUSART_Write:	
  1816                           
  1817                           ;incstack = 0
  1818                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1819                           ;EUSART_Write@txData stored from wreg
  1820  007F  0020               	movlb	0	; select bank0
  1821  0080  00C3               	movwf	EUSART_Write@txData
  1822  0081                     l1048:	
  1823                           ;eusart.c: 131: while (0 == eusartTxBufferRemaining) {
  1824                           
  1825  0081  0876               	movf	_eusartTxBufferRemaining,w	;volatile
  1826  0082  1903               	btfsc	3,2
  1827  0083  2881               	goto	l1048
  1828                           
  1829                           ;eusart.c: 132: }
  1830                           ;eusart.c: 134: if (0 == PIE1bits.TXIE) {
  1831  0084  0021               	movlb	1	; select bank1
  1832  0085  1A11               	btfsc	17,4	;volatile
  1833  0086  288C               	goto	l50
  1834                           
  1835                           ;eusart.c: 135: TXREG = txData;
  1836  0087  0020               	movlb	0	; select bank0
  1837  0088  0843               	movf	EUSART_Write@txData,w
  1838  0089  0023               	movlb	3	; select bank3
  1839  008A  009A               	movwf	26	;volatile
  1840                           
  1841                           ;eusart.c: 136: } else {
  1842  008B  28A0               	goto	l1062
  1843  008C                     l50:	
  1844                           
  1845                           ;eusart.c: 137: PIE1bits.TXIE = 0;
  1846  008C  1211               	bcf	17,4	;volatile
  1847                           
  1848                           ;eusart.c: 138: eusartTxBuffer[eusartTxHead++] = txData;
  1849  008D  0020               	movlb	0	; select bank0
  1850  008E  0843               	movf	EUSART_Write@txData,w
  1851  008F  00FB               	movwf	??_EUSART_Write
  1852  0090  0878               	movf	_eusartTxHead,w
  1853  0091  3E38               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1854  0092  0086               	movwf	6
  1855  0093  0187               	clrf	7
  1856  0094  087B               	movf	??_EUSART_Write,w
  1857  0095  0081               	movwf	1
  1858  0096  3001               	movlw	1
  1859  0097  00FB               	movwf	??_EUSART_Write
  1860  0098  087B               	movf	??_EUSART_Write,w
  1861  0099  07F8               	addwf	_eusartTxHead,f
  1862                           
  1863                           ;eusart.c: 139: if (sizeof (eusartTxBuffer) <= eusartTxHead) {
  1864  009A  3008               	movlw	8
  1865  009B  0278               	subwf	_eusartTxHead,w
  1866  009C  1803               	btfsc	3,0
  1867                           
  1868                           ;eusart.c: 140: eusartTxHead = 0;
  1869  009D  01F8               	clrf	_eusartTxHead
  1870                           
  1871                           ;eusart.c: 141: }
  1872                           ;eusart.c: 142: eusartTxBufferRemaining--;
  1873  009E  3001               	movlw	1
  1874  009F  02F6               	subwf	_eusartTxBufferRemaining,f	;volatile
  1875  00A0                     l1062:	
  1876                           
  1877                           ;eusart.c: 143: }
  1878                           ;eusart.c: 144: PIE1bits.TXIE = 1;
  1879  00A0  0021               	movlb	1	; select bank1
  1880  00A1  1611               	bsf	17,4	;volatile
  1881  00A2  0008               	return
  1882  00A3                     __end_of_EUSART_Write:	
  1883                           
  1884                           	psect	text8
  1885  00A3                     __ptext8:	
  1886 ;; *************** function _EUSART_Read *****************
  1887 ;; Defined at:
  1888 ;;		line 112 in file "mcc_generated_files/eusart.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  readValue       1    0[BANK0 ] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      unsigned char 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1902 ;;      Params:         0       0       0       0       0       0
  1903 ;;      Locals:         0       1       0       0       0       0
  1904 ;;      Temps:          1       0       0       0       0       0
  1905 ;;      Totals:         1       1       0       0       0       0
  1906 ;;Total ram usage:        2 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _EUSART_Read
  1918  00A3                     _EUSART_Read:	
  1919                           
  1920                           ;eusart.c: 113: uint8_t readValue = 0;
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  1924  00A3  0020               	movlb	0	; select bank0
  1925  00A4  01C3               	clrf	EUSART_Read@readValue
  1926  00A5                     l1028:	
  1927                           ;eusart.c: 115: while (0 == eusartRxCount) {
  1928                           
  1929  00A5  0873               	movf	_eusartRxCount,w	;volatile
  1930  00A6  1903               	btfsc	3,2
  1931  00A7  28A5               	goto	l1028
  1932                           
  1933                           ;eusart.c: 116: }
  1934                           ;eusart.c: 118: PIE1bits.RCIE = 0;
  1935  00A8  0021               	movlb	1	; select bank1
  1936  00A9  1291               	bcf	17,5	;volatile
  1937                           
  1938                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
  1939  00AA  0874               	movf	_eusartRxTail,w
  1940  00AB  3E30               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  1941  00AC  0086               	movwf	6
  1942  00AD  0187               	clrf	7
  1943  00AE  0801               	movf	1,w
  1944  00AF  00FB               	movwf	??_EUSART_Read
  1945  00B0  087B               	movf	??_EUSART_Read,w
  1946  00B1  0020               	movlb	0	; select bank0
  1947  00B2  00C3               	movwf	EUSART_Read@readValue
  1948  00B3  3001               	movlw	1
  1949  00B4  00FB               	movwf	??_EUSART_Read
  1950  00B5  087B               	movf	??_EUSART_Read,w
  1951  00B6  07F4               	addwf	_eusartRxTail,f
  1952                           
  1953                           ;eusart.c: 121: if (sizeof (eusartRxBuffer) <= eusartRxTail) {
  1954  00B7  3008               	movlw	8
  1955  00B8  0274               	subwf	_eusartRxTail,w
  1956  00B9  1803               	btfsc	3,0
  1957                           
  1958                           ;eusart.c: 122: eusartRxTail = 0;
  1959  00BA  01F4               	clrf	_eusartRxTail
  1960                           
  1961                           ;eusart.c: 123: }
  1962                           ;eusart.c: 124: eusartRxCount--;
  1963  00BB  3001               	movlw	1
  1964  00BC  02F3               	subwf	_eusartRxCount,f	;volatile
  1965                           
  1966                           ;eusart.c: 125: PIE1bits.RCIE = 1;
  1967  00BD  0021               	movlb	1	; select bank1
  1968  00BE  1691               	bsf	17,5	;volatile
  1969                           
  1970                           ;eusart.c: 127: return readValue;
  1971  00BF  0020               	movlb	0	; select bank0
  1972  00C0  0843               	movf	EUSART_Read@readValue,w
  1973  00C1  0008               	return
  1974  00C2                     __end_of_EUSART_Read:	
  1975                           
  1976                           	psect	intentry
  1977  0004                     __pintentry:	
  1978 ;; *************** function _INTERRUPT_InterruptManager *****************
  1979 ;; Defined at:
  1980 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1994 ;;      Params:         0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0
  1996 ;;      Temps:          1       0       0       0       0       0
  1997 ;;      Totals:         1       0       0       0       0       0
  1998 ;;Total ram usage:        1 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    2
  2001 ;; This function calls:
  2002 ;;		_EUSART_Receive_ISR
  2003 ;;		_EUSART_Transmit_ISR
  2004 ;;		_TMR1_ISR
  2005 ;; This function is called by:
  2006 ;;		Interrupt level 1
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010  0004                     _INTERRUPT_InterruptManager:	
  2011                           
  2012                           ;incstack = 0
  2013  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2014                           
  2015                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2016  0005  3180               	pagesel	$
  2017  0006  0020               	movlb	0	; select bank0
  2018  0007  087F               	movf	127,w
  2019  0008  00FA               	movwf	??_INTERRUPT_InterruptManager
  2020                           
  2021                           ;interrupt_manager.c: 54: if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1) {
  2022  0009  0021               	movlb	1	; select bank1
  2023  000A  1E91               	btfss	17,5	;volatile
  2024  000B  2813               	goto	i1l129
  2025  000C  0020               	movlb	0	; select bank0
  2026  000D  1E91               	btfss	17,5	;volatile
  2027  000E  2813               	goto	i1l129
  2028                           
  2029                           ;interrupt_manager.c: 55: EUSART_Receive_ISR();
  2030  000F  3180  20F8  3180   	fcall	_EUSART_Receive_ISR
  2031                           
  2032                           ;interrupt_manager.c: 56: } else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1) {
  2033  0012  2825               	goto	i1l135
  2034  0013                     i1l129:	
  2035  0013  0021               	movlb	1	; select bank1
  2036  0014  1E11               	btfss	17,4	;volatile
  2037  0015  281D               	goto	i1l131
  2038  0016  0020               	movlb	0	; select bank0
  2039  0017  1E11               	btfss	17,4	;volatile
  2040  0018  281D               	goto	i1l131
  2041                           
  2042                           ;interrupt_manager.c: 57: EUSART_Transmit_ISR();
  2043  0019  3180  20DD  3180   	fcall	_EUSART_Transmit_ISR
  2044                           
  2045                           ;interrupt_manager.c: 58: } else if (PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  2046  001C  2825               	goto	i1l135
  2047  001D                     i1l131:	
  2048  001D  0021               	movlb	1	; select bank1
  2049  001E  1C11               	btfss	17,0	;volatile
  2050  001F  2825               	goto	i1l135
  2051  0020  0020               	movlb	0	; select bank0
  2052  0021  1C11               	btfss	17,0	;volatile
  2053  0022  2825               	goto	i1l135
  2054                           
  2055                           ;interrupt_manager.c: 59: TMR1_ISR();
  2056  0023  3181  212B         	fcall	_TMR1_ISR
  2057  0025                     i1l135:	
  2058                           ;interrupt_manager.c: 60: } else {
  2059                           
  2060  0025  087A               	movf	??_INTERRUPT_InterruptManager,w
  2061  0026  0020               	movlb	0	; select bank0
  2062  0027  00FF               	movwf	127
  2063  0028  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2064  0029  0009               	retfie
  2065  002A                     __end_of_INTERRUPT_InterruptManager:	
  2066                           
  2067                           	psect	text10
  2068  012B                     __ptext10:	
  2069 ;; *************** function _TMR1_ISR *****************
  2070 ;; Defined at:
  2071 ;;		line 142 in file "mcc_generated_files/tmr1.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2085 ;;      Params:         0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		_TMR1_CallBack
  2094 ;; This function is called by:
  2095 ;;		_INTERRUPT_InterruptManager
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _TMR1_ISR
  2101  012B                     _TMR1_ISR:	
  2102                           
  2103                           ;tmr1.c: 143: static volatile unsigned int CountCallBack = 0;
  2104                           ;tmr1.c: 146: PIR1bits.TMR1IF = 0;
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2108  012B  0020               	movlb	0	; select bank0
  2109  012C  1011               	bcf	17,0	;volatile
  2110                           
  2111                           ;tmr1.c: 148: TMR1H = (timer1ReloadVal >> 8);
  2112  012D  0871               	movf	_timer1ReloadVal+1,w	;volatile
  2113  012E  0097               	movwf	23	;volatile
  2114                           
  2115                           ;tmr1.c: 149: TMR1L = timer1ReloadVal;
  2116  012F  0870               	movf	_timer1ReloadVal,w	;volatile
  2117  0130  0096               	movwf	22	;volatile
  2118                           
  2119                           ;tmr1.c: 152: if (++CountCallBack >= 4) {
  2120  0131  3001               	movlw	1
  2121  0132  07C0               	addwf	TMR1_ISR@CountCallBack,f	;volatile
  2122  0133  3000               	movlw	0
  2123  0134  3DC1               	addwfc	TMR1_ISR@CountCallBack+1,f	;volatile
  2124  0135  3000               	movlw	0
  2125  0136  0241               	subwf	TMR1_ISR@CountCallBack+1,w	;volatile
  2126  0137  3004               	movlw	4
  2127  0138  1903               	skipnz
  2128  0139  0240               	subwf	TMR1_ISR@CountCallBack,w	;volatile
  2129  013A  1C03               	skipc
  2130  013B  0008               	return
  2131                           
  2132                           ;tmr1.c: 154: TMR1_CallBack();
  2133  013C  3181  216E         	fcall	_TMR1_CallBack
  2134                           
  2135                           ;tmr1.c: 157: CountCallBack = 0;
  2136  013E  0020               	movlb	0	; select bank0
  2137  013F  01C0               	clrf	TMR1_ISR@CountCallBack	;volatile
  2138  0140  01C1               	clrf	TMR1_ISR@CountCallBack+1	;volatile
  2139  0141  0008               	return
  2140  0142                     __end_of_TMR1_ISR:	
  2141                           
  2142                           	psect	text11
  2143  016E                     __ptext11:	
  2144 ;; *************** function _TMR1_CallBack *****************
  2145 ;; Defined at:
  2146 ;;		line 162 in file "mcc_generated_files/tmr1.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2160 ;;      Params:         0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0
  2162 ;;      Temps:          1       0       0       0       0       0
  2163 ;;      Totals:         1       0       0       0       0       0
  2164 ;;Total ram usage:        1 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_TMR1_ISR
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _TMR1_CallBack
  2175  016E                     _TMR1_CallBack:	
  2176                           
  2177                           ;tmr1.c: 164: tmrflag = 1;
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _TMR1_CallBack: [wreg]
  2181  016E  3001               	movlw	1
  2182  016F  00F9               	movwf	??_TMR1_CallBack
  2183  0170  0879               	movf	??_TMR1_CallBack,w
  2184  0171  00F2               	movwf	_tmrflag	;volatile
  2185  0172  0008               	return
  2186  0173                     __end_of_TMR1_CallBack:	
  2187                           
  2188                           	psect	text12
  2189  00DD                     __ptext12:	
  2190 ;; *************** function _EUSART_Transmit_ISR *****************
  2191 ;; Defined at:
  2192 ;;		line 147 in file "mcc_generated_files/eusart.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2206 ;;      Params:         0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0
  2208 ;;      Temps:          1       0       0       0       0       0
  2209 ;;      Totals:         1       0       0       0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_INTERRUPT_InterruptManager
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _EUSART_Transmit_ISR
  2221  00DD                     _EUSART_Transmit_ISR:	
  2222                           
  2223                           ;eusart.c: 150: if (sizeof (eusartTxBuffer) > eusartTxBufferRemaining) {
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2227  00DD  3008               	movlw	8
  2228  00DE  0276               	subwf	_eusartTxBufferRemaining,w	;volatile
  2229  00DF  1803               	skipnc
  2230  00E0  28F5               	goto	i1l56
  2231                           
  2232                           ;eusart.c: 151: TXREG = eusartTxBuffer[eusartTxTail++];
  2233  00E1  0877               	movf	_eusartTxTail,w
  2234  00E2  3E38               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2235  00E3  0086               	movwf	6
  2236  00E4  0187               	clrf	7
  2237  00E5  0801               	movf	1,w
  2238  00E6  0023               	movlb	3	; select bank3
  2239  00E7  009A               	movwf	26	;volatile
  2240  00E8  3001               	movlw	1
  2241  00E9  00F9               	movwf	??_EUSART_Transmit_ISR
  2242  00EA  0879               	movf	??_EUSART_Transmit_ISR,w
  2243  00EB  07F7               	addwf	_eusartTxTail,f
  2244                           
  2245                           ;eusart.c: 152: if (sizeof (eusartTxBuffer) <= eusartTxTail) {
  2246  00EC  3008               	movlw	8
  2247  00ED  0277               	subwf	_eusartTxTail,w
  2248  00EE  1803               	btfsc	3,0
  2249                           
  2250                           ;eusart.c: 153: eusartTxTail = 0;
  2251  00EF  01F7               	clrf	_eusartTxTail
  2252                           
  2253                           ;eusart.c: 154: }
  2254                           ;eusart.c: 155: eusartTxBufferRemaining++;
  2255  00F0  3001               	movlw	1
  2256  00F1  00F9               	movwf	??_EUSART_Transmit_ISR
  2257  00F2  0879               	movf	??_EUSART_Transmit_ISR,w
  2258  00F3  07F6               	addwf	_eusartTxBufferRemaining,f	;volatile
  2259                           
  2260                           ;eusart.c: 156: } else {
  2261  00F4  0008               	return
  2262  00F5                     i1l56:	
  2263                           
  2264                           ;eusart.c: 157: PIE1bits.TXIE = 0;
  2265  00F5  0021               	movlb	1	; select bank1
  2266  00F6  1211               	bcf	17,4	;volatile
  2267  00F7  0008               	return
  2268  00F8                     __end_of_EUSART_Transmit_ISR:	
  2269                           
  2270                           	psect	text13
  2271  00F8                     __ptext13:	
  2272 ;; *************** function _EUSART_Receive_ISR *****************
  2273 ;; Defined at:
  2274 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2288 ;;      Params:         0       0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0       0
  2291 ;;      Totals:         1       0       0       0       0       0
  2292 ;;Total ram usage:        1 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_INTERRUPT_InterruptManager
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _EUSART_Receive_ISR
  2303  00F8                     _EUSART_Receive_ISR:	
  2304                           
  2305                           ;eusart.c: 162: if (1 == RCSTAbits.OERR) {
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2309  00F8  0023               	movlb	3	; select bank3
  2310  00F9  1C9D               	btfss	29,1	;volatile
  2311  00FA  28FD               	goto	i1l966
  2312                           
  2313                           ;eusart.c: 165: RCSTAbits.CREN = 0;
  2314  00FB  121D               	bcf	29,4	;volatile
  2315                           
  2316                           ;eusart.c: 166: RCSTAbits.CREN = 1;
  2317  00FC  161D               	bsf	29,4	;volatile
  2318  00FD                     i1l966:	
  2319                           
  2320                           ;eusart.c: 167: }
  2321                           ;eusart.c: 170: eusartRxBuffer[eusartRxHead++] = RCREG;
  2322  00FD  0819               	movf	25,w	;volatile
  2323  00FE  00F9               	movwf	??_EUSART_Receive_ISR
  2324  00FF  0875               	movf	_eusartRxHead,w
  2325  0100  3E30               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2326  0101  0086               	movwf	6
  2327  0102  0187               	clrf	7
  2328  0103  0879               	movf	??_EUSART_Receive_ISR,w
  2329  0104  0081               	movwf	1
  2330  0105  3001               	movlw	1
  2331  0106  00F9               	movwf	??_EUSART_Receive_ISR
  2332  0107  0879               	movf	??_EUSART_Receive_ISR,w
  2333  0108  07F5               	addwf	_eusartRxHead,f
  2334                           
  2335                           ;eusart.c: 171: if (sizeof (eusartRxBuffer) <= eusartRxHead) {
  2336  0109  3008               	movlw	8
  2337  010A  0275               	subwf	_eusartRxHead,w
  2338  010B  1803               	btfsc	3,0
  2339                           
  2340                           ;eusart.c: 172: eusartRxHead = 0;
  2341  010C  01F5               	clrf	_eusartRxHead
  2342                           
  2343                           ;eusart.c: 173: }
  2344                           ;eusart.c: 174: eusartRxCount++;
  2345  010D  3001               	movlw	1
  2346  010E  00F9               	movwf	??_EUSART_Receive_ISR
  2347  010F  0879               	movf	??_EUSART_Receive_ISR,w
  2348  0110  07F3               	addwf	_eusartRxCount,f	;volatile
  2349  0111  0008               	return
  2350  0112                     __end_of_EUSART_Receive_ISR:	
  2351  007E                     btemp	set	126	;btemp
  2352  007E                     int$flags	set	126
  2353  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EUSART_Read
    _main->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _TMR1_ISR->_TMR1_CallBack

Critical Paths under _main in BANK0

    _main->_EUSART_Read
    _main->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      99
                                              1 BANK0      1     1      0
                        _EUSART_Read
                       _EUSART_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      37
                                              2 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      25       6       46.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      31      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Aug 01 10:25:10 2022

                        __CFG_CP$OFF 0000                                   l50 008C  
                                l111 0165                                  l246 007D  
                                _RB0 0068                                  _RA2 0062  
                                _RA3 0063                                  _RA4 0064  
                                _RB4 006C                                  _RA6 0066  
                                _RB5 006D                                  _RA7 0067  
                                u510 0059                         __CFG_CPD$OFF 0000  
                                u557 0048                      _timer1ReloadVal 0070  
                                _str 0020                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       ?_EUSART_Read 0079                         __CFG_LVP$OFF 0000  
                               l1028 00A5                                 l1062 00A0  
                               l1048 0081                                 l1080 005B  
                               l1084 0071                                 l1076 0050  
                               _LATA 010C                                 _LATB 010D  
                               i1l56 00F5                                 _PLLR 04D6  
                               _WPUA 020C                                 _WPUB 020D  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 003F                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 002A  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0079  
     __size_of_OSCILLATOR_Initialize 0008        __end_of_OSCILLATOR_Initialize 0168  
                              ?_main 0079                        __CFG_WDTE$OFF 0000  
                    _TMR1_StartTimer 0173                                _T1CON 0018  
                              _LATB4 086C                                i1l131 001D  
                              i1l135 0025                                i1l129 0013  
                              i1l966 00FD                                _RCREG 0199  
                              _RCSTA 019D                                _TMR1H 0017  
                              _TMR1L 0016                                _TRISA 008C  
                              _TRISB 008D                                _TXREG 019A  
                              _TXSTA 019E                     __end_of_TMR1_ISR 0142  
            __end_of_TMR1_Initialize 0154                                status 0003  
                              wtemp0 007E                       __CFG_MCLRE$OFF 0000  
                    __initialization 002C                         __end_of_main 007F  
                     ??_EUSART_Write 007B          ?_INTERRUPT_InterruptManager 0079  
                             ??_main 0044                               _ANSELA 018C  
                             _ANSELB 018D                               _T1GCON 0019  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                       __CFG_PWRTE$OFF 0000  
            __end_of_TMR1_StartTimer 0176                       __CFG_STVREN$ON 0000  
                _EUSART_Transmit_ISR 00DD                 ?_EUSART_Transmit_ISR 0079  
              __end_of_TMR1_CallBack 0173                     ?_TMR1_Initialize 0079  
               __size_of_EUSART_Read 001F                    _SYSTEM_Initialize 0154  
            __end_of__initialization 003B                   ?_SYSTEM_Initialize 0079  
                     __pcstackCOMMON 0079                  ??_SYSTEM_Initialize 007C  
                          ?_TMR1_ISR 0079                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 0160                ??_EUSART_Transmit_ISR 0079  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 00A3  
        __size_of_EUSART_Receive_ISR 001A                           __pmaintext 003F  
                   ?_TMR1_StartTimer 0079                           ??_TMR1_ISR 007A  
                         __pintentry 0004                              _BAUDCON 019F  
                            _APFCON0 011D                              _APFCON1 011E  
                      _eusartRxCount 0073                              _OSCSTAT 009A  
                            _OSCTUNE 0098                              __ptext1 0154  
                            __ptext2 0142                              __ptext3 0173  
                            __ptext4 00C2                              __ptext5 0160  
                            __ptext6 0112                              __ptext7 007F  
                            __ptext8 00A3                            _T1CONbits 0018  
              _OSCILLATOR_Initialize 0160             ??_PIN_MANAGER_Initialize 007B  
                            _subdata 0042                              _tmrflag 0072  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0169  
               end_of_initialization 003B                    _EUSART_Initialize 0112  
                 ?_EUSART_Initialize 0079                            _RCSTAbits 019D  
                ??_EUSART_Initialize 007B                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0024            __end_of_EUSART_Initialize 012B  
                       _EUSART_Write 007F                    __size_of_TMR1_ISR 0017  
             ?_OSCILLATOR_Initialize 0079                  start_initialization 002C  
    __size_of_PIN_MANAGER_Initialize 001B                        ??_EUSART_Read 007B  
           __size_of_TMR1_Initialize 0012               __size_of_TMR1_CallBack 0005  
        __end_of_EUSART_Transmit_ISR 00F8                TMR1_ISR@CountCallBack 0040  
                        __pbssCOMMON 0070                            ___latbits 0001  
                      __pcstackBANK0 0043           __end_of_EUSART_Receive_ISR 0112  
         __size_of_EUSART_Initialize 0019                  __end_of_EUSART_Read 00C2  
             _PIN_MANAGER_Initialize 00C2                 EUSART_Read@readValue 0043  
                       _eusartRxHead 0075                         _eusartTxHead 0078  
                       _eusartRxTail 0074                         _eusartTxTail 0077  
       ??_INTERRUPT_InterruptManager 007A              _eusartTxBufferRemaining 0076  
           __size_of_TMR1_StartTimer 0003                       _eusartRxBuffer 0030  
                      _TMR1_CallBack 016E                       _eusartTxBuffer 0038  
                          clear_ram0 0168                             _PIE1bits 0091  
__size_of_INTERRUPT_InterruptManager 0026                             _PIR1bits 0011  
                           _TMR1_ISR 012B                    ??_TMR1_Initialize 007B  
                        _EUSART_Read 00A3                       ?_TMR1_CallBack 0079  
            ??_OSCILLATOR_Initialize 007B                             __ptext10 012B  
                           __ptext11 016E                             __ptext12 00DD  
                           __ptext13 00F8                           _T1GCONbits 0019  
                  ??_TMR1_StartTimer 007B                        __size_of_main 0040  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 002A  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
                    ??_TMR1_CallBack 0079                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0079                    __CFG_CLKOUTEN$OFF 0000  
                 _EUSART_Receive_ISR 00F8                  ?_EUSART_Receive_ISR 0079  
                 EUSART_Write@txData 0043         __size_of_EUSART_Transmit_ISR 001B  
     __end_of_PIN_MANAGER_Initialize 00DD                 ??_EUSART_Receive_ISR 0079  
                    _TMR1_Initialize 0142  
